//
//  SymbolExtension+15.0.swift
//  Symbol
//
//  Created by otake on 2025/05/05.
//

import Foundation

@available(iOS 15.0, macOS 12.0, *)
public extension SymbolExtension {
    static let _123_rectangle: SymbolExtension = SymbolExtension(rawValue: "123_rectangle")
    static let _123_rectangle_fill: SymbolExtension = SymbolExtension(rawValue: "123_rectangle_fill")
    static let airplane_arrival: SymbolExtension = SymbolExtension(rawValue: "airplane_arrival")
    static let airplane_departure: SymbolExtension = SymbolExtension(rawValue: "airplane_departure")
    static let airplayaudio_badge_exclamationmark: SymbolExtension = SymbolExtension(rawValue: "airplayaudio_badge_exclamationmark")
    static let airplayaudio_circle: SymbolExtension = SymbolExtension(rawValue: "airplayaudio_circle")
    static let airplayaudio_circle_fill: SymbolExtension = SymbolExtension(rawValue: "airplayaudio_circle_fill")
    static let airplayvideo_badge_exclamationmark: SymbolExtension = SymbolExtension(rawValue: "airplayvideo_badge_exclamationmark")
    static let airplayvideo_circle: SymbolExtension = SymbolExtension(rawValue: "airplayvideo_circle")
    static let airplayvideo_circle_fill: SymbolExtension = SymbolExtension(rawValue: "airplayvideo_circle_fill")
    static let airpods_chargingcase: SymbolExtension = SymbolExtension(rawValue: "airpods_chargingcase")
    static let airpods_chargingcase_fill: SymbolExtension = SymbolExtension(rawValue: "airpods_chargingcase_fill")
    static let airpods_chargingcase_wireless: SymbolExtension = SymbolExtension(rawValue: "airpods_chargingcase_wireless")
    static let airpods_chargingcase_wireless_fill: SymbolExtension = SymbolExtension(rawValue: "airpods_chargingcase_wireless_fill")
    static let airpodspro_chargingcase_wireless: SymbolExtension = SymbolExtension(rawValue: "airpodspro_chargingcase_wireless")
    static let airpodspro_chargingcase_wireless_fill: SymbolExtension = SymbolExtension(rawValue: "airpodspro_chargingcase_wireless_fill")
    static let airtag: SymbolExtension = SymbolExtension(rawValue: "airtag")
    static let airtag_fill: SymbolExtension = SymbolExtension(rawValue: "airtag_fill")
    static let airtag_radiowaves_forward: SymbolExtension = SymbolExtension(rawValue: "airtag_radiowaves_forward")
    static let airtag_radiowaves_forward_fill: SymbolExtension = SymbolExtension(rawValue: "airtag_radiowaves_forward_fill")
    static let align_horizontal_center: SymbolExtension = SymbolExtension(rawValue: "align_horizontal_center")
    static let align_horizontal_center_fill: SymbolExtension = SymbolExtension(rawValue: "align_horizontal_center_fill")
    static let align_horizontal_left: SymbolExtension = SymbolExtension(rawValue: "align_horizontal_left")
    static let align_horizontal_left_fill: SymbolExtension = SymbolExtension(rawValue: "align_horizontal_left_fill")
    static let align_horizontal_right: SymbolExtension = SymbolExtension(rawValue: "align_horizontal_right")
    static let align_horizontal_right_fill: SymbolExtension = SymbolExtension(rawValue: "align_horizontal_right_fill")
    static let align_vertical_bottom: SymbolExtension = SymbolExtension(rawValue: "align_vertical_bottom")
    static let align_vertical_bottom_fill: SymbolExtension = SymbolExtension(rawValue: "align_vertical_bottom_fill")
    static let align_vertical_center: SymbolExtension = SymbolExtension(rawValue: "align_vertical_center")
    static let align_vertical_center_fill: SymbolExtension = SymbolExtension(rawValue: "align_vertical_center_fill")
    static let align_vertical_top: SymbolExtension = SymbolExtension(rawValue: "align_vertical_top")
    static let align_vertical_top_fill: SymbolExtension = SymbolExtension(rawValue: "align_vertical_top_fill")
    static let allergens: SymbolExtension = SymbolExtension(rawValue: "allergens")
    static let alternatingcurrent: SymbolExtension = SymbolExtension(rawValue: "alternatingcurrent")
    static let antenna_radiowaves_left_and_right_circle: SymbolExtension = SymbolExtension(rawValue: "antenna_radiowaves_left_and_right_circle")
    static let antenna_radiowaves_left_and_right_circle_fill: SymbolExtension = SymbolExtension(rawValue: "antenna_radiowaves_left_and_right_circle_fill")
    static let antenna_radiowaves_left_and_right_slash: SymbolExtension = SymbolExtension(rawValue: "antenna_radiowaves_left_and_right_slash")
    static let app_badge_checkmark: SymbolExtension = SymbolExtension(rawValue: "app_badge_checkmark")
    static let app_badge_checkmark_fill: SymbolExtension = SymbolExtension(rawValue: "app_badge_checkmark_fill")
    static let app_connected_to_app_below_fill: SymbolExtension = SymbolExtension(rawValue: "app_connected_to_app_below_fill")
    static let app_dashed: SymbolExtension = SymbolExtension(rawValue: "app_dashed")
    static let applepencil: SymbolExtension = SymbolExtension(rawValue: "applepencil")
    static let appletvremote_gen1: SymbolExtension = SymbolExtension(rawValue: "appletvremote_gen1")
    static let appletvremote_gen1_fill: SymbolExtension = SymbolExtension(rawValue: "appletvremote_gen1_fill")
    static let appletvremote_gen2: SymbolExtension = SymbolExtension(rawValue: "appletvremote_gen2")
    static let appletvremote_gen2_fill: SymbolExtension = SymbolExtension(rawValue: "appletvremote_gen2_fill")
    static let appletvremote_gen3: SymbolExtension = SymbolExtension(rawValue: "appletvremote_gen3")
    static let appletvremote_gen3_fill: SymbolExtension = SymbolExtension(rawValue: "appletvremote_gen3_fill")
    static let appletvremote_gen4: SymbolExtension = SymbolExtension(rawValue: "appletvremote_gen4")
    static let appletvremote_gen4_fill: SymbolExtension = SymbolExtension(rawValue: "appletvremote_gen4_fill")
    static let applewatch_case_inset_filled: SymbolExtension = SymbolExtension(rawValue: "applewatch_case_inset_filled")
    static let arkit_badge_xmark: SymbolExtension = SymbolExtension(rawValue: "arkit_badge_xmark")
    static let arrow_backward_to_line: SymbolExtension = SymbolExtension(rawValue: "arrow_backward_to_line")
    static let arrow_backward_to_line_circle: SymbolExtension = SymbolExtension(rawValue: "arrow_backward_to_line_circle")
    static let arrow_backward_to_line_circle_fill: SymbolExtension = SymbolExtension(rawValue: "arrow_backward_to_line_circle_fill")
    static let arrow_down_to_line_circle: SymbolExtension = SymbolExtension(rawValue: "arrow_down_to_line_circle")
    static let arrow_down_to_line_circle_fill: SymbolExtension = SymbolExtension(rawValue: "arrow_down_to_line_circle_fill")
    static let arrow_down_to_line_compact: SymbolExtension = SymbolExtension(rawValue: "arrow_down_to_line_compact")
    static let arrow_forward_to_line: SymbolExtension = SymbolExtension(rawValue: "arrow_forward_to_line")
    static let arrow_forward_to_line_circle: SymbolExtension = SymbolExtension(rawValue: "arrow_forward_to_line_circle")
    static let arrow_forward_to_line_circle_fill: SymbolExtension = SymbolExtension(rawValue: "arrow_forward_to_line_circle_fill")
    static let arrow_left_to_line_circle: SymbolExtension = SymbolExtension(rawValue: "arrow_left_to_line_circle")
    static let arrow_left_to_line_circle_fill: SymbolExtension = SymbolExtension(rawValue: "arrow_left_to_line_circle_fill")
    static let arrow_left_to_line_compact: SymbolExtension = SymbolExtension(rawValue: "arrow_left_to_line_compact")
    static let arrow_right_to_line_circle: SymbolExtension = SymbolExtension(rawValue: "arrow_right_to_line_circle")
    static let arrow_right_to_line_circle_fill: SymbolExtension = SymbolExtension(rawValue: "arrow_right_to_line_circle_fill")
    static let arrow_right_to_line_compact: SymbolExtension = SymbolExtension(rawValue: "arrow_right_to_line_compact")
    static let arrow_up_and_down_righttriangle_up_righttriangle_down_fill: SymbolExtension = SymbolExtension(rawValue: "arrow_up_and_down_righttriangle_up_righttriangle_down_fill")
    static let arrow_up_to_line_circle: SymbolExtension = SymbolExtension(rawValue: "arrow_up_to_line_circle")
    static let arrow_up_to_line_circle_fill: SymbolExtension = SymbolExtension(rawValue: "arrow_up_to_line_circle_fill")
    static let arrow_up_to_line_compact: SymbolExtension = SymbolExtension(rawValue: "arrow_up_to_line_compact")
    static let arrowtriangle_left_and_line_vertical_and_arrowtriangle_right_fill: SymbolExtension = SymbolExtension(rawValue: "arrowtriangle_left_and_line_vertical_and_arrowtriangle_right_fill")
    static let arrowtriangle_right_and_line_vertical_and_arrowtriangle_left_fill: SymbolExtension = SymbolExtension(rawValue: "arrowtriangle_right_and_line_vertical_and_arrowtriangle_left_fill")
    static let asterisk: SymbolExtension = SymbolExtension(rawValue: "asterisk")
    static let backward_circle: SymbolExtension = SymbolExtension(rawValue: "backward_circle")
    static let backward_circle_fill: SymbolExtension = SymbolExtension(rawValue: "backward_circle_fill")
    static let beats_earphones: SymbolExtension = SymbolExtension(rawValue: "beats_earphones")
    static let beats_headphones: SymbolExtension = SymbolExtension(rawValue: "beats_headphones")
    static let beats_powerbeats: SymbolExtension = SymbolExtension(rawValue: "beats_powerbeats")
    static let beats_powerbeats3: SymbolExtension = SymbolExtension(rawValue: "beats_powerbeats3")
    static let beats_powerbeatspro: SymbolExtension = SymbolExtension(rawValue: "beats_powerbeatspro")
    static let beats_powerbeatspro_chargingcase: SymbolExtension = SymbolExtension(rawValue: "beats_powerbeatspro_chargingcase")
    static let beats_powerbeatspro_chargingcase_fill: SymbolExtension = SymbolExtension(rawValue: "beats_powerbeatspro_chargingcase_fill")
    static let beats_powerbeatspro_left: SymbolExtension = SymbolExtension(rawValue: "beats_powerbeatspro_left")
    static let beats_powerbeatspro_right: SymbolExtension = SymbolExtension(rawValue: "beats_powerbeatspro_right")
    static let beats_studiobud_left: SymbolExtension = SymbolExtension(rawValue: "beats_studiobud_left")
    static let beats_studiobud_right: SymbolExtension = SymbolExtension(rawValue: "beats_studiobud_right")
    static let beats_studiobuds: SymbolExtension = SymbolExtension(rawValue: "beats_studiobuds")
    static let beats_studiobuds_chargingcase: SymbolExtension = SymbolExtension(rawValue: "beats_studiobuds_chargingcase")
    static let beats_studiobuds_chargingcase_fill: SymbolExtension = SymbolExtension(rawValue: "beats_studiobuds_chargingcase_fill")
    static let bed_double_circle: SymbolExtension = SymbolExtension(rawValue: "bed_double_circle")
    static let bed_double_circle_fill: SymbolExtension = SymbolExtension(rawValue: "bed_double_circle_fill")
    static let bell_badge_circle: SymbolExtension = SymbolExtension(rawValue: "bell_badge_circle")
    static let bell_badge_circle_fill: SymbolExtension = SymbolExtension(rawValue: "bell_badge_circle_fill")
    static let bell_square: SymbolExtension = SymbolExtension(rawValue: "bell_square")
    static let bell_square_fill: SymbolExtension = SymbolExtension(rawValue: "bell_square_fill")
    static let bolt_batteryblock: SymbolExtension = SymbolExtension(rawValue: "bolt_batteryblock")
    static let bolt_batteryblock_fill: SymbolExtension = SymbolExtension(rawValue: "bolt_batteryblock_fill")
    static let bolt_car_circle: SymbolExtension = SymbolExtension(rawValue: "bolt_car_circle")
    static let bolt_car_circle_fill: SymbolExtension = SymbolExtension(rawValue: "bolt_car_circle_fill")
    static let bolt_shield: SymbolExtension = SymbolExtension(rawValue: "bolt_shield")
    static let bolt_shield_fill: SymbolExtension = SymbolExtension(rawValue: "bolt_shield_fill")
    static let bolt_square: SymbolExtension = SymbolExtension(rawValue: "bolt_square")
    static let bolt_square_fill: SymbolExtension = SymbolExtension(rawValue: "bolt_square_fill")
    static let book_closed_circle: SymbolExtension = SymbolExtension(rawValue: "book_closed_circle")
    static let book_closed_circle_fill: SymbolExtension = SymbolExtension(rawValue: "book_closed_circle_fill")
    static let bookmark_square: SymbolExtension = SymbolExtension(rawValue: "bookmark_square")
    static let bookmark_square_fill: SymbolExtension = SymbolExtension(rawValue: "bookmark_square_fill")
    static let books_vertical_circle: SymbolExtension = SymbolExtension(rawValue: "books_vertical_circle")
    static let books_vertical_circle_fill: SymbolExtension = SymbolExtension(rawValue: "books_vertical_circle_fill")
    static let brain: SymbolExtension = SymbolExtension(rawValue: "brain")
    static let brain_head_profile: SymbolExtension = SymbolExtension(rawValue: "brain_head_profile")
    static let briefcase_circle: SymbolExtension = SymbolExtension(rawValue: "briefcase_circle")
    static let briefcase_circle_fill: SymbolExtension = SymbolExtension(rawValue: "briefcase_circle_fill")
    static let bubble_left_and_exclamationmark_bubble_right: SymbolExtension = SymbolExtension(rawValue: "bubble_left_and_exclamationmark_bubble_right")
    static let bubble_left_and_exclamationmark_bubble_right_fill: SymbolExtension = SymbolExtension(rawValue: "bubble_left_and_exclamationmark_bubble_right_fill")
    static let bubble_left_circle: SymbolExtension = SymbolExtension(rawValue: "bubble_left_circle")
    static let bubble_left_circle_fill: SymbolExtension = SymbolExtension(rawValue: "bubble_left_circle_fill")
    static let bubble_right_circle: SymbolExtension = SymbolExtension(rawValue: "bubble_right_circle")
    static let bubble_right_circle_fill: SymbolExtension = SymbolExtension(rawValue: "bubble_right_circle_fill")
    static let building_columns_circle: SymbolExtension = SymbolExtension(rawValue: "building_columns_circle")
    static let building_columns_circle_fill: SymbolExtension = SymbolExtension(rawValue: "building_columns_circle_fill")
    static let cable_connector: SymbolExtension = SymbolExtension(rawValue: "cable_connector")
    static let cable_connector_horizontal: SymbolExtension = SymbolExtension(rawValue: "cable_connector_horizontal")
    static let cablecar: SymbolExtension = SymbolExtension(rawValue: "cablecar")
    static let cablecar_fill: SymbolExtension = SymbolExtension(rawValue: "cablecar_fill")
    static let calendar_day_timeline_leading: SymbolExtension = SymbolExtension(rawValue: "calendar_day_timeline_leading")
    static let calendar_day_timeline_left: SymbolExtension = SymbolExtension(rawValue: "calendar_day_timeline_left")
    static let calendar_day_timeline_right: SymbolExtension = SymbolExtension(rawValue: "calendar_day_timeline_right")
    static let calendar_day_timeline_trailing: SymbolExtension = SymbolExtension(rawValue: "calendar_day_timeline_trailing")
    static let camera_shutter_button: SymbolExtension = SymbolExtension(rawValue: "camera_shutter_button")
    static let camera_shutter_button_fill: SymbolExtension = SymbolExtension(rawValue: "camera_shutter_button_fill")
    static let capsule_bottomhalf_filled: SymbolExtension = SymbolExtension(rawValue: "capsule_bottomhalf_filled")
    static let capsule_inset_filled: SymbolExtension = SymbolExtension(rawValue: "capsule_inset_filled")
    static let capsule_lefthalf_filled: SymbolExtension = SymbolExtension(rawValue: "capsule_lefthalf_filled")
    static let capsule_portrait_bottomhalf_filled: SymbolExtension = SymbolExtension(rawValue: "capsule_portrait_bottomhalf_filled")
    static let capsule_portrait_inset_filled: SymbolExtension = SymbolExtension(rawValue: "capsule_portrait_inset_filled")
    static let capsule_portrait_lefthalf_filled: SymbolExtension = SymbolExtension(rawValue: "capsule_portrait_lefthalf_filled")
    static let capsule_portrait_righthalf_filled: SymbolExtension = SymbolExtension(rawValue: "capsule_portrait_righthalf_filled")
    static let capsule_portrait_tophalf_filled: SymbolExtension = SymbolExtension(rawValue: "capsule_portrait_tophalf_filled")
    static let capsule_righthalf_filled: SymbolExtension = SymbolExtension(rawValue: "capsule_righthalf_filled")
    static let capsule_tophalf_filled: SymbolExtension = SymbolExtension(rawValue: "capsule_tophalf_filled")
    static let car_ferry: SymbolExtension = SymbolExtension(rawValue: "car_ferry")
    static let car_ferry_fill: SymbolExtension = SymbolExtension(rawValue: "car_ferry_fill")
    static let chart_line_uptrend_xyaxis: SymbolExtension = SymbolExtension(rawValue: "chart_line_uptrend_xyaxis")
    static let chart_line_uptrend_xyaxis_circle: SymbolExtension = SymbolExtension(rawValue: "chart_line_uptrend_xyaxis_circle")
    static let chart_line_uptrend_xyaxis_circle_fill: SymbolExtension = SymbolExtension(rawValue: "chart_line_uptrend_xyaxis_circle_fill")
    static let chart_xyaxis_line: SymbolExtension = SymbolExtension(rawValue: "chart_xyaxis_line")
    static let checklist: SymbolExtension = SymbolExtension(rawValue: "checklist")
    static let checkmark_bubble: SymbolExtension = SymbolExtension(rawValue: "checkmark_bubble")
    static let checkmark_bubble_fill: SymbolExtension = SymbolExtension(rawValue: "checkmark_bubble_fill")
    static let checkmark_circle_trianglebadge_exclamationmark: SymbolExtension = SymbolExtension(rawValue: "checkmark_circle_trianglebadge_exclamationmark")
    static let checkmark_diamond: SymbolExtension = SymbolExtension(rawValue: "checkmark_diamond")
    static let checkmark_diamond_fill: SymbolExtension = SymbolExtension(rawValue: "checkmark_diamond_fill")
    static let chevron_left_forwardslash_chevron_right: SymbolExtension = SymbolExtension(rawValue: "chevron_left_forwardslash_chevron_right")
    static let circle_and_line_horizontal: SymbolExtension = SymbolExtension(rawValue: "circle_and_line_horizontal")
    static let circle_and_line_horizontal_fill: SymbolExtension = SymbolExtension(rawValue: "circle_and_line_horizontal_fill")
    static let circle_bottomhalf_filled: SymbolExtension = SymbolExtension(rawValue: "circle_bottomhalf_filled")
    static let circle_dashed_inset_filled: SymbolExtension = SymbolExtension(rawValue: "circle_dashed_inset_filled")
    static let circle_dotted: SymbolExtension = SymbolExtension(rawValue: "circle_dotted")
    static let circle_grid_2x1: SymbolExtension = SymbolExtension(rawValue: "circle_grid_2x1")
    static let circle_grid_2x1_fill: SymbolExtension = SymbolExtension(rawValue: "circle_grid_2x1_fill")
    static let circle_grid_2x1_left_filled: SymbolExtension = SymbolExtension(rawValue: "circle_grid_2x1_left_filled")
    static let circle_grid_2x1_right_filled: SymbolExtension = SymbolExtension(rawValue: "circle_grid_2x1_right_filled")
    static let circle_grid_3x3_circle: SymbolExtension = SymbolExtension(rawValue: "circle_grid_3x3_circle")
    static let circle_grid_3x3_circle_fill: SymbolExtension = SymbolExtension(rawValue: "circle_grid_3x3_circle_fill")
    static let circle_grid_cross_down_filled: SymbolExtension = SymbolExtension(rawValue: "circle_grid_cross_down_filled")
    static let circle_grid_cross_left_filled: SymbolExtension = SymbolExtension(rawValue: "circle_grid_cross_left_filled")
    static let circle_grid_cross_right_filled: SymbolExtension = SymbolExtension(rawValue: "circle_grid_cross_right_filled")
    static let circle_grid_cross_up_filled: SymbolExtension = SymbolExtension(rawValue: "circle_grid_cross_up_filled")
    static let circle_hexagongrid: SymbolExtension = SymbolExtension(rawValue: "circle_hexagongrid")
    static let circle_hexagongrid_circle: SymbolExtension = SymbolExtension(rawValue: "circle_hexagongrid_circle")
    static let circle_hexagongrid_circle_fill: SymbolExtension = SymbolExtension(rawValue: "circle_hexagongrid_circle_fill")
    static let circle_hexagongrid_fill: SymbolExtension = SymbolExtension(rawValue: "circle_hexagongrid_fill")
    static let circle_hexagonpath: SymbolExtension = SymbolExtension(rawValue: "circle_hexagonpath")
    static let circle_hexagonpath_fill: SymbolExtension = SymbolExtension(rawValue: "circle_hexagonpath_fill")
    static let circle_inset_filled: SymbolExtension = SymbolExtension(rawValue: "circle_inset_filled")
    static let circle_lefthalf_filled: SymbolExtension = SymbolExtension(rawValue: "circle_lefthalf_filled")
    static let circle_righthalf_filled: SymbolExtension = SymbolExtension(rawValue: "circle_righthalf_filled")
    static let circle_slash: SymbolExtension = SymbolExtension(rawValue: "circle_slash")
    static let circle_slash_fill: SymbolExtension = SymbolExtension(rawValue: "circle_slash_fill")
    static let circle_square_fill: SymbolExtension = SymbolExtension(rawValue: "circle_square_fill")
    static let circle_tophalf_filled: SymbolExtension = SymbolExtension(rawValue: "circle_tophalf_filled")
    static let clock_badge_checkmark: SymbolExtension = SymbolExtension(rawValue: "clock_badge_checkmark")
    static let clock_badge_checkmark_fill: SymbolExtension = SymbolExtension(rawValue: "clock_badge_checkmark_fill")
    static let clock_badge_exclamationmark: SymbolExtension = SymbolExtension(rawValue: "clock_badge_exclamationmark")
    static let clock_badge_exclamationmark_fill: SymbolExtension = SymbolExtension(rawValue: "clock_badge_exclamationmark_fill")
    static let clock_circle: SymbolExtension = SymbolExtension(rawValue: "clock_circle")
    static let clock_circle_fill: SymbolExtension = SymbolExtension(rawValue: "clock_circle_fill")
    static let computermouse: SymbolExtension = SymbolExtension(rawValue: "computermouse")
    static let computermouse_fill: SymbolExtension = SymbolExtension(rawValue: "computermouse_fill")
    static let cpu_fill: SymbolExtension = SymbolExtension(rawValue: "cpu_fill")
    static let creditcard_and_123: SymbolExtension = SymbolExtension(rawValue: "creditcard_and_123")
    static let creditcard_trianglebadge_exclamationmark: SymbolExtension = SymbolExtension(rawValue: "creditcard_trianglebadge_exclamationmark")
    static let cross_vial: SymbolExtension = SymbolExtension(rawValue: "cross_vial")
    static let cross_vial_fill: SymbolExtension = SymbolExtension(rawValue: "cross_vial_fill")
    static let cup_and_saucer: SymbolExtension = SymbolExtension(rawValue: "cup_and_saucer")
    static let cup_and_saucer_fill: SymbolExtension = SymbolExtension(rawValue: "cup_and_saucer_fill")
    static let delete_backward: SymbolExtension = SymbolExtension(rawValue: "delete_backward")
    static let delete_backward_fill: SymbolExtension = SymbolExtension(rawValue: "delete_backward_fill")
    static let delete_forward: SymbolExtension = SymbolExtension(rawValue: "delete_forward")
    static let delete_forward_fill: SymbolExtension = SymbolExtension(rawValue: "delete_forward_fill")
    static let desktopcomputer_and_arrow_down: SymbolExtension = SymbolExtension(rawValue: "desktopcomputer_and_arrow_down")
    static let desktopcomputer_trianglebadge_exclamationmark: SymbolExtension = SymbolExtension(rawValue: "desktopcomputer_trianglebadge_exclamationmark")
    static let diamond_bottomhalf_filled: SymbolExtension = SymbolExtension(rawValue: "diamond_bottomhalf_filled")
    static let diamond_circle: SymbolExtension = SymbolExtension(rawValue: "diamond_circle")
    static let diamond_circle_fill: SymbolExtension = SymbolExtension(rawValue: "diamond_circle_fill")
    static let diamond_inset_filled: SymbolExtension = SymbolExtension(rawValue: "diamond_inset_filled")
    static let diamond_lefthalf_filled: SymbolExtension = SymbolExtension(rawValue: "diamond_lefthalf_filled")
    static let diamond_righthalf_filled: SymbolExtension = SymbolExtension(rawValue: "diamond_righthalf_filled")
    static let diamond_tophalf_filled: SymbolExtension = SymbolExtension(rawValue: "diamond_tophalf_filled")
    static let dice: SymbolExtension = SymbolExtension(rawValue: "dice")
    static let dice_fill: SymbolExtension = SymbolExtension(rawValue: "dice_fill")
    static let digitalcrown_arrow_clockwise: SymbolExtension = SymbolExtension(rawValue: "digitalcrown_arrow_clockwise")
    static let digitalcrown_arrow_clockwise_fill: SymbolExtension = SymbolExtension(rawValue: "digitalcrown_arrow_clockwise_fill")
    static let digitalcrown_arrow_counterclockwise: SymbolExtension = SymbolExtension(rawValue: "digitalcrown_arrow_counterclockwise")
    static let digitalcrown_arrow_counterclockwise_fill: SymbolExtension = SymbolExtension(rawValue: "digitalcrown_arrow_counterclockwise_fill")
    static let digitalcrown_horizontal_arrow_clockwise: SymbolExtension = SymbolExtension(rawValue: "digitalcrown_horizontal_arrow_clockwise")
    static let digitalcrown_horizontal_arrow_clockwise_fill: SymbolExtension = SymbolExtension(rawValue: "digitalcrown_horizontal_arrow_clockwise_fill")
    static let digitalcrown_horizontal_arrow_counterclockwise: SymbolExtension = SymbolExtension(rawValue: "digitalcrown_horizontal_arrow_counterclockwise")
    static let digitalcrown_horizontal_arrow_counterclockwise_fill: SymbolExtension = SymbolExtension(rawValue: "digitalcrown_horizontal_arrow_counterclockwise_fill")
    static let digitalcrown_horizontal_press: SymbolExtension = SymbolExtension(rawValue: "digitalcrown_horizontal_press")
    static let digitalcrown_horizontal_press_fill: SymbolExtension = SymbolExtension(rawValue: "digitalcrown_horizontal_press_fill")
    static let digitalcrown_press: SymbolExtension = SymbolExtension(rawValue: "digitalcrown_press")
    static let digitalcrown_press_fill: SymbolExtension = SymbolExtension(rawValue: "digitalcrown_press_fill")
    static let display_and_arrow_down: SymbolExtension = SymbolExtension(rawValue: "display_and_arrow_down")
    static let doc_text_image: SymbolExtension = SymbolExtension(rawValue: "doc_text_image")
    static let doc_text_image_fill: SymbolExtension = SymbolExtension(rawValue: "doc_text_image_fill")
    static let doc_viewfinder: SymbolExtension = SymbolExtension(rawValue: "doc_viewfinder")
    static let doc_viewfinder_fill: SymbolExtension = SymbolExtension(rawValue: "doc_viewfinder_fill")
    static let dot_circle_and_hand_point_up_left_fill: SymbolExtension = SymbolExtension(rawValue: "dot_circle_and_hand_point_up_left_fill")
    static let dot_circle_viewfinder: SymbolExtension = SymbolExtension(rawValue: "dot_circle_viewfinder")
    static let dot_radiowaves_up_forward: SymbolExtension = SymbolExtension(rawValue: "dot_radiowaves_up_forward")
    static let dot_viewfinder: SymbolExtension = SymbolExtension(rawValue: "dot_viewfinder")
    static let dpad_down_filled: SymbolExtension = SymbolExtension(rawValue: "dpad_down_filled")
    static let dpad_left_filled: SymbolExtension = SymbolExtension(rawValue: "dpad_left_filled")
    static let dpad_right_filled: SymbolExtension = SymbolExtension(rawValue: "dpad_right_filled")
    static let dpad_up_filled: SymbolExtension = SymbolExtension(rawValue: "dpad_up_filled")
    static let drop_circle: SymbolExtension = SymbolExtension(rawValue: "drop_circle")
    static let drop_circle_fill: SymbolExtension = SymbolExtension(rawValue: "drop_circle_fill")
    static let earbuds: SymbolExtension = SymbolExtension(rawValue: "earbuds")
    static let earbuds_case: SymbolExtension = SymbolExtension(rawValue: "earbuds_case")
    static let earbuds_case_fill: SymbolExtension = SymbolExtension(rawValue: "earbuds_case_fill")
    static let ellipsis_curlybraces: SymbolExtension = SymbolExtension(rawValue: "ellipsis_curlybraces")
    static let ellipsis_vertical_bubble: SymbolExtension = SymbolExtension(rawValue: "ellipsis_vertical_bubble")
    static let ellipsis_vertical_bubble_fill: SymbolExtension = SymbolExtension(rawValue: "ellipsis_vertical_bubble_fill")
    static let envelope_badge_shield_half_filled: SymbolExtension = SymbolExtension(rawValue: "envelope_badge_shield_half_filled")
    static let envelope_badge_shield_half_filled_fill: SymbolExtension = SymbolExtension(rawValue: "envelope_badge_shield_half_filled_fill")
    static let exclamationmark_bubble_circle: SymbolExtension = SymbolExtension(rawValue: "exclamationmark_bubble_circle")
    static let exclamationmark_bubble_circle_fill: SymbolExtension = SymbolExtension(rawValue: "exclamationmark_bubble_circle_fill")
    static let eye_slash_circle: SymbolExtension = SymbolExtension(rawValue: "eye_slash_circle")
    static let eye_slash_circle_fill: SymbolExtension = SymbolExtension(rawValue: "eye_slash_circle_fill")
    static let eye_square: SymbolExtension = SymbolExtension(rawValue: "eye_square")
    static let eye_square_fill: SymbolExtension = SymbolExtension(rawValue: "eye_square_fill")
    static let eye_trianglebadge_exclamationmark: SymbolExtension = SymbolExtension(rawValue: "eye_trianglebadge_exclamationmark")
    static let eye_trianglebadge_exclamationmark_fill: SymbolExtension = SymbolExtension(rawValue: "eye_trianglebadge_exclamationmark_fill")
    static let facemask: SymbolExtension = SymbolExtension(rawValue: "facemask")
    static let facemask_fill: SymbolExtension = SymbolExtension(rawValue: "facemask_fill")
    static let ferry: SymbolExtension = SymbolExtension(rawValue: "ferry")
    static let ferry_fill: SymbolExtension = SymbolExtension(rawValue: "ferry_fill")
    static let fibrechannel: SymbolExtension = SymbolExtension(rawValue: "fibrechannel")
    static let figure_roll: SymbolExtension = SymbolExtension(rawValue: "figure_roll")
    static let film_circle: SymbolExtension = SymbolExtension(rawValue: "film_circle")
    static let film_circle_fill: SymbolExtension = SymbolExtension(rawValue: "film_circle_fill")
    static let flag_2_crossed: SymbolExtension = SymbolExtension(rawValue: "flag_2_crossed")
    static let flag_2_crossed_fill: SymbolExtension = SymbolExtension(rawValue: "flag_2_crossed_fill")
    static let flag_and_flag_filled_crossed: SymbolExtension = SymbolExtension(rawValue: "flag_and_flag_filled_crossed")
    static let flag_filled_and_flag_crossed: SymbolExtension = SymbolExtension(rawValue: "flag_filled_and_flag_crossed")
    static let flag_square: SymbolExtension = SymbolExtension(rawValue: "flag_square")
    static let flag_square_fill: SymbolExtension = SymbolExtension(rawValue: "flag_square_fill")
    static let flame_circle: SymbolExtension = SymbolExtension(rawValue: "flame_circle")
    static let flame_circle_fill: SymbolExtension = SymbolExtension(rawValue: "flame_circle_fill")
    static let folder_badge_gearshape: SymbolExtension = SymbolExtension(rawValue: "folder_badge_gearshape")
    static let folder_fill_badge_gearshape: SymbolExtension = SymbolExtension(rawValue: "folder_fill_badge_gearshape")
    static let fork_knife: SymbolExtension = SymbolExtension(rawValue: "fork_knife")
    static let fork_knife_circle: SymbolExtension = SymbolExtension(rawValue: "fork_knife_circle")
    static let fork_knife_circle_fill: SymbolExtension = SymbolExtension(rawValue: "fork_knife_circle_fill")
    static let forward_circle: SymbolExtension = SymbolExtension(rawValue: "forward_circle")
    static let forward_circle_fill: SymbolExtension = SymbolExtension(rawValue: "forward_circle_fill")
    static let fuelpump: SymbolExtension = SymbolExtension(rawValue: "fuelpump")
    static let fuelpump_circle: SymbolExtension = SymbolExtension(rawValue: "fuelpump_circle")
    static let fuelpump_circle_fill: SymbolExtension = SymbolExtension(rawValue: "fuelpump_circle_fill")
    static let fuelpump_fill: SymbolExtension = SymbolExtension(rawValue: "fuelpump_fill")
    static let gear_badge_checkmark: SymbolExtension = SymbolExtension(rawValue: "gear_badge_checkmark")
    static let gear_badge_questionmark: SymbolExtension = SymbolExtension(rawValue: "gear_badge_questionmark")
    static let gear_badge_xmark: SymbolExtension = SymbolExtension(rawValue: "gear_badge_xmark")
    static let gear_circle: SymbolExtension = SymbolExtension(rawValue: "gear_circle")
    static let gear_circle_fill: SymbolExtension = SymbolExtension(rawValue: "gear_circle_fill")
    static let gearshape_circle: SymbolExtension = SymbolExtension(rawValue: "gearshape_circle")
    static let gearshape_circle_fill: SymbolExtension = SymbolExtension(rawValue: "gearshape_circle_fill")
    static let globe_americas: SymbolExtension = SymbolExtension(rawValue: "globe_americas")
    static let globe_americas_fill: SymbolExtension = SymbolExtension(rawValue: "globe_americas_fill")
    static let globe_asia_australia: SymbolExtension = SymbolExtension(rawValue: "globe_asia_australia")
    static let globe_asia_australia_fill: SymbolExtension = SymbolExtension(rawValue: "globe_asia_australia_fill")
    static let globe_badge_chevron_backward: SymbolExtension = SymbolExtension(rawValue: "globe_badge_chevron_backward")
    static let globe_europe_africa: SymbolExtension = SymbolExtension(rawValue: "globe_europe_africa")
    static let globe_europe_africa_fill: SymbolExtension = SymbolExtension(rawValue: "globe_europe_africa_fill")
    static let gobackward_5: SymbolExtension = SymbolExtension(rawValue: "gobackward_5")
    static let goforward_5: SymbolExtension = SymbolExtension(rawValue: "goforward_5")
    static let graduationcap_circle: SymbolExtension = SymbolExtension(rawValue: "graduationcap_circle")
    static let graduationcap_circle_fill: SymbolExtension = SymbolExtension(rawValue: "graduationcap_circle_fill")
    static let h_square_on_square_fill: SymbolExtension = SymbolExtension(rawValue: "h_square_on_square_fill")
    static let hammer_circle: SymbolExtension = SymbolExtension(rawValue: "hammer_circle")
    static let hammer_circle_fill: SymbolExtension = SymbolExtension(rawValue: "hammer_circle_fill")
    static let hand_raised_circle: SymbolExtension = SymbolExtension(rawValue: "hand_raised_circle")
    static let hand_raised_circle_fill: SymbolExtension = SymbolExtension(rawValue: "hand_raised_circle_fill")
    static let hand_raised_square: SymbolExtension = SymbolExtension(rawValue: "hand_raised_square")
    static let hand_raised_square_fill: SymbolExtension = SymbolExtension(rawValue: "hand_raised_square_fill")
    static let hand_raised_square_on_square: SymbolExtension = SymbolExtension(rawValue: "hand_raised_square_on_square")
    static let hand_raised_square_on_square_fill: SymbolExtension = SymbolExtension(rawValue: "hand_raised_square_on_square_fill")
    static let hand_thumbsdown_circle: SymbolExtension = SymbolExtension(rawValue: "hand_thumbsdown_circle")
    static let hand_thumbsdown_circle_fill: SymbolExtension = SymbolExtension(rawValue: "hand_thumbsdown_circle_fill")
    static let hand_thumbsup_circle: SymbolExtension = SymbolExtension(rawValue: "hand_thumbsup_circle")
    static let hand_thumbsup_circle_fill: SymbolExtension = SymbolExtension(rawValue: "hand_thumbsup_circle_fill")
    static let hearingdevice_ear: SymbolExtension = SymbolExtension(rawValue: "hearingdevice_ear")
    static let heart_rectangle: SymbolExtension = SymbolExtension(rawValue: "heart_rectangle")
    static let heart_rectangle_fill: SymbolExtension = SymbolExtension(rawValue: "heart_rectangle_fill")
    static let heart_square: SymbolExtension = SymbolExtension(rawValue: "heart_square")
    static let heart_square_fill: SymbolExtension = SymbolExtension(rawValue: "heart_square_fill")
    static let hexagon_bottomhalf_filled: SymbolExtension = SymbolExtension(rawValue: "hexagon_bottomhalf_filled")
    static let hexagon_lefthalf_filled: SymbolExtension = SymbolExtension(rawValue: "hexagon_lefthalf_filled")
    static let hexagon_righthalf_filled: SymbolExtension = SymbolExtension(rawValue: "hexagon_righthalf_filled")
    static let hexagon_tophalf_filled: SymbolExtension = SymbolExtension(rawValue: "hexagon_tophalf_filled")
    static let hifispeaker_and_appletv: SymbolExtension = SymbolExtension(rawValue: "hifispeaker_and_appletv")
    static let hifispeaker_and_appletv_fill: SymbolExtension = SymbolExtension(rawValue: "hifispeaker_and_appletv_fill")
    static let homepod_and_appletv: SymbolExtension = SymbolExtension(rawValue: "homepod_and_appletv")
    static let homepod_and_appletv_fill: SymbolExtension = SymbolExtension(rawValue: "homepod_and_appletv_fill")
    static let homepodmini_and_appletv: SymbolExtension = SymbolExtension(rawValue: "homepodmini_and_appletv")
    static let homepodmini_and_appletv_fill: SymbolExtension = SymbolExtension(rawValue: "homepodmini_and_appletv_fill")
    static let hourglass_bottomhalf_filled: SymbolExtension = SymbolExtension(rawValue: "hourglass_bottomhalf_filled")
    static let hourglass_circle: SymbolExtension = SymbolExtension(rawValue: "hourglass_circle")
    static let hourglass_circle_fill: SymbolExtension = SymbolExtension(rawValue: "hourglass_circle_fill")
    static let hourglass_tophalf_filled: SymbolExtension = SymbolExtension(rawValue: "hourglass_tophalf_filled")
    static let humidity: SymbolExtension = SymbolExtension(rawValue: "humidity")
    static let humidity_fill: SymbolExtension = SymbolExtension(rawValue: "humidity_fill")
    static let icloud_square: SymbolExtension = SymbolExtension(rawValue: "icloud_square")
    static let icloud_square_fill: SymbolExtension = SymbolExtension(rawValue: "icloud_square_fill")
    static let ipad_and_arrow_forward: SymbolExtension = SymbolExtension(rawValue: "ipad_and_arrow_forward")
    static let ipad_and_iphone: SymbolExtension = SymbolExtension(rawValue: "ipad_and_iphone")
    static let ipad_rear_camera: SymbolExtension = SymbolExtension(rawValue: "ipad_rear_camera")
    static let iphone_and_arrow_forward: SymbolExtension = SymbolExtension(rawValue: "iphone_and_arrow_forward")
    static let iphone_circle: SymbolExtension = SymbolExtension(rawValue: "iphone_circle")
    static let iphone_circle_fill: SymbolExtension = SymbolExtension(rawValue: "iphone_circle_fill")
    static let iphone_radiowaves_left_and_right_circle: SymbolExtension = SymbolExtension(rawValue: "iphone_radiowaves_left_and_right_circle")
    static let iphone_radiowaves_left_and_right_circle_fill: SymbolExtension = SymbolExtension(rawValue: "iphone_radiowaves_left_and_right_circle_fill")
    static let iphone_rear_camera: SymbolExtension = SymbolExtension(rawValue: "iphone_rear_camera")
    static let iphone_slash_circle: SymbolExtension = SymbolExtension(rawValue: "iphone_slash_circle")
    static let iphone_slash_circle_fill: SymbolExtension = SymbolExtension(rawValue: "iphone_slash_circle_fill")
    static let iphone_smartbatterycase_gen1: SymbolExtension = SymbolExtension(rawValue: "iphone_smartbatterycase_gen1")
    static let iphone_smartbatterycase_gen2: SymbolExtension = SymbolExtension(rawValue: "iphone_smartbatterycase_gen2")
    static let ipodtouch_slash: SymbolExtension = SymbolExtension(rawValue: "ipodtouch_slash")
    static let ivfluid_bag: SymbolExtension = SymbolExtension(rawValue: "ivfluid_bag")
    static let ivfluid_bag_fill: SymbolExtension = SymbolExtension(rawValue: "ivfluid_bag_fill")
    static let j_square_on_square_fill: SymbolExtension = SymbolExtension(rawValue: "j_square_on_square_fill")
    static let keyboard_fill: SymbolExtension = SymbolExtension(rawValue: "keyboard_fill")
    static let l_joystick_press_down: SymbolExtension = SymbolExtension(rawValue: "l_joystick_press_down")
    static let l_joystick_press_down_fill: SymbolExtension = SymbolExtension(rawValue: "l_joystick_press_down_fill")
    static let l_joystick_tilt_down: SymbolExtension = SymbolExtension(rawValue: "l_joystick_tilt_down")
    static let l_joystick_tilt_down_fill: SymbolExtension = SymbolExtension(rawValue: "l_joystick_tilt_down_fill")
    static let l_joystick_tilt_left: SymbolExtension = SymbolExtension(rawValue: "l_joystick_tilt_left")
    static let l_joystick_tilt_left_fill: SymbolExtension = SymbolExtension(rawValue: "l_joystick_tilt_left_fill")
    static let l_joystick_tilt_right: SymbolExtension = SymbolExtension(rawValue: "l_joystick_tilt_right")
    static let l_joystick_tilt_right_fill: SymbolExtension = SymbolExtension(rawValue: "l_joystick_tilt_right_fill")
    static let l_joystick_tilt_up: SymbolExtension = SymbolExtension(rawValue: "l_joystick_tilt_up")
    static let l_joystick_tilt_up_fill: SymbolExtension = SymbolExtension(rawValue: "l_joystick_tilt_up_fill")
    static let lanyardcard: SymbolExtension = SymbolExtension(rawValue: "lanyardcard")
    static let lanyardcard_fill: SymbolExtension = SymbolExtension(rawValue: "lanyardcard_fill")
    static let laptopcomputer_and_arrow_down: SymbolExtension = SymbolExtension(rawValue: "laptopcomputer_and_arrow_down")
    static let laptopcomputer_trianglebadge_exclamationmark: SymbolExtension = SymbolExtension(rawValue: "laptopcomputer_trianglebadge_exclamationmark")
    static let leaf_circle: SymbolExtension = SymbolExtension(rawValue: "leaf_circle")
    static let leaf_circle_fill: SymbolExtension = SymbolExtension(rawValue: "leaf_circle_fill")
    static let lightbulb_circle: SymbolExtension = SymbolExtension(rawValue: "lightbulb_circle")
    static let lightbulb_circle_fill: SymbolExtension = SymbolExtension(rawValue: "lightbulb_circle_fill")
    static let line_2_horizontal_decrease_circle: SymbolExtension = SymbolExtension(rawValue: "line_2_horizontal_decrease_circle")
    static let line_2_horizontal_decrease_circle_fill: SymbolExtension = SymbolExtension(rawValue: "line_2_horizontal_decrease_circle_fill")
    static let line_3_horizontal: SymbolExtension = SymbolExtension(rawValue: "line_3_horizontal")
    static let line_3_horizontal_circle: SymbolExtension = SymbolExtension(rawValue: "line_3_horizontal_circle")
    static let line_3_horizontal_circle_fill: SymbolExtension = SymbolExtension(rawValue: "line_3_horizontal_circle_fill")
    static let line_3_horizontal_decrease: SymbolExtension = SymbolExtension(rawValue: "line_3_horizontal_decrease")
    static let line_3_horizontal_decrease_circle: SymbolExtension = SymbolExtension(rawValue: "line_3_horizontal_decrease_circle")
    static let line_3_horizontal_decrease_circle_fill: SymbolExtension = SymbolExtension(rawValue: "line_3_horizontal_decrease_circle_fill")
    static let lines_measurement_horizontal: SymbolExtension = SymbolExtension(rawValue: "lines_measurement_horizontal")
    static let list_bullet_circle: SymbolExtension = SymbolExtension(rawValue: "list_bullet_circle")
    static let list_bullet_circle_fill: SymbolExtension = SymbolExtension(rawValue: "list_bullet_circle_fill")
    static let list_bullet_rectangle_fill: SymbolExtension = SymbolExtension(rawValue: "list_bullet_rectangle_fill")
    static let list_bullet_rectangle_portrait: SymbolExtension = SymbolExtension(rawValue: "list_bullet_rectangle_portrait")
    static let list_bullet_rectangle_portrait_fill: SymbolExtension = SymbolExtension(rawValue: "list_bullet_rectangle_portrait_fill")
    static let list_dash_header_rectangle: SymbolExtension = SymbolExtension(rawValue: "list_dash_header_rectangle")
    static let location_magnifyingglass: SymbolExtension = SymbolExtension(rawValue: "location_magnifyingglass")
    static let location_north_circle: SymbolExtension = SymbolExtension(rawValue: "location_north_circle")
    static let location_north_circle_fill: SymbolExtension = SymbolExtension(rawValue: "location_north_circle_fill")
    static let location_square: SymbolExtension = SymbolExtension(rawValue: "location_square")
    static let location_square_fill: SymbolExtension = SymbolExtension(rawValue: "location_square_fill")
    static let lock_desktopcomputer: SymbolExtension = SymbolExtension(rawValue: "lock_desktopcomputer")
    static let lock_display: SymbolExtension = SymbolExtension(rawValue: "lock_display")
    static let lock_ipad: SymbolExtension = SymbolExtension(rawValue: "lock_ipad")
    static let lock_iphone: SymbolExtension = SymbolExtension(rawValue: "lock_iphone")
    static let lock_laptopcomputer: SymbolExtension = SymbolExtension(rawValue: "lock_laptopcomputer")
    static let lock_open_applewatch: SymbolExtension = SymbolExtension(rawValue: "lock_open_applewatch")
    static let lock_open_desktopcomputer: SymbolExtension = SymbolExtension(rawValue: "lock_open_desktopcomputer")
    static let lock_open_display: SymbolExtension = SymbolExtension(rawValue: "lock_open_display")
    static let lock_open_ipad: SymbolExtension = SymbolExtension(rawValue: "lock_open_ipad")
    static let lock_open_iphone: SymbolExtension = SymbolExtension(rawValue: "lock_open_iphone")
    static let lock_open_laptopcomputer: SymbolExtension = SymbolExtension(rawValue: "lock_open_laptopcomputer")
    static let macpro_gen1_fill: SymbolExtension = SymbolExtension(rawValue: "macpro_gen1_fill")
    static let macpro_gen3_fill: SymbolExtension = SymbolExtension(rawValue: "macpro_gen3_fill")
    static let magazine: SymbolExtension = SymbolExtension(rawValue: "magazine")
    static let magazine_fill: SymbolExtension = SymbolExtension(rawValue: "magazine_fill")
    static let magicmouse: SymbolExtension = SymbolExtension(rawValue: "magicmouse")
    static let magicmouse_fill: SymbolExtension = SymbolExtension(rawValue: "magicmouse_fill")
    static let magsafe_batterypack: SymbolExtension = SymbolExtension(rawValue: "magsafe_batterypack")
    static let magsafe_batterypack_fill: SymbolExtension = SymbolExtension(rawValue: "magsafe_batterypack_fill")
    static let map_circle: SymbolExtension = SymbolExtension(rawValue: "map_circle")
    static let map_circle_fill: SymbolExtension = SymbolExtension(rawValue: "map_circle_fill")
    static let mappin_slash_circle: SymbolExtension = SymbolExtension(rawValue: "mappin_slash_circle")
    static let mappin_slash_circle_fill: SymbolExtension = SymbolExtension(rawValue: "mappin_slash_circle_fill")
    static let mappin_square: SymbolExtension = SymbolExtension(rawValue: "mappin_square")
    static let mappin_square_fill: SymbolExtension = SymbolExtension(rawValue: "mappin_square_fill")
    static let mediastick: SymbolExtension = SymbolExtension(rawValue: "mediastick")
    static let memorychip_fill: SymbolExtension = SymbolExtension(rawValue: "memorychip_fill")
    static let menucard: SymbolExtension = SymbolExtension(rawValue: "menucard")
    static let menucard_fill: SymbolExtension = SymbolExtension(rawValue: "menucard_fill")
    static let mic_badge_plus: SymbolExtension = SymbolExtension(rawValue: "mic_badge_plus")
    static let mic_fill_badge_plus: SymbolExtension = SymbolExtension(rawValue: "mic_fill_badge_plus")
    static let mic_slash_circle: SymbolExtension = SymbolExtension(rawValue: "mic_slash_circle")
    static let mic_slash_circle_fill: SymbolExtension = SymbolExtension(rawValue: "mic_slash_circle_fill")
    static let mic_square: SymbolExtension = SymbolExtension(rawValue: "mic_square")
    static let mic_square_fill: SymbolExtension = SymbolExtension(rawValue: "mic_square_fill")
    static let minus_forwardslash_plus: SymbolExtension = SymbolExtension(rawValue: "minus_forwardslash_plus")
    static let music_mic_circle: SymbolExtension = SymbolExtension(rawValue: "music_mic_circle")
    static let music_mic_circle_fill: SymbolExtension = SymbolExtension(rawValue: "music_mic_circle_fill")
    static let music_note_tv: SymbolExtension = SymbolExtension(rawValue: "music_note_tv")
    static let music_note_tv_fill: SymbolExtension = SymbolExtension(rawValue: "music_note_tv_fill")
    static let network_badge_shield_half_filled: SymbolExtension = SymbolExtension(rawValue: "network_badge_shield_half_filled")
    static let newspaper_circle: SymbolExtension = SymbolExtension(rawValue: "newspaper_circle")
    static let newspaper_circle_fill: SymbolExtension = SymbolExtension(rawValue: "newspaper_circle_fill")
    static let octagon_bottomhalf_filled: SymbolExtension = SymbolExtension(rawValue: "octagon_bottomhalf_filled")
    static let octagon_lefthalf_filled: SymbolExtension = SymbolExtension(rawValue: "octagon_lefthalf_filled")
    static let octagon_righthalf_filled: SymbolExtension = SymbolExtension(rawValue: "octagon_righthalf_filled")
    static let octagon_tophalf_filled: SymbolExtension = SymbolExtension(rawValue: "octagon_tophalf_filled")
    static let oval_bottomhalf_filled: SymbolExtension = SymbolExtension(rawValue: "oval_bottomhalf_filled")
    static let oval_inset_filled: SymbolExtension = SymbolExtension(rawValue: "oval_inset_filled")
    static let oval_lefthalf_filled: SymbolExtension = SymbolExtension(rawValue: "oval_lefthalf_filled")
    static let oval_portrait_bottomhalf_filled: SymbolExtension = SymbolExtension(rawValue: "oval_portrait_bottomhalf_filled")
    static let oval_portrait_inset_filled: SymbolExtension = SymbolExtension(rawValue: "oval_portrait_inset_filled")
    static let oval_portrait_lefthalf_filled: SymbolExtension = SymbolExtension(rawValue: "oval_portrait_lefthalf_filled")
    static let oval_portrait_righthalf_filled: SymbolExtension = SymbolExtension(rawValue: "oval_portrait_righthalf_filled")
    static let oval_portrait_tophalf_filled: SymbolExtension = SymbolExtension(rawValue: "oval_portrait_tophalf_filled")
    static let oval_righthalf_filled: SymbolExtension = SymbolExtension(rawValue: "oval_righthalf_filled")
    static let oval_tophalf_filled: SymbolExtension = SymbolExtension(rawValue: "oval_tophalf_filled")
    static let parentheses: SymbolExtension = SymbolExtension(rawValue: "parentheses")
    static let parkingsign: SymbolExtension = SymbolExtension(rawValue: "parkingsign")
    static let parkingsign_circle: SymbolExtension = SymbolExtension(rawValue: "parkingsign_circle")
    static let parkingsign_circle_fill: SymbolExtension = SymbolExtension(rawValue: "parkingsign_circle_fill")
    static let pawprint: SymbolExtension = SymbolExtension(rawValue: "pawprint")
    static let pawprint_circle: SymbolExtension = SymbolExtension(rawValue: "pawprint_circle")
    static let pawprint_circle_fill: SymbolExtension = SymbolExtension(rawValue: "pawprint_circle_fill")
    static let pawprint_fill: SymbolExtension = SymbolExtension(rawValue: "pawprint_fill")
    static let peacesign: SymbolExtension = SymbolExtension(rawValue: "peacesign")
    static let pentagon: SymbolExtension = SymbolExtension(rawValue: "pentagon")
    static let pentagon_bottomhalf_filled: SymbolExtension = SymbolExtension(rawValue: "pentagon_bottomhalf_filled")
    static let pentagon_fill: SymbolExtension = SymbolExtension(rawValue: "pentagon_fill")
    static let pentagon_lefthalf_filled: SymbolExtension = SymbolExtension(rawValue: "pentagon_lefthalf_filled")
    static let pentagon_righthalf_filled: SymbolExtension = SymbolExtension(rawValue: "pentagon_righthalf_filled")
    static let pentagon_tophalf_filled: SymbolExtension = SymbolExtension(rawValue: "pentagon_tophalf_filled")
    static let person_2_crop_square_stack: SymbolExtension = SymbolExtension(rawValue: "person_2_crop_square_stack")
    static let person_2_crop_square_stack_fill: SymbolExtension = SymbolExtension(rawValue: "person_2_crop_square_stack_fill")
    static let person_2_wave_2: SymbolExtension = SymbolExtension(rawValue: "person_2_wave_2")
    static let person_2_wave_2_fill: SymbolExtension = SymbolExtension(rawValue: "person_2_wave_2_fill")
    static let person_3_sequence: SymbolExtension = SymbolExtension(rawValue: "person_3_sequence")
    static let person_3_sequence_fill: SymbolExtension = SymbolExtension(rawValue: "person_3_sequence_fill")
    static let person_badge_clock: SymbolExtension = SymbolExtension(rawValue: "person_badge_clock")
    static let person_badge_clock_fill: SymbolExtension = SymbolExtension(rawValue: "person_badge_clock_fill")
    static let person_crop_artframe: SymbolExtension = SymbolExtension(rawValue: "person_crop_artframe")
    static let person_crop_circle_badge: SymbolExtension = SymbolExtension(rawValue: "person_crop_circle_badge")
    static let person_crop_circle_badge_clock: SymbolExtension = SymbolExtension(rawValue: "person_crop_circle_badge_clock")
    static let person_crop_circle_badge_clock_fill: SymbolExtension = SymbolExtension(rawValue: "person_crop_circle_badge_clock_fill")
    static let person_crop_circle_badge_exclamationmark_fill: SymbolExtension = SymbolExtension(rawValue: "person_crop_circle_badge_exclamationmark_fill")
    static let person_crop_circle_badge_fill: SymbolExtension = SymbolExtension(rawValue: "person_crop_circle_badge_fill")
    static let person_crop_circle_badge_moon: SymbolExtension = SymbolExtension(rawValue: "person_crop_circle_badge_moon")
    static let person_crop_circle_badge_moon_fill: SymbolExtension = SymbolExtension(rawValue: "person_crop_circle_badge_moon_fill")
    static let person_crop_circle_badge_questionmark_fill: SymbolExtension = SymbolExtension(rawValue: "person_crop_circle_badge_questionmark_fill")
    static let person_crop_rectangle_stack: SymbolExtension = SymbolExtension(rawValue: "person_crop_rectangle_stack")
    static let person_crop_rectangle_stack_fill: SymbolExtension = SymbolExtension(rawValue: "person_crop_rectangle_stack_fill")
    static let person_crop_square_filled_and_at_rectangle: SymbolExtension = SymbolExtension(rawValue: "person_crop_square_filled_and_at_rectangle")
    static let person_crop_square_filled_and_at_rectangle_fill: SymbolExtension = SymbolExtension(rawValue: "person_crop_square_filled_and_at_rectangle_fill")
    static let person_text_rectangle: SymbolExtension = SymbolExtension(rawValue: "person_text_rectangle")
    static let person_text_rectangle_fill: SymbolExtension = SymbolExtension(rawValue: "person_text_rectangle_fill")
    static let person_wave_2: SymbolExtension = SymbolExtension(rawValue: "person_wave_2")
    static let person_wave_2_fill: SymbolExtension = SymbolExtension(rawValue: "person_wave_2_fill")
    static let personalhotspot_circle: SymbolExtension = SymbolExtension(rawValue: "personalhotspot_circle")
    static let personalhotspot_circle_fill: SymbolExtension = SymbolExtension(rawValue: "personalhotspot_circle_fill")
    static let photo_artframe: SymbolExtension = SymbolExtension(rawValue: "photo_artframe")
    static let photo_circle: SymbolExtension = SymbolExtension(rawValue: "photo_circle")
    static let photo_circle_fill: SymbolExtension = SymbolExtension(rawValue: "photo_circle_fill")
    static let pills_circle: SymbolExtension = SymbolExtension(rawValue: "pills_circle")
    static let pills_circle_fill: SymbolExtension = SymbolExtension(rawValue: "pills_circle_fill")
    static let pin_square: SymbolExtension = SymbolExtension(rawValue: "pin_square")
    static let pin_square_fill: SymbolExtension = SymbolExtension(rawValue: "pin_square_fill")
    static let platter_2_filled_ipad: SymbolExtension = SymbolExtension(rawValue: "platter_2_filled_ipad")
    static let platter_2_filled_ipad_landscape: SymbolExtension = SymbolExtension(rawValue: "platter_2_filled_ipad_landscape")
    static let platter_2_filled_iphone: SymbolExtension = SymbolExtension(rawValue: "platter_2_filled_iphone")
    static let platter_2_filled_iphone_landscape: SymbolExtension = SymbolExtension(rawValue: "platter_2_filled_iphone_landscape")
    static let platter_bottom_applewatch_case: SymbolExtension = SymbolExtension(rawValue: "platter_bottom_applewatch_case")
    static let platter_filled_bottom_applewatch_case: SymbolExtension = SymbolExtension(rawValue: "platter_filled_bottom_applewatch_case")
    static let platter_filled_top_applewatch_case: SymbolExtension = SymbolExtension(rawValue: "platter_filled_top_applewatch_case")
    static let platter_top_applewatch_case: SymbolExtension = SymbolExtension(rawValue: "platter_top_applewatch_case")
    static let play_rectangle_on_rectangle: SymbolExtension = SymbolExtension(rawValue: "play_rectangle_on_rectangle")
    static let play_rectangle_on_rectangle_circle: SymbolExtension = SymbolExtension(rawValue: "play_rectangle_on_rectangle_circle")
    static let play_rectangle_on_rectangle_circle_fill: SymbolExtension = SymbolExtension(rawValue: "play_rectangle_on_rectangle_circle_fill")
    static let play_rectangle_on_rectangle_fill: SymbolExtension = SymbolExtension(rawValue: "play_rectangle_on_rectangle_fill")
    static let play_square: SymbolExtension = SymbolExtension(rawValue: "play_square")
    static let play_square_fill: SymbolExtension = SymbolExtension(rawValue: "play_square_fill")
    static let plus_forwardslash_minus: SymbolExtension = SymbolExtension(rawValue: "plus_forwardslash_minus")
    static let plus_rectangle_on_folder_fill: SymbolExtension = SymbolExtension(rawValue: "plus_rectangle_on_folder_fill")
    static let plus_square_dashed: SymbolExtension = SymbolExtension(rawValue: "plus_square_dashed")
    static let point_3_connected_trianglepath_dotted: SymbolExtension = SymbolExtension(rawValue: "point_3_connected_trianglepath_dotted")
    static let point_3_filled_connected_trianglepath_dotted: SymbolExtension = SymbolExtension(rawValue: "point_3_filled_connected_trianglepath_dotted")
    static let power_circle: SymbolExtension = SymbolExtension(rawValue: "power_circle")
    static let power_circle_fill: SymbolExtension = SymbolExtension(rawValue: "power_circle_fill")
    static let power_dotted: SymbolExtension = SymbolExtension(rawValue: "power_dotted")
    static let powerplug: SymbolExtension = SymbolExtension(rawValue: "powerplug")
    static let powerplug_fill: SymbolExtension = SymbolExtension(rawValue: "powerplug_fill")
    static let printer_dotmatrix_filled_and_paper: SymbolExtension = SymbolExtension(rawValue: "printer_dotmatrix_filled_and_paper")
    static let printer_filled_and_paper: SymbolExtension = SymbolExtension(rawValue: "printer_filled_and_paper")
    static let puzzlepiece_extension: SymbolExtension = SymbolExtension(rawValue: "puzzlepiece_extension")
    static let puzzlepiece_extension_fill: SymbolExtension = SymbolExtension(rawValue: "puzzlepiece_extension_fill")
    static let questionmark_app: SymbolExtension = SymbolExtension(rawValue: "questionmark_app")
    static let questionmark_app_dashed: SymbolExtension = SymbolExtension(rawValue: "questionmark_app_dashed")
    static let questionmark_app_fill: SymbolExtension = SymbolExtension(rawValue: "questionmark_app_fill")
    static let quote_closing: SymbolExtension = SymbolExtension(rawValue: "quote_closing")
    static let quote_opening: SymbolExtension = SymbolExtension(rawValue: "quote_opening")
    static let r_joystick_press_down: SymbolExtension = SymbolExtension(rawValue: "r_joystick_press_down")
    static let r_joystick_press_down_fill: SymbolExtension = SymbolExtension(rawValue: "r_joystick_press_down_fill")
    static let r_joystick_tilt_down: SymbolExtension = SymbolExtension(rawValue: "r_joystick_tilt_down")
    static let r_joystick_tilt_down_fill: SymbolExtension = SymbolExtension(rawValue: "r_joystick_tilt_down_fill")
    static let r_joystick_tilt_left: SymbolExtension = SymbolExtension(rawValue: "r_joystick_tilt_left")
    static let r_joystick_tilt_left_fill: SymbolExtension = SymbolExtension(rawValue: "r_joystick_tilt_left_fill")
    static let r_joystick_tilt_right: SymbolExtension = SymbolExtension(rawValue: "r_joystick_tilt_right")
    static let r_joystick_tilt_right_fill: SymbolExtension = SymbolExtension(rawValue: "r_joystick_tilt_right_fill")
    static let r_joystick_tilt_up: SymbolExtension = SymbolExtension(rawValue: "r_joystick_tilt_up")
    static let r_joystick_tilt_up_fill: SymbolExtension = SymbolExtension(rawValue: "r_joystick_tilt_up_fill")
    static let r_square_on_square_fill: SymbolExtension = SymbolExtension(rawValue: "r_square_on_square_fill")
    static let rectangle_2_swap: SymbolExtension = SymbolExtension(rawValue: "rectangle_2_swap")
    static let rectangle_3_group: SymbolExtension = SymbolExtension(rawValue: "rectangle_3_group")
    static let rectangle_3_group_fill: SymbolExtension = SymbolExtension(rawValue: "rectangle_3_group_fill")
    static let rectangle_and_hand_point_up_left: SymbolExtension = SymbolExtension(rawValue: "rectangle_and_hand_point_up_left")
    static let rectangle_and_hand_point_up_left_fill: SymbolExtension = SymbolExtension(rawValue: "rectangle_and_hand_point_up_left_fill")
    static let rectangle_and_hand_point_up_left_filled: SymbolExtension = SymbolExtension(rawValue: "rectangle_and_hand_point_up_left_filled")
    static let rectangle_bottomhalf_filled: SymbolExtension = SymbolExtension(rawValue: "rectangle_bottomhalf_filled")
    static let rectangle_bottomhalf_inset_filled: SymbolExtension = SymbolExtension(rawValue: "rectangle_bottomhalf_inset_filled")
    static let rectangle_bottomthird_inset_filled: SymbolExtension = SymbolExtension(rawValue: "rectangle_bottomthird_inset_filled")
    static let rectangle_center_inset_filled: SymbolExtension = SymbolExtension(rawValue: "rectangle_center_inset_filled")
    static let rectangle_center_inset_filled_badge_plus: SymbolExtension = SymbolExtension(rawValue: "rectangle_center_inset_filled_badge_plus")
    static let rectangle_filled_and_hand_point_up_left: SymbolExtension = SymbolExtension(rawValue: "rectangle_filled_and_hand_point_up_left")
    static let rectangle_inset_bottomleading_filled: SymbolExtension = SymbolExtension(rawValue: "rectangle_inset_bottomleading_filled")
    static let rectangle_inset_bottomleft_filled: SymbolExtension = SymbolExtension(rawValue: "rectangle_inset_bottomleft_filled")
    static let rectangle_inset_bottomright_filled: SymbolExtension = SymbolExtension(rawValue: "rectangle_inset_bottomright_filled")
    static let rectangle_inset_bottomtrailing_filled: SymbolExtension = SymbolExtension(rawValue: "rectangle_inset_bottomtrailing_filled")
    static let rectangle_inset_filled: SymbolExtension = SymbolExtension(rawValue: "rectangle_inset_filled")
    static let rectangle_inset_filled_and_person_filled: SymbolExtension = SymbolExtension(rawValue: "rectangle_inset_filled_and_person_filled")
    static let rectangle_inset_filled_on_rectangle: SymbolExtension = SymbolExtension(rawValue: "rectangle_inset_filled_on_rectangle")
    static let rectangle_inset_topleading_filled: SymbolExtension = SymbolExtension(rawValue: "rectangle_inset_topleading_filled")
    static let rectangle_inset_topleft_filled: SymbolExtension = SymbolExtension(rawValue: "rectangle_inset_topleft_filled")
    static let rectangle_inset_topright_filled: SymbolExtension = SymbolExtension(rawValue: "rectangle_inset_topright_filled")
    static let rectangle_inset_toptrailing_filled: SymbolExtension = SymbolExtension(rawValue: "rectangle_inset_toptrailing_filled")
    static let rectangle_leadinghalf_inset_filled: SymbolExtension = SymbolExtension(rawValue: "rectangle_leadinghalf_inset_filled")
    static let rectangle_leadinghalf_inset_filled_arrow_leading: SymbolExtension = SymbolExtension(rawValue: "rectangle_leadinghalf_inset_filled_arrow_leading")
    static let rectangle_leadingthird_inset_filled: SymbolExtension = SymbolExtension(rawValue: "rectangle_leadingthird_inset_filled")
    static let rectangle_lefthalf_filled: SymbolExtension = SymbolExtension(rawValue: "rectangle_lefthalf_filled")
    static let rectangle_lefthalf_inset_filled: SymbolExtension = SymbolExtension(rawValue: "rectangle_lefthalf_inset_filled")
    static let rectangle_lefthalf_inset_filled_arrow_left: SymbolExtension = SymbolExtension(rawValue: "rectangle_lefthalf_inset_filled_arrow_left")
    static let rectangle_leftthird_inset_filled: SymbolExtension = SymbolExtension(rawValue: "rectangle_leftthird_inset_filled")
    static let rectangle_on_rectangle_circle: SymbolExtension = SymbolExtension(rawValue: "rectangle_on_rectangle_circle")
    static let rectangle_on_rectangle_circle_fill: SymbolExtension = SymbolExtension(rawValue: "rectangle_on_rectangle_circle_fill")
    static let rectangle_on_rectangle_slash_circle: SymbolExtension = SymbolExtension(rawValue: "rectangle_on_rectangle_slash_circle")
    static let rectangle_on_rectangle_slash_circle_fill: SymbolExtension = SymbolExtension(rawValue: "rectangle_on_rectangle_slash_circle_fill")
    static let rectangle_on_rectangle_slash_fill: SymbolExtension = SymbolExtension(rawValue: "rectangle_on_rectangle_slash_fill")
    static let rectangle_on_rectangle_square: SymbolExtension = SymbolExtension(rawValue: "rectangle_on_rectangle_square")
    static let rectangle_on_rectangle_square_fill: SymbolExtension = SymbolExtension(rawValue: "rectangle_on_rectangle_square_fill")
    static let rectangle_portrait_and_arrow_right: SymbolExtension = SymbolExtension(rawValue: "rectangle_portrait_and_arrow_right")
    static let rectangle_portrait_and_arrow_right_fill: SymbolExtension = SymbolExtension(rawValue: "rectangle_portrait_and_arrow_right_fill")
    static let rectangle_portrait_bottomhalf_filled: SymbolExtension = SymbolExtension(rawValue: "rectangle_portrait_bottomhalf_filled")
    static let rectangle_portrait_bottomhalf_inset_filled: SymbolExtension = SymbolExtension(rawValue: "rectangle_portrait_bottomhalf_inset_filled")
    static let rectangle_portrait_bottomleading_inset_filled: SymbolExtension = SymbolExtension(rawValue: "rectangle_portrait_bottomleading_inset_filled")
    static let rectangle_portrait_bottomleft_inset_filled: SymbolExtension = SymbolExtension(rawValue: "rectangle_portrait_bottomleft_inset_filled")
    static let rectangle_portrait_bottomright_inset_filled: SymbolExtension = SymbolExtension(rawValue: "rectangle_portrait_bottomright_inset_filled")
    static let rectangle_portrait_bottomthird_inset_filled: SymbolExtension = SymbolExtension(rawValue: "rectangle_portrait_bottomthird_inset_filled")
    static let rectangle_portrait_bottomtrailing_inset_filled: SymbolExtension = SymbolExtension(rawValue: "rectangle_portrait_bottomtrailing_inset_filled")
    static let rectangle_portrait_center_inset_filled: SymbolExtension = SymbolExtension(rawValue: "rectangle_portrait_center_inset_filled")
    static let rectangle_portrait_inset_filled: SymbolExtension = SymbolExtension(rawValue: "rectangle_portrait_inset_filled")
    static let rectangle_portrait_leadinghalf_inset_filled: SymbolExtension = SymbolExtension(rawValue: "rectangle_portrait_leadinghalf_inset_filled")
    static let rectangle_portrait_leadingthird_inset_filled: SymbolExtension = SymbolExtension(rawValue: "rectangle_portrait_leadingthird_inset_filled")
    static let rectangle_portrait_lefthalf_filled: SymbolExtension = SymbolExtension(rawValue: "rectangle_portrait_lefthalf_filled")
    static let rectangle_portrait_lefthalf_inset_filled: SymbolExtension = SymbolExtension(rawValue: "rectangle_portrait_lefthalf_inset_filled")
    static let rectangle_portrait_leftthird_inset_filled: SymbolExtension = SymbolExtension(rawValue: "rectangle_portrait_leftthird_inset_filled")
    static let rectangle_portrait_on_rectangle_portrait: SymbolExtension = SymbolExtension(rawValue: "rectangle_portrait_on_rectangle_portrait")
    static let rectangle_portrait_on_rectangle_portrait_fill: SymbolExtension = SymbolExtension(rawValue: "rectangle_portrait_on_rectangle_portrait_fill")
    static let rectangle_portrait_on_rectangle_portrait_slash: SymbolExtension = SymbolExtension(rawValue: "rectangle_portrait_on_rectangle_portrait_slash")
    static let rectangle_portrait_on_rectangle_portrait_slash_fill: SymbolExtension = SymbolExtension(rawValue: "rectangle_portrait_on_rectangle_portrait_slash_fill")
    static let rectangle_portrait_righthalf_filled: SymbolExtension = SymbolExtension(rawValue: "rectangle_portrait_righthalf_filled")
    static let rectangle_portrait_righthalf_inset_filled: SymbolExtension = SymbolExtension(rawValue: "rectangle_portrait_righthalf_inset_filled")
    static let rectangle_portrait_rightthird_inset_filled: SymbolExtension = SymbolExtension(rawValue: "rectangle_portrait_rightthird_inset_filled")
    static let rectangle_portrait_slash: SymbolExtension = SymbolExtension(rawValue: "rectangle_portrait_slash")
    static let rectangle_portrait_slash_fill: SymbolExtension = SymbolExtension(rawValue: "rectangle_portrait_slash_fill")
    static let rectangle_portrait_split_2x1: SymbolExtension = SymbolExtension(rawValue: "rectangle_portrait_split_2x1")
    static let rectangle_portrait_split_2x1_fill: SymbolExtension = SymbolExtension(rawValue: "rectangle_portrait_split_2x1_fill")
    static let rectangle_portrait_split_2x1_slash: SymbolExtension = SymbolExtension(rawValue: "rectangle_portrait_split_2x1_slash")
    static let rectangle_portrait_split_2x1_slash_fill: SymbolExtension = SymbolExtension(rawValue: "rectangle_portrait_split_2x1_slash_fill")
    static let rectangle_portrait_tophalf_filled: SymbolExtension = SymbolExtension(rawValue: "rectangle_portrait_tophalf_filled")
    static let rectangle_portrait_tophalf_inset_filled: SymbolExtension = SymbolExtension(rawValue: "rectangle_portrait_tophalf_inset_filled")
    static let rectangle_portrait_topleading_inset_filled: SymbolExtension = SymbolExtension(rawValue: "rectangle_portrait_topleading_inset_filled")
    static let rectangle_portrait_topleft_inset_filled: SymbolExtension = SymbolExtension(rawValue: "rectangle_portrait_topleft_inset_filled")
    static let rectangle_portrait_topright_inset_filled: SymbolExtension = SymbolExtension(rawValue: "rectangle_portrait_topright_inset_filled")
    static let rectangle_portrait_topthird_inset_filled: SymbolExtension = SymbolExtension(rawValue: "rectangle_portrait_topthird_inset_filled")
    static let rectangle_portrait_toptrailing_inset_filled: SymbolExtension = SymbolExtension(rawValue: "rectangle_portrait_toptrailing_inset_filled")
    static let rectangle_portrait_trailinghalf_inset_filled: SymbolExtension = SymbolExtension(rawValue: "rectangle_portrait_trailinghalf_inset_filled")
    static let rectangle_portrait_trailingthird_inset_filled: SymbolExtension = SymbolExtension(rawValue: "rectangle_portrait_trailingthird_inset_filled")
    static let rectangle_righthalf_filled: SymbolExtension = SymbolExtension(rawValue: "rectangle_righthalf_filled")
    static let rectangle_righthalf_inset_filled: SymbolExtension = SymbolExtension(rawValue: "rectangle_righthalf_inset_filled")
    static let rectangle_righthalf_inset_filled_arrow_right: SymbolExtension = SymbolExtension(rawValue: "rectangle_righthalf_inset_filled_arrow_right")
    static let rectangle_rightthird_inset_filled: SymbolExtension = SymbolExtension(rawValue: "rectangle_rightthird_inset_filled")
    static let rectangle_split_2x1_slash: SymbolExtension = SymbolExtension(rawValue: "rectangle_split_2x1_slash")
    static let rectangle_split_2x1_slash_fill: SymbolExtension = SymbolExtension(rawValue: "rectangle_split_2x1_slash_fill")
    static let rectangle_stack_badge_person_crop_fill: SymbolExtension = SymbolExtension(rawValue: "rectangle_stack_badge_person_crop_fill")
    static let rectangle_stack_badge_play: SymbolExtension = SymbolExtension(rawValue: "rectangle_stack_badge_play")
    static let rectangle_stack_badge_play_fill: SymbolExtension = SymbolExtension(rawValue: "rectangle_stack_badge_play_fill")
    static let rectangle_tophalf_filled: SymbolExtension = SymbolExtension(rawValue: "rectangle_tophalf_filled")
    static let rectangle_tophalf_inset_filled: SymbolExtension = SymbolExtension(rawValue: "rectangle_tophalf_inset_filled")
    static let rectangle_topthird_inset_filled: SymbolExtension = SymbolExtension(rawValue: "rectangle_topthird_inset_filled")
    static let rectangle_trailinghalf_inset_filled: SymbolExtension = SymbolExtension(rawValue: "rectangle_trailinghalf_inset_filled")
    static let rectangle_trailinghalf_inset_filled_arrow_trailing: SymbolExtension = SymbolExtension(rawValue: "rectangle_trailinghalf_inset_filled_arrow_trailing")
    static let rectangle_trailingthird_inset_filled: SymbolExtension = SymbolExtension(rawValue: "rectangle_trailingthird_inset_filled")
    static let restart_circle_fill: SymbolExtension = SymbolExtension(rawValue: "restart_circle_fill")
    static let return_left: SymbolExtension = SymbolExtension(rawValue: "return_left")
    static let return_right: SymbolExtension = SymbolExtension(rawValue: "return_right")
    static let scissors_circle: SymbolExtension = SymbolExtension(rawValue: "scissors_circle")
    static let scissors_circle_fill: SymbolExtension = SymbolExtension(rawValue: "scissors_circle_fill")
    static let scooter: SymbolExtension = SymbolExtension(rawValue: "scooter")
    static let screwdriver: SymbolExtension = SymbolExtension(rawValue: "screwdriver")
    static let screwdriver_fill: SymbolExtension = SymbolExtension(rawValue: "screwdriver_fill")
    static let sensor_tag_radiowaves_forward: SymbolExtension = SymbolExtension(rawValue: "sensor_tag_radiowaves_forward")
    static let sensor_tag_radiowaves_forward_fill: SymbolExtension = SymbolExtension(rawValue: "sensor_tag_radiowaves_forward_fill")
    static let shareplay: SymbolExtension = SymbolExtension(rawValue: "shareplay")
    static let shareplay_slash: SymbolExtension = SymbolExtension(rawValue: "shareplay_slash")
    static let shield_lefthalf_filled: SymbolExtension = SymbolExtension(rawValue: "shield_lefthalf_filled")
    static let shield_lefthalf_filled_slash: SymbolExtension = SymbolExtension(rawValue: "shield_lefthalf_filled_slash")
    static let shield_righthalf_filled: SymbolExtension = SymbolExtension(rawValue: "shield_righthalf_filled")
    static let shippingbox_circle: SymbolExtension = SymbolExtension(rawValue: "shippingbox_circle")
    static let shippingbox_circle_fill: SymbolExtension = SymbolExtension(rawValue: "shippingbox_circle_fill")
    static let sleep_circle: SymbolExtension = SymbolExtension(rawValue: "sleep_circle")
    static let sleep_circle_fill: SymbolExtension = SymbolExtension(rawValue: "sleep_circle_fill")
    static let slider_horizontal_2_rectangle_and_arrow_triangle_2_circlepath: SymbolExtension = SymbolExtension(rawValue: "slider_horizontal_2_rectangle_and_arrow_triangle_2_circlepath")
    static let slider_horizontal_below_square_filled_and_square: SymbolExtension = SymbolExtension(rawValue: "slider_horizontal_below_square_filled_and_square")
    static let smallcircle_filled_circle: SymbolExtension = SymbolExtension(rawValue: "smallcircle_filled_circle")
    static let smallcircle_filled_circle_fill: SymbolExtension = SymbolExtension(rawValue: "smallcircle_filled_circle_fill")
    static let snowflake: SymbolExtension = SymbolExtension(rawValue: "snowflake")
    static let snowflake_circle: SymbolExtension = SymbolExtension(rawValue: "snowflake_circle")
    static let snowflake_circle_fill: SymbolExtension = SymbolExtension(rawValue: "snowflake_circle_fill")
    static let sparkle_magnifyingglass: SymbolExtension = SymbolExtension(rawValue: "sparkle_magnifyingglass")
    static let sparkles_square_filled_on_square: SymbolExtension = SymbolExtension(rawValue: "sparkles_square_filled_on_square")
    static let sparkles_tv: SymbolExtension = SymbolExtension(rawValue: "sparkles_tv")
    static let sparkles_tv_fill: SymbolExtension = SymbolExtension(rawValue: "sparkles_tv_fill")
    static let speaker_badge_exclamationmark: SymbolExtension = SymbolExtension(rawValue: "speaker_badge_exclamationmark")
    static let speaker_badge_exclamationmark_fill: SymbolExtension = SymbolExtension(rawValue: "speaker_badge_exclamationmark_fill")
    static let speaker_circle: SymbolExtension = SymbolExtension(rawValue: "speaker_circle")
    static let speaker_circle_fill: SymbolExtension = SymbolExtension(rawValue: "speaker_circle_fill")
    static let square_and_arrow_up_circle: SymbolExtension = SymbolExtension(rawValue: "square_and_arrow_up_circle")
    static let square_and_arrow_up_circle_fill: SymbolExtension = SymbolExtension(rawValue: "square_and_arrow_up_circle_fill")
    static let square_and_arrow_up_trianglebadge_exclamationmark: SymbolExtension = SymbolExtension(rawValue: "square_and_arrow_up_trianglebadge_exclamationmark")
    static let square_and_at_rectangle_fill: SymbolExtension = SymbolExtension(rawValue: "square_and_at_rectangle_fill")
    static let square_and_line_vertical_and_square_filled: SymbolExtension = SymbolExtension(rawValue: "square_and_line_vertical_and_square_filled")
    static let square_bottomhalf_filled: SymbolExtension = SymbolExtension(rawValue: "square_bottomhalf_filled")
    static let square_dashed_inset_filled: SymbolExtension = SymbolExtension(rawValue: "square_dashed_inset_filled")
    static let square_fill_and_line_vertical_and_square_fill: SymbolExtension = SymbolExtension(rawValue: "square_fill_and_line_vertical_and_square_fill")
    static let square_filled_and_line_vertical_and_square: SymbolExtension = SymbolExtension(rawValue: "square_filled_and_line_vertical_and_square")
    static let square_filled_on_square: SymbolExtension = SymbolExtension(rawValue: "square_filled_on_square")
    static let square_grid_3x1_below_line_grid_1x2_fill: SymbolExtension = SymbolExtension(rawValue: "square_grid_3x1_below_line_grid_1x2_fill")
    static let square_grid_3x3_bottomleft_filled: SymbolExtension = SymbolExtension(rawValue: "square_grid_3x3_bottomleft_filled")
    static let square_grid_3x3_bottommiddle_filled: SymbolExtension = SymbolExtension(rawValue: "square_grid_3x3_bottommiddle_filled")
    static let square_grid_3x3_bottomright_filled: SymbolExtension = SymbolExtension(rawValue: "square_grid_3x3_bottomright_filled")
    static let square_grid_3x3_middle_filled: SymbolExtension = SymbolExtension(rawValue: "square_grid_3x3_middle_filled")
    static let square_grid_3x3_middleleft_filled: SymbolExtension = SymbolExtension(rawValue: "square_grid_3x3_middleleft_filled")
    static let square_grid_3x3_middleright_filled: SymbolExtension = SymbolExtension(rawValue: "square_grid_3x3_middleright_filled")
    static let square_grid_3x3_square: SymbolExtension = SymbolExtension(rawValue: "square_grid_3x3_square")
    static let square_grid_3x3_topleft_filled: SymbolExtension = SymbolExtension(rawValue: "square_grid_3x3_topleft_filled")
    static let square_grid_3x3_topmiddle_filled: SymbolExtension = SymbolExtension(rawValue: "square_grid_3x3_topmiddle_filled")
    static let square_grid_3x3_topright_filled: SymbolExtension = SymbolExtension(rawValue: "square_grid_3x3_topright_filled")
    static let square_inset_filled: SymbolExtension = SymbolExtension(rawValue: "square_inset_filled")
    static let square_lefthalf_filled: SymbolExtension = SymbolExtension(rawValue: "square_lefthalf_filled")
    static let square_righthalf_filled: SymbolExtension = SymbolExtension(rawValue: "square_righthalf_filled")
    static let square_text_square: SymbolExtension = SymbolExtension(rawValue: "square_text_square")
    static let square_text_square_fill: SymbolExtension = SymbolExtension(rawValue: "square_text_square_fill")
    static let square_tophalf_filled: SymbolExtension = SymbolExtension(rawValue: "square_tophalf_filled")
    static let star_bubble: SymbolExtension = SymbolExtension(rawValue: "star_bubble")
    static let star_bubble_fill: SymbolExtension = SymbolExtension(rawValue: "star_bubble_fill")
    static let star_leadinghalf_filled: SymbolExtension = SymbolExtension(rawValue: "star_leadinghalf_filled")
    static let stethoscope_circle: SymbolExtension = SymbolExtension(rawValue: "stethoscope_circle")
    static let stethoscope_circle_fill: SymbolExtension = SymbolExtension(rawValue: "stethoscope_circle_fill")
    static let suitcase: SymbolExtension = SymbolExtension(rawValue: "suitcase")
    static let suitcase_cart: SymbolExtension = SymbolExtension(rawValue: "suitcase_cart")
    static let suitcase_cart_fill: SymbolExtension = SymbolExtension(rawValue: "suitcase_cart_fill")
    static let suitcase_fill: SymbolExtension = SymbolExtension(rawValue: "suitcase_fill")
    static let sun_max_circle: SymbolExtension = SymbolExtension(rawValue: "sun_max_circle")
    static let sun_max_circle_fill: SymbolExtension = SymbolExtension(rawValue: "sun_max_circle_fill")
    static let tablecells_fill_badge_ellipsis: SymbolExtension = SymbolExtension(rawValue: "tablecells_fill_badge_ellipsis")
    static let tag_square: SymbolExtension = SymbolExtension(rawValue: "tag_square")
    static let tag_square_fill: SymbolExtension = SymbolExtension(rawValue: "tag_square_fill")
    static let takeoutbag_and_cup_and_straw: SymbolExtension = SymbolExtension(rawValue: "takeoutbag_and_cup_and_straw")
    static let takeoutbag_and_cup_and_straw_fill: SymbolExtension = SymbolExtension(rawValue: "takeoutbag_and_cup_and_straw_fill")
    static let teletype_answer_circle: SymbolExtension = SymbolExtension(rawValue: "teletype_answer_circle")
    static let teletype_answer_circle_fill: SymbolExtension = SymbolExtension(rawValue: "teletype_answer_circle_fill")
    static let testtube_2: SymbolExtension = SymbolExtension(rawValue: "testtube_2")
    static let text_viewfinder: SymbolExtension = SymbolExtension(rawValue: "text_viewfinder")
    static let theatermasks: SymbolExtension = SymbolExtension(rawValue: "theatermasks")
    static let theatermasks_circle: SymbolExtension = SymbolExtension(rawValue: "theatermasks_circle")
    static let theatermasks_circle_fill: SymbolExtension = SymbolExtension(rawValue: "theatermasks_circle_fill")
    static let theatermasks_fill: SymbolExtension = SymbolExtension(rawValue: "theatermasks_fill")
    static let train_side_front_car: SymbolExtension = SymbolExtension(rawValue: "train_side_front_car")
    static let train_side_middle_car: SymbolExtension = SymbolExtension(rawValue: "train_side_middle_car")
    static let train_side_rear_car: SymbolExtension = SymbolExtension(rawValue: "train_side_rear_car")
    static let tram_fill_tunnel: SymbolExtension = SymbolExtension(rawValue: "tram_fill_tunnel")
    static let trapezoid_and_line_horizontal: SymbolExtension = SymbolExtension(rawValue: "trapezoid_and_line_horizontal")
    static let trapezoid_and_line_horizontal_fill: SymbolExtension = SymbolExtension(rawValue: "trapezoid_and_line_horizontal_fill")
    static let trapezoid_and_line_vertical: SymbolExtension = SymbolExtension(rawValue: "trapezoid_and_line_vertical")
    static let trapezoid_and_line_vertical_fill: SymbolExtension = SymbolExtension(rawValue: "trapezoid_and_line_vertical_fill")
    static let trash_slash_circle: SymbolExtension = SymbolExtension(rawValue: "trash_slash_circle")
    static let trash_slash_circle_fill: SymbolExtension = SymbolExtension(rawValue: "trash_slash_circle_fill")
    static let trash_slash_square: SymbolExtension = SymbolExtension(rawValue: "trash_slash_square")
    static let trash_slash_square_fill: SymbolExtension = SymbolExtension(rawValue: "trash_slash_square_fill")
    static let trash_square: SymbolExtension = SymbolExtension(rawValue: "trash_square")
    static let trash_square_fill: SymbolExtension = SymbolExtension(rawValue: "trash_square_fill")
    static let triangle_bottomhalf_filled: SymbolExtension = SymbolExtension(rawValue: "triangle_bottomhalf_filled")
    static let triangle_inset_filled: SymbolExtension = SymbolExtension(rawValue: "triangle_inset_filled")
    static let triangle_lefthalf_filled: SymbolExtension = SymbolExtension(rawValue: "triangle_lefthalf_filled")
    static let triangle_righthalf_filled: SymbolExtension = SymbolExtension(rawValue: "triangle_righthalf_filled")
    static let triangle_tophalf_filled: SymbolExtension = SymbolExtension(rawValue: "triangle_tophalf_filled")
    static let tshirt: SymbolExtension = SymbolExtension(rawValue: "tshirt")
    static let tshirt_fill: SymbolExtension = SymbolExtension(rawValue: "tshirt_fill")
    static let tv_inset_filled: SymbolExtension = SymbolExtension(rawValue: "tv_inset_filled")
    static let video_badge_ellipsis: SymbolExtension = SymbolExtension(rawValue: "video_badge_ellipsis")
    static let video_fill_badge_ellipsis: SymbolExtension = SymbolExtension(rawValue: "video_fill_badge_ellipsis")
    static let video_square: SymbolExtension = SymbolExtension(rawValue: "video_square")
    static let video_square_fill: SymbolExtension = SymbolExtension(rawValue: "video_square_fill")
    static let wake_circle: SymbolExtension = SymbolExtension(rawValue: "wake_circle")
    static let wake_circle_fill: SymbolExtension = SymbolExtension(rawValue: "wake_circle_fill")
    static let watchface_applewatch_case: SymbolExtension = SymbolExtension(rawValue: "watchface_applewatch_case")
    static let waveform_badge_exclamationmark: SymbolExtension = SymbolExtension(rawValue: "waveform_badge_exclamationmark")
    static let waveform_badge_minus: SymbolExtension = SymbolExtension(rawValue: "waveform_badge_minus")
    static let waveform_badge_plus: SymbolExtension = SymbolExtension(rawValue: "waveform_badge_plus")
    static let wifi_circle: SymbolExtension = SymbolExtension(rawValue: "wifi_circle")
    static let wifi_circle_fill: SymbolExtension = SymbolExtension(rawValue: "wifi_circle_fill")
    static let wifi_square: SymbolExtension = SymbolExtension(rawValue: "wifi_square")
    static let wifi_square_fill: SymbolExtension = SymbolExtension(rawValue: "wifi_square_fill")
    static let xmark_app: SymbolExtension = SymbolExtension(rawValue: "xmark_app")
    static let xmark_app_fill: SymbolExtension = SymbolExtension(rawValue: "xmark_app_fill")
}
