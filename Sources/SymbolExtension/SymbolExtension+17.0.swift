//
//  SymbolExtension+17.0.swift
//  Symbol
//
//  Created by otake on 2025/05/05.
//

import Foundation

@available(iOS 17.0, macOS 14.0, *)
public extension SymbolExtension {
    static let _2h: SymbolExtension = SymbolExtension(rawValue: "2h")
    static let _2h_circle: SymbolExtension = SymbolExtension(rawValue: "2h_circle")
    static let _2h_circle_fill: SymbolExtension = SymbolExtension(rawValue: "2h_circle_fill")
    static let _4a: SymbolExtension = SymbolExtension(rawValue: "4a")
    static let _4a_circle: SymbolExtension = SymbolExtension(rawValue: "4a_circle")
    static let _4a_circle_fill: SymbolExtension = SymbolExtension(rawValue: "4a_circle_fill")
    static let _4h: SymbolExtension = SymbolExtension(rawValue: "4h")
    static let _4h_circle: SymbolExtension = SymbolExtension(rawValue: "4h_circle")
    static let _4h_circle_fill: SymbolExtension = SymbolExtension(rawValue: "4h_circle_fill")
    static let _4l: SymbolExtension = SymbolExtension(rawValue: "4l")
    static let _4l_circle: SymbolExtension = SymbolExtension(rawValue: "4l_circle")
    static let _4l_circle_fill: SymbolExtension = SymbolExtension(rawValue: "4l_circle_fill")
    static let accessibility: SymbolExtension = SymbolExtension(rawValue: "accessibility")
    static let accessibility_badge_arrow_up_right: SymbolExtension = SymbolExtension(rawValue: "accessibility_badge_arrow_up_right")
    static let accessibility_fill: SymbolExtension = SymbolExtension(rawValue: "accessibility_fill")
    static let airpodspro_chargingcase_wireless_radiowaves_left_and_right: SymbolExtension = SymbolExtension(rawValue: "airpodspro_chargingcase_wireless_radiowaves_left_and_right")
    static let airpodspro_chargingcase_wireless_radiowaves_left_and_right_fill: SymbolExtension = SymbolExtension(rawValue: "airpodspro_chargingcase_wireless_radiowaves_left_and_right_fill")
    static let apple_terminal: SymbolExtension = SymbolExtension(rawValue: "apple_terminal")
    static let apple_terminal_fill: SymbolExtension = SymbolExtension(rawValue: "apple_terminal_fill")
    static let apple_terminal_on_rectangle: SymbolExtension = SymbolExtension(rawValue: "apple_terminal_on_rectangle")
    static let apple_terminal_on_rectangle_fill: SymbolExtension = SymbolExtension(rawValue: "apple_terminal_on_rectangle_fill")
    static let applepencil_adapter_usb_c: SymbolExtension = SymbolExtension(rawValue: "applepencil_adapter_usb_c")
    static let applepencil_adapter_usb_c_fill: SymbolExtension = SymbolExtension(rawValue: "applepencil_adapter_usb_c_fill")
    static let applepencil_and_scribble: SymbolExtension = SymbolExtension(rawValue: "applepencil_and_scribble")
    static let applepencil_gen1: SymbolExtension = SymbolExtension(rawValue: "applepencil_gen1")
    static let applepencil_gen2: SymbolExtension = SymbolExtension(rawValue: "applepencil_gen2")
    static let applepencil_tip: SymbolExtension = SymbolExtension(rawValue: "applepencil_tip")
    static let applewatch_and_arrow_forward: SymbolExtension = SymbolExtension(rawValue: "applewatch_and_arrow_forward")
    static let appwindow_swipe_rectangle: SymbolExtension = SymbolExtension(rawValue: "appwindow_swipe_rectangle")
    static let arcade_stick: SymbolExtension = SymbolExtension(rawValue: "arcade_stick")
    static let arcade_stick_and_arrow_down: SymbolExtension = SymbolExtension(rawValue: "arcade_stick_and_arrow_down")
    static let arcade_stick_and_arrow_left: SymbolExtension = SymbolExtension(rawValue: "arcade_stick_and_arrow_left")
    static let arcade_stick_and_arrow_left_and_arrow_right: SymbolExtension = SymbolExtension(rawValue: "arcade_stick_and_arrow_left_and_arrow_right")
    static let arcade_stick_and_arrow_right: SymbolExtension = SymbolExtension(rawValue: "arcade_stick_and_arrow_right")
    static let arcade_stick_and_arrow_up: SymbolExtension = SymbolExtension(rawValue: "arcade_stick_and_arrow_up")
    static let arcade_stick_and_arrow_up_and_arrow_down: SymbolExtension = SymbolExtension(rawValue: "arcade_stick_and_arrow_up_and_arrow_down")
    static let arcade_stick_console: SymbolExtension = SymbolExtension(rawValue: "arcade_stick_console")
    static let arcade_stick_console_fill: SymbolExtension = SymbolExtension(rawValue: "arcade_stick_console_fill")
    static let arrow_backward_to_line_square: SymbolExtension = SymbolExtension(rawValue: "arrow_backward_to_line_square")
    static let arrow_backward_to_line_square_fill: SymbolExtension = SymbolExtension(rawValue: "arrow_backward_to_line_square_fill")
    static let arrow_circlepath: SymbolExtension = SymbolExtension(rawValue: "arrow_circlepath")
    static let arrow_clockwise_square: SymbolExtension = SymbolExtension(rawValue: "arrow_clockwise_square")
    static let arrow_clockwise_square_fill: SymbolExtension = SymbolExtension(rawValue: "arrow_clockwise_square_fill")
    static let arrow_counterclockwise_square: SymbolExtension = SymbolExtension(rawValue: "arrow_counterclockwise_square")
    static let arrow_counterclockwise_square_fill: SymbolExtension = SymbolExtension(rawValue: "arrow_counterclockwise_square_fill")
    static let arrow_down_applewatch: SymbolExtension = SymbolExtension(rawValue: "arrow_down_applewatch")
    static let arrow_down_backward_and_arrow_up_forward: SymbolExtension = SymbolExtension(rawValue: "arrow_down_backward_and_arrow_up_forward")
    static let arrow_down_backward_and_arrow_up_forward_circle: SymbolExtension = SymbolExtension(rawValue: "arrow_down_backward_and_arrow_up_forward_circle")
    static let arrow_down_backward_and_arrow_up_forward_circle_fill: SymbolExtension = SymbolExtension(rawValue: "arrow_down_backward_and_arrow_up_forward_circle_fill")
    static let arrow_down_backward_and_arrow_up_forward_square: SymbolExtension = SymbolExtension(rawValue: "arrow_down_backward_and_arrow_up_forward_square")
    static let arrow_down_backward_and_arrow_up_forward_square_fill: SymbolExtension = SymbolExtension(rawValue: "arrow_down_backward_and_arrow_up_forward_square_fill")
    static let arrow_down_backward_toptrailing_rectangle: SymbolExtension = SymbolExtension(rawValue: "arrow_down_backward_toptrailing_rectangle")
    static let arrow_down_backward_toptrailing_rectangle_fill: SymbolExtension = SymbolExtension(rawValue: "arrow_down_backward_toptrailing_rectangle_fill")
    static let arrow_down_circle_dotted: SymbolExtension = SymbolExtension(rawValue: "arrow_down_circle_dotted")
    static let arrow_down_forward_and_arrow_up_backward_square: SymbolExtension = SymbolExtension(rawValue: "arrow_down_forward_and_arrow_up_backward_square")
    static let arrow_down_forward_and_arrow_up_backward_square_fill: SymbolExtension = SymbolExtension(rawValue: "arrow_down_forward_and_arrow_up_backward_square_fill")
    static let arrow_down_forward_topleading_rectangle: SymbolExtension = SymbolExtension(rawValue: "arrow_down_forward_topleading_rectangle")
    static let arrow_down_forward_topleading_rectangle_fill: SymbolExtension = SymbolExtension(rawValue: "arrow_down_forward_topleading_rectangle_fill")
    static let arrow_down_left_and_arrow_up_right: SymbolExtension = SymbolExtension(rawValue: "arrow_down_left_and_arrow_up_right")
    static let arrow_down_left_and_arrow_up_right_circle: SymbolExtension = SymbolExtension(rawValue: "arrow_down_left_and_arrow_up_right_circle")
    static let arrow_down_left_and_arrow_up_right_circle_fill: SymbolExtension = SymbolExtension(rawValue: "arrow_down_left_and_arrow_up_right_circle_fill")
    static let arrow_down_left_and_arrow_up_right_square: SymbolExtension = SymbolExtension(rawValue: "arrow_down_left_and_arrow_up_right_square")
    static let arrow_down_left_and_arrow_up_right_square_fill: SymbolExtension = SymbolExtension(rawValue: "arrow_down_left_and_arrow_up_right_square_fill")
    static let arrow_down_left_arrow_up_right: SymbolExtension = SymbolExtension(rawValue: "arrow_down_left_arrow_up_right")
    static let arrow_down_left_arrow_up_right_circle: SymbolExtension = SymbolExtension(rawValue: "arrow_down_left_arrow_up_right_circle")
    static let arrow_down_left_arrow_up_right_circle_fill: SymbolExtension = SymbolExtension(rawValue: "arrow_down_left_arrow_up_right_circle_fill")
    static let arrow_down_left_arrow_up_right_square: SymbolExtension = SymbolExtension(rawValue: "arrow_down_left_arrow_up_right_square")
    static let arrow_down_left_arrow_up_right_square_fill: SymbolExtension = SymbolExtension(rawValue: "arrow_down_left_arrow_up_right_square_fill")
    static let arrow_down_left_topright_rectangle: SymbolExtension = SymbolExtension(rawValue: "arrow_down_left_topright_rectangle")
    static let arrow_down_left_topright_rectangle_fill: SymbolExtension = SymbolExtension(rawValue: "arrow_down_left_topright_rectangle_fill")
    static let arrow_down_right_and_arrow_up_left_square: SymbolExtension = SymbolExtension(rawValue: "arrow_down_right_and_arrow_up_left_square")
    static let arrow_down_right_and_arrow_up_left_square_fill: SymbolExtension = SymbolExtension(rawValue: "arrow_down_right_and_arrow_up_left_square_fill")
    static let arrow_down_right_topleft_rectangle: SymbolExtension = SymbolExtension(rawValue: "arrow_down_right_topleft_rectangle")
    static let arrow_down_right_topleft_rectangle_fill: SymbolExtension = SymbolExtension(rawValue: "arrow_down_right_topleft_rectangle_fill")
    static let arrow_down_to_line_square: SymbolExtension = SymbolExtension(rawValue: "arrow_down_to_line_square")
    static let arrow_down_to_line_square_fill: SymbolExtension = SymbolExtension(rawValue: "arrow_down_to_line_square_fill")
    static let arrow_forward_to_line_square: SymbolExtension = SymbolExtension(rawValue: "arrow_forward_to_line_square")
    static let arrow_forward_to_line_square_fill: SymbolExtension = SymbolExtension(rawValue: "arrow_forward_to_line_square_fill")
    static let arrow_left_to_line_square: SymbolExtension = SymbolExtension(rawValue: "arrow_left_to_line_square")
    static let arrow_left_to_line_square_fill: SymbolExtension = SymbolExtension(rawValue: "arrow_left_to_line_square_fill")
    static let arrow_right_to_line_square: SymbolExtension = SymbolExtension(rawValue: "arrow_right_to_line_square")
    static let arrow_right_to_line_square_fill: SymbolExtension = SymbolExtension(rawValue: "arrow_right_to_line_square_fill")
    static let arrow_triangle_2_circlepath_icloud: SymbolExtension = SymbolExtension(rawValue: "arrow_triangle_2_circlepath_icloud")
    static let arrow_triangle_2_circlepath_icloud_fill: SymbolExtension = SymbolExtension(rawValue: "arrow_triangle_2_circlepath_icloud_fill")
    static let arrow_up_backward_and_arrow_down_forward_square: SymbolExtension = SymbolExtension(rawValue: "arrow_up_backward_and_arrow_down_forward_square")
    static let arrow_up_backward_and_arrow_down_forward_square_fill: SymbolExtension = SymbolExtension(rawValue: "arrow_up_backward_and_arrow_down_forward_square_fill")
    static let arrow_up_backward_bottomtrailing_rectangle: SymbolExtension = SymbolExtension(rawValue: "arrow_up_backward_bottomtrailing_rectangle")
    static let arrow_up_backward_bottomtrailing_rectangle_fill: SymbolExtension = SymbolExtension(rawValue: "arrow_up_backward_bottomtrailing_rectangle_fill")
    static let arrow_up_forward_and_arrow_down_backward: SymbolExtension = SymbolExtension(rawValue: "arrow_up_forward_and_arrow_down_backward")
    static let arrow_up_forward_and_arrow_down_backward_circle: SymbolExtension = SymbolExtension(rawValue: "arrow_up_forward_and_arrow_down_backward_circle")
    static let arrow_up_forward_and_arrow_down_backward_circle_fill: SymbolExtension = SymbolExtension(rawValue: "arrow_up_forward_and_arrow_down_backward_circle_fill")
    static let arrow_up_forward_and_arrow_down_backward_square: SymbolExtension = SymbolExtension(rawValue: "arrow_up_forward_and_arrow_down_backward_square")
    static let arrow_up_forward_and_arrow_down_backward_square_fill: SymbolExtension = SymbolExtension(rawValue: "arrow_up_forward_and_arrow_down_backward_square_fill")
    static let arrow_up_forward_bottomleading_rectangle: SymbolExtension = SymbolExtension(rawValue: "arrow_up_forward_bottomleading_rectangle")
    static let arrow_up_forward_bottomleading_rectangle_fill: SymbolExtension = SymbolExtension(rawValue: "arrow_up_forward_bottomleading_rectangle_fill")
    static let arrow_up_left_and_arrow_down_right_square: SymbolExtension = SymbolExtension(rawValue: "arrow_up_left_and_arrow_down_right_square")
    static let arrow_up_left_and_arrow_down_right_square_fill: SymbolExtension = SymbolExtension(rawValue: "arrow_up_left_and_arrow_down_right_square_fill")
    static let arrow_up_left_arrow_down_right: SymbolExtension = SymbolExtension(rawValue: "arrow_up_left_arrow_down_right")
    static let arrow_up_left_arrow_down_right_circle: SymbolExtension = SymbolExtension(rawValue: "arrow_up_left_arrow_down_right_circle")
    static let arrow_up_left_arrow_down_right_circle_fill: SymbolExtension = SymbolExtension(rawValue: "arrow_up_left_arrow_down_right_circle_fill")
    static let arrow_up_left_arrow_down_right_square: SymbolExtension = SymbolExtension(rawValue: "arrow_up_left_arrow_down_right_square")
    static let arrow_up_left_arrow_down_right_square_fill: SymbolExtension = SymbolExtension(rawValue: "arrow_up_left_arrow_down_right_square_fill")
    static let arrow_up_left_bottomright_rectangle: SymbolExtension = SymbolExtension(rawValue: "arrow_up_left_bottomright_rectangle")
    static let arrow_up_left_bottomright_rectangle_fill: SymbolExtension = SymbolExtension(rawValue: "arrow_up_left_bottomright_rectangle_fill")
    static let arrow_up_right_and_arrow_down_left: SymbolExtension = SymbolExtension(rawValue: "arrow_up_right_and_arrow_down_left")
    static let arrow_up_right_and_arrow_down_left_circle: SymbolExtension = SymbolExtension(rawValue: "arrow_up_right_and_arrow_down_left_circle")
    static let arrow_up_right_and_arrow_down_left_circle_fill: SymbolExtension = SymbolExtension(rawValue: "arrow_up_right_and_arrow_down_left_circle_fill")
    static let arrow_up_right_and_arrow_down_left_square: SymbolExtension = SymbolExtension(rawValue: "arrow_up_right_and_arrow_down_left_square")
    static let arrow_up_right_and_arrow_down_left_square_fill: SymbolExtension = SymbolExtension(rawValue: "arrow_up_right_and_arrow_down_left_square_fill")
    static let arrow_up_right_bottomleft_rectangle: SymbolExtension = SymbolExtension(rawValue: "arrow_up_right_bottomleft_rectangle")
    static let arrow_up_right_bottomleft_rectangle_fill: SymbolExtension = SymbolExtension(rawValue: "arrow_up_right_bottomleft_rectangle_fill")
    static let arrow_up_to_line_square: SymbolExtension = SymbolExtension(rawValue: "arrow_up_to_line_square")
    static let arrow_up_to_line_square_fill: SymbolExtension = SymbolExtension(rawValue: "arrow_up_to_line_square_fill")
    static let arrow_up_trash: SymbolExtension = SymbolExtension(rawValue: "arrow_up_trash")
    static let arrow_up_trash_fill: SymbolExtension = SymbolExtension(rawValue: "arrow_up_trash_fill")
    static let arrowkeys: SymbolExtension = SymbolExtension(rawValue: "arrowkeys")
    static let arrowkeys_down_filled: SymbolExtension = SymbolExtension(rawValue: "arrowkeys_down_filled")
    static let arrowkeys_fill: SymbolExtension = SymbolExtension(rawValue: "arrowkeys_fill")
    static let arrowkeys_left_filled: SymbolExtension = SymbolExtension(rawValue: "arrowkeys_left_filled")
    static let arrowkeys_right_filled: SymbolExtension = SymbolExtension(rawValue: "arrowkeys_right_filled")
    static let arrowkeys_up_filled: SymbolExtension = SymbolExtension(rawValue: "arrowkeys_up_filled")
    static let arrowshape_backward_circle: SymbolExtension = SymbolExtension(rawValue: "arrowshape_backward_circle")
    static let arrowshape_backward_circle_fill: SymbolExtension = SymbolExtension(rawValue: "arrowshape_backward_circle_fill")
    static let arrowshape_down: SymbolExtension = SymbolExtension(rawValue: "arrowshape_down")
    static let arrowshape_down_circle: SymbolExtension = SymbolExtension(rawValue: "arrowshape_down_circle")
    static let arrowshape_down_circle_fill: SymbolExtension = SymbolExtension(rawValue: "arrowshape_down_circle_fill")
    static let arrowshape_down_fill: SymbolExtension = SymbolExtension(rawValue: "arrowshape_down_fill")
    static let arrowshape_forward_circle: SymbolExtension = SymbolExtension(rawValue: "arrowshape_forward_circle")
    static let arrowshape_forward_circle_fill: SymbolExtension = SymbolExtension(rawValue: "arrowshape_forward_circle_fill")
    static let arrowshape_left_arrowshape_right: SymbolExtension = SymbolExtension(rawValue: "arrowshape_left_arrowshape_right")
    static let arrowshape_left_arrowshape_right_fill: SymbolExtension = SymbolExtension(rawValue: "arrowshape_left_arrowshape_right_fill")
    static let arrowshape_left_circle: SymbolExtension = SymbolExtension(rawValue: "arrowshape_left_circle")
    static let arrowshape_left_circle_fill: SymbolExtension = SymbolExtension(rawValue: "arrowshape_left_circle_fill")
    static let arrowshape_right_circle: SymbolExtension = SymbolExtension(rawValue: "arrowshape_right_circle")
    static let arrowshape_right_circle_fill: SymbolExtension = SymbolExtension(rawValue: "arrowshape_right_circle_fill")
    static let arrowshape_up: SymbolExtension = SymbolExtension(rawValue: "arrowshape_up")
    static let arrowshape_up_circle: SymbolExtension = SymbolExtension(rawValue: "arrowshape_up_circle")
    static let arrowshape_up_circle_fill: SymbolExtension = SymbolExtension(rawValue: "arrowshape_up_circle_fill")
    static let arrowshape_up_fill: SymbolExtension = SymbolExtension(rawValue: "arrowshape_up_fill")
    static let arrowtriangle_up_arrowtriangle_down_window_left: SymbolExtension = SymbolExtension(rawValue: "arrowtriangle_up_arrowtriangle_down_window_left")
    static let arrowtriangle_up_arrowtriangle_down_window_right: SymbolExtension = SymbolExtension(rawValue: "arrowtriangle_up_arrowtriangle_down_window_right")
    static let australiandollarsign: SymbolExtension = SymbolExtension(rawValue: "australiandollarsign")
    static let australiandollarsign_arrow_circlepath: SymbolExtension = SymbolExtension(rawValue: "australiandollarsign_arrow_circlepath")
    static let australiandollarsign_circle: SymbolExtension = SymbolExtension(rawValue: "australiandollarsign_circle")
    static let australiandollarsign_circle_fill: SymbolExtension = SymbolExtension(rawValue: "australiandollarsign_circle_fill")
    static let australiandollarsign_square: SymbolExtension = SymbolExtension(rawValue: "australiandollarsign_square")
    static let australiandollarsign_square_fill: SymbolExtension = SymbolExtension(rawValue: "australiandollarsign_square_fill")
    static let australsign_arrow_circlepath: SymbolExtension = SymbolExtension(rawValue: "australsign_arrow_circlepath")
    static let automatic_brakesignal: SymbolExtension = SymbolExtension(rawValue: "automatic_brakesignal")
    static let automatic_headlight_high_beam: SymbolExtension = SymbolExtension(rawValue: "automatic_headlight_high_beam")
    static let automatic_headlight_high_beam_fill: SymbolExtension = SymbolExtension(rawValue: "automatic_headlight_high_beam_fill")
    static let automatic_headlight_low_beam: SymbolExtension = SymbolExtension(rawValue: "automatic_headlight_low_beam")
    static let automatic_headlight_low_beam_fill: SymbolExtension = SymbolExtension(rawValue: "automatic_headlight_low_beam_fill")
    static let axle_2_driveshaft_disengaged: SymbolExtension = SymbolExtension(rawValue: "axle_2_driveshaft_disengaged")
    static let axle_2_front_disengaged: SymbolExtension = SymbolExtension(rawValue: "axle_2_front_disengaged")
    static let axle_2_rear_disengaged: SymbolExtension = SymbolExtension(rawValue: "axle_2_rear_disengaged")
    static let axle_2_rear_lock: SymbolExtension = SymbolExtension(rawValue: "axle_2_rear_lock")
    static let bahtsign_arrow_circlepath: SymbolExtension = SymbolExtension(rawValue: "bahtsign_arrow_circlepath")
    static let battery_0percent: SymbolExtension = SymbolExtension(rawValue: "battery_0percent")
    static let battery_25percent: SymbolExtension = SymbolExtension(rawValue: "battery_25percent")
    static let battery_50percent: SymbolExtension = SymbolExtension(rawValue: "battery_50percent")
    static let battery_75percent: SymbolExtension = SymbolExtension(rawValue: "battery_75percent")
    static let battery_100percent: SymbolExtension = SymbolExtension(rawValue: "battery_100percent")
    static let battery_100percent_bolt: SymbolExtension = SymbolExtension(rawValue: "battery_100percent_bolt")
    static let battery_100percent_circle: SymbolExtension = SymbolExtension(rawValue: "battery_100percent_circle")
    static let battery_100percent_circle_fill: SymbolExtension = SymbolExtension(rawValue: "battery_100percent_circle_fill")
    static let beats_fitpro: SymbolExtension = SymbolExtension(rawValue: "beats_fitpro")
    static let beats_fitpro_chargingcase: SymbolExtension = SymbolExtension(rawValue: "beats_fitpro_chargingcase")
    static let beats_fitpro_chargingcase_fill: SymbolExtension = SymbolExtension(rawValue: "beats_fitpro_chargingcase_fill")
    static let beats_fitpro_left: SymbolExtension = SymbolExtension(rawValue: "beats_fitpro_left")
    static let beats_fitpro_right: SymbolExtension = SymbolExtension(rawValue: "beats_fitpro_right")
    static let beats_studiobudsplus: SymbolExtension = SymbolExtension(rawValue: "beats_studiobudsplus")
    static let beats_studiobudsplus_chargingcase: SymbolExtension = SymbolExtension(rawValue: "beats_studiobudsplus_chargingcase")
    static let beats_studiobudsplus_chargingcase_fill: SymbolExtension = SymbolExtension(rawValue: "beats_studiobudsplus_chargingcase_fill")
    static let beats_studiobudsplus_left: SymbolExtension = SymbolExtension(rawValue: "beats_studiobudsplus_left")
    static let beats_studiobudsplus_right: SymbolExtension = SymbolExtension(rawValue: "beats_studiobudsplus_right")
    static let bell_badge_slash: SymbolExtension = SymbolExtension(rawValue: "bell_badge_slash")
    static let bell_badge_slash_fill: SymbolExtension = SymbolExtension(rawValue: "bell_badge_slash_fill")
    static let bell_badge_waveform: SymbolExtension = SymbolExtension(rawValue: "bell_badge_waveform")
    static let bell_badge_waveform_fill: SymbolExtension = SymbolExtension(rawValue: "bell_badge_waveform_fill")
    static let binoculars_circle: SymbolExtension = SymbolExtension(rawValue: "binoculars_circle")
    static let binoculars_circle_fill: SymbolExtension = SymbolExtension(rawValue: "binoculars_circle_fill")
    static let bird_circle: SymbolExtension = SymbolExtension(rawValue: "bird_circle")
    static let bird_circle_fill: SymbolExtension = SymbolExtension(rawValue: "bird_circle_fill")
    static let bitcoinsign_arrow_circlepath: SymbolExtension = SymbolExtension(rawValue: "bitcoinsign_arrow_circlepath")
    static let bolt_badge_automatic: SymbolExtension = SymbolExtension(rawValue: "bolt_badge_automatic")
    static let bolt_badge_automatic_fill: SymbolExtension = SymbolExtension(rawValue: "bolt_badge_automatic_fill")
    static let bolt_badge_checkmark: SymbolExtension = SymbolExtension(rawValue: "bolt_badge_checkmark")
    static let bolt_badge_checkmark_fill: SymbolExtension = SymbolExtension(rawValue: "bolt_badge_checkmark_fill")
    static let bolt_badge_xmark: SymbolExtension = SymbolExtension(rawValue: "bolt_badge_xmark")
    static let bolt_badge_xmark_fill: SymbolExtension = SymbolExtension(rawValue: "bolt_badge_xmark_fill")
    static let book_and_wrench: SymbolExtension = SymbolExtension(rawValue: "book_and_wrench")
    static let book_and_wrench_fill: SymbolExtension = SymbolExtension(rawValue: "book_and_wrench_fill")
    static let book_pages: SymbolExtension = SymbolExtension(rawValue: "book_pages")
    static let book_pages_fill: SymbolExtension = SymbolExtension(rawValue: "book_pages_fill")
    static let brain_fill: SymbolExtension = SymbolExtension(rawValue: "brain_fill")
    static let brain_filled_head_profile: SymbolExtension = SymbolExtension(rawValue: "brain_filled_head_profile")
    static let brain_head_profile_fill: SymbolExtension = SymbolExtension(rawValue: "brain_head_profile_fill")
    static let brazilianrealsign_arrow_circlepath: SymbolExtension = SymbolExtension(rawValue: "brazilianrealsign_arrow_circlepath")
    static let bubble: SymbolExtension = SymbolExtension(rawValue: "bubble")
    static let bubble_circle: SymbolExtension = SymbolExtension(rawValue: "bubble_circle")
    static let bubble_circle_fill: SymbolExtension = SymbolExtension(rawValue: "bubble_circle_fill")
    static let bubble_fill: SymbolExtension = SymbolExtension(rawValue: "bubble_fill")
    static let bubble_left_and_text_bubble_right: SymbolExtension = SymbolExtension(rawValue: "bubble_left_and_text_bubble_right")
    static let bubble_left_and_text_bubble_right_fill: SymbolExtension = SymbolExtension(rawValue: "bubble_left_and_text_bubble_right_fill")
    static let button_angledbottom_horizontal_left: SymbolExtension = SymbolExtension(rawValue: "button_angledbottom_horizontal_left")
    static let button_angledbottom_horizontal_left_fill: SymbolExtension = SymbolExtension(rawValue: "button_angledbottom_horizontal_left_fill")
    static let button_angledbottom_horizontal_right: SymbolExtension = SymbolExtension(rawValue: "button_angledbottom_horizontal_right")
    static let button_angledbottom_horizontal_right_fill: SymbolExtension = SymbolExtension(rawValue: "button_angledbottom_horizontal_right_fill")
    static let button_angledtop_vertical_left: SymbolExtension = SymbolExtension(rawValue: "button_angledtop_vertical_left")
    static let button_angledtop_vertical_left_fill: SymbolExtension = SymbolExtension(rawValue: "button_angledtop_vertical_left_fill")
    static let button_angledtop_vertical_right: SymbolExtension = SymbolExtension(rawValue: "button_angledtop_vertical_right")
    static let button_angledtop_vertical_right_fill: SymbolExtension = SymbolExtension(rawValue: "button_angledtop_vertical_right_fill")
    static let button_horizontal: SymbolExtension = SymbolExtension(rawValue: "button_horizontal")
    static let button_horizontal_fill: SymbolExtension = SymbolExtension(rawValue: "button_horizontal_fill")
    static let button_horizontal_top_press: SymbolExtension = SymbolExtension(rawValue: "button_horizontal_top_press")
    static let button_horizontal_top_press_fill: SymbolExtension = SymbolExtension(rawValue: "button_horizontal_top_press_fill")
    static let button_roundedbottom_horizontal: SymbolExtension = SymbolExtension(rawValue: "button_roundedbottom_horizontal")
    static let button_roundedbottom_horizontal_fill: SymbolExtension = SymbolExtension(rawValue: "button_roundedbottom_horizontal_fill")
    static let button_roundedtop_horizontal: SymbolExtension = SymbolExtension(rawValue: "button_roundedtop_horizontal")
    static let button_roundedtop_horizontal_fill: SymbolExtension = SymbolExtension(rawValue: "button_roundedtop_horizontal_fill")
    static let button_vertical_left_press: SymbolExtension = SymbolExtension(rawValue: "button_vertical_left_press")
    static let button_vertical_left_press_fill: SymbolExtension = SymbolExtension(rawValue: "button_vertical_left_press_fill")
    static let button_vertical_right_press: SymbolExtension = SymbolExtension(rawValue: "button_vertical_right_press")
    static let button_vertical_right_press_fill: SymbolExtension = SymbolExtension(rawValue: "button_vertical_right_press_fill")
    static let cable_coaxial: SymbolExtension = SymbolExtension(rawValue: "cable_coaxial")
    static let cable_connector_slash: SymbolExtension = SymbolExtension(rawValue: "cable_connector_slash")
    static let calendar_badge_checkmark: SymbolExtension = SymbolExtension(rawValue: "calendar_badge_checkmark")
    static let camera_badge_clock: SymbolExtension = SymbolExtension(rawValue: "camera_badge_clock")
    static let camera_badge_clock_fill: SymbolExtension = SymbolExtension(rawValue: "camera_badge_clock_fill")
    static let camera_badge_ellipsis_fill: SymbolExtension = SymbolExtension(rawValue: "camera_badge_ellipsis_fill")
    static let car_front_waves_down: SymbolExtension = SymbolExtension(rawValue: "car_front_waves_down")
    static let car_front_waves_down_fill: SymbolExtension = SymbolExtension(rawValue: "car_front_waves_down_fill")
    static let car_rear_and_collision_road_lane: SymbolExtension = SymbolExtension(rawValue: "car_rear_and_collision_road_lane")
    static let car_rear_and_collision_road_lane_slash: SymbolExtension = SymbolExtension(rawValue: "car_rear_and_collision_road_lane_slash")
    static let car_side_hill_down: SymbolExtension = SymbolExtension(rawValue: "car_side_hill_down")
    static let car_side_hill_down_fill: SymbolExtension = SymbolExtension(rawValue: "car_side_hill_down_fill")
    static let car_side_hill_up: SymbolExtension = SymbolExtension(rawValue: "car_side_hill_up")
    static let car_side_hill_up_fill: SymbolExtension = SymbolExtension(rawValue: "car_side_hill_up_fill")
    static let car_side_lock: SymbolExtension = SymbolExtension(rawValue: "car_side_lock")
    static let car_side_lock_fill: SymbolExtension = SymbolExtension(rawValue: "car_side_lock_fill")
    static let car_side_lock_open: SymbolExtension = SymbolExtension(rawValue: "car_side_lock_open")
    static let car_side_lock_open_fill: SymbolExtension = SymbolExtension(rawValue: "car_side_lock_open_fill")
    static let car_side_rear_and_collision_and_car_side_front: SymbolExtension = SymbolExtension(rawValue: "car_side_rear_and_collision_and_car_side_front")
    static let car_side_rear_and_collision_and_car_side_front_slash: SymbolExtension = SymbolExtension(rawValue: "car_side_rear_and_collision_and_car_side_front_slash")
    static let car_side_rear_and_exclamationmark_and_car_side_front: SymbolExtension = SymbolExtension(rawValue: "car_side_rear_and_exclamationmark_and_car_side_front")
    static let car_side_rear_and_wave_3_and_car_side_front: SymbolExtension = SymbolExtension(rawValue: "car_side_rear_and_wave_3_and_car_side_front")
    static let car_top_door_sliding_left_open: SymbolExtension = SymbolExtension(rawValue: "car_top_door_sliding_left_open")
    static let car_top_door_sliding_left_open_fill: SymbolExtension = SymbolExtension(rawValue: "car_top_door_sliding_left_open_fill")
    static let car_top_door_sliding_right_open: SymbolExtension = SymbolExtension(rawValue: "car_top_door_sliding_right_open")
    static let car_top_door_sliding_right_open_fill: SymbolExtension = SymbolExtension(rawValue: "car_top_door_sliding_right_open_fill")
    static let car_top_frontleft_arrowtriangle: SymbolExtension = SymbolExtension(rawValue: "car_top_frontleft_arrowtriangle")
    static let car_top_frontleft_arrowtriangle_fill: SymbolExtension = SymbolExtension(rawValue: "car_top_frontleft_arrowtriangle_fill")
    static let car_top_frontright_arrowtriangle: SymbolExtension = SymbolExtension(rawValue: "car_top_frontright_arrowtriangle")
    static let car_top_frontright_arrowtriangle_fill: SymbolExtension = SymbolExtension(rawValue: "car_top_frontright_arrowtriangle_fill")
    static let car_top_radiowaves_rear_right_badge_exclamationmark: SymbolExtension = SymbolExtension(rawValue: "car_top_radiowaves_rear_right_badge_exclamationmark")
    static let car_top_radiowaves_rear_right_badge_exclamationmark_fill: SymbolExtension = SymbolExtension(rawValue: "car_top_radiowaves_rear_right_badge_exclamationmark_fill")
    static let car_top_radiowaves_rear_right_badge_xmark: SymbolExtension = SymbolExtension(rawValue: "car_top_radiowaves_rear_right_badge_xmark")
    static let car_top_radiowaves_rear_right_badge_xmark_fill: SymbolExtension = SymbolExtension(rawValue: "car_top_radiowaves_rear_right_badge_xmark_fill")
    static let car_top_rearleft_arrowtriangle: SymbolExtension = SymbolExtension(rawValue: "car_top_rearleft_arrowtriangle")
    static let car_top_rearleft_arrowtriangle_fill: SymbolExtension = SymbolExtension(rawValue: "car_top_rearleft_arrowtriangle_fill")
    static let car_top_rearright_arrowtriangle: SymbolExtension = SymbolExtension(rawValue: "car_top_rearright_arrowtriangle")
    static let car_top_rearright_arrowtriangle_fill: SymbolExtension = SymbolExtension(rawValue: "car_top_rearright_arrowtriangle_fill")
    static let car_window_left: SymbolExtension = SymbolExtension(rawValue: "car_window_left")
    static let car_window_left_badge_exclamationmark: SymbolExtension = SymbolExtension(rawValue: "car_window_left_badge_exclamationmark")
    static let car_window_left_badge_xmark: SymbolExtension = SymbolExtension(rawValue: "car_window_left_badge_xmark")
    static let car_window_left_exclamationmark: SymbolExtension = SymbolExtension(rawValue: "car_window_left_exclamationmark")
    static let car_window_left_xmark: SymbolExtension = SymbolExtension(rawValue: "car_window_left_xmark")
    static let car_window_right: SymbolExtension = SymbolExtension(rawValue: "car_window_right")
    static let car_window_right_badge_exclamationmark: SymbolExtension = SymbolExtension(rawValue: "car_window_right_badge_exclamationmark")
    static let car_window_right_badge_xmark: SymbolExtension = SymbolExtension(rawValue: "car_window_right_badge_xmark")
    static let car_window_right_exclamationmark: SymbolExtension = SymbolExtension(rawValue: "car_window_right_exclamationmark")
    static let car_window_right_xmark: SymbolExtension = SymbolExtension(rawValue: "car_window_right_xmark")
    static let carseat_left: SymbolExtension = SymbolExtension(rawValue: "carseat_left")
    static let carseat_left_1: SymbolExtension = SymbolExtension(rawValue: "carseat_left_1")
    static let carseat_left_1_fill: SymbolExtension = SymbolExtension(rawValue: "carseat_left_1_fill")
    static let carseat_left_2: SymbolExtension = SymbolExtension(rawValue: "carseat_left_2")
    static let carseat_left_2_fill: SymbolExtension = SymbolExtension(rawValue: "carseat_left_2_fill")
    static let carseat_left_3: SymbolExtension = SymbolExtension(rawValue: "carseat_left_3")
    static let carseat_left_3_fill: SymbolExtension = SymbolExtension(rawValue: "carseat_left_3_fill")
    static let carseat_left_and_heat_waves: SymbolExtension = SymbolExtension(rawValue: "carseat_left_and_heat_waves")
    static let carseat_left_and_heat_waves_fill: SymbolExtension = SymbolExtension(rawValue: "carseat_left_and_heat_waves_fill")
    static let carseat_left_backrest_up_and_down: SymbolExtension = SymbolExtension(rawValue: "carseat_left_backrest_up_and_down")
    static let carseat_left_backrest_up_and_down_fill: SymbolExtension = SymbolExtension(rawValue: "carseat_left_backrest_up_and_down_fill")
    static let carseat_left_fan: SymbolExtension = SymbolExtension(rawValue: "carseat_left_fan")
    static let carseat_left_fan_fill: SymbolExtension = SymbolExtension(rawValue: "carseat_left_fan_fill")
    static let carseat_left_fill: SymbolExtension = SymbolExtension(rawValue: "carseat_left_fill")
    static let carseat_left_forward_and_backward: SymbolExtension = SymbolExtension(rawValue: "carseat_left_forward_and_backward")
    static let carseat_left_forward_and_backward_fill: SymbolExtension = SymbolExtension(rawValue: "carseat_left_forward_and_backward_fill")
    static let carseat_left_massage: SymbolExtension = SymbolExtension(rawValue: "carseat_left_massage")
    static let carseat_left_massage_fill: SymbolExtension = SymbolExtension(rawValue: "carseat_left_massage_fill")
    static let carseat_left_up_and_down: SymbolExtension = SymbolExtension(rawValue: "carseat_left_up_and_down")
    static let carseat_left_up_and_down_fill: SymbolExtension = SymbolExtension(rawValue: "carseat_left_up_and_down_fill")
    static let carseat_right: SymbolExtension = SymbolExtension(rawValue: "carseat_right")
    static let carseat_right_1: SymbolExtension = SymbolExtension(rawValue: "carseat_right_1")
    static let carseat_right_1_fill: SymbolExtension = SymbolExtension(rawValue: "carseat_right_1_fill")
    static let carseat_right_2: SymbolExtension = SymbolExtension(rawValue: "carseat_right_2")
    static let carseat_right_2_fill: SymbolExtension = SymbolExtension(rawValue: "carseat_right_2_fill")
    static let carseat_right_3: SymbolExtension = SymbolExtension(rawValue: "carseat_right_3")
    static let carseat_right_3_fill: SymbolExtension = SymbolExtension(rawValue: "carseat_right_3_fill")
    static let carseat_right_and_heat_waves: SymbolExtension = SymbolExtension(rawValue: "carseat_right_and_heat_waves")
    static let carseat_right_and_heat_waves_fill: SymbolExtension = SymbolExtension(rawValue: "carseat_right_and_heat_waves_fill")
    static let carseat_right_backrest_up_and_down: SymbolExtension = SymbolExtension(rawValue: "carseat_right_backrest_up_and_down")
    static let carseat_right_backrest_up_and_down_fill: SymbolExtension = SymbolExtension(rawValue: "carseat_right_backrest_up_and_down_fill")
    static let carseat_right_fan: SymbolExtension = SymbolExtension(rawValue: "carseat_right_fan")
    static let carseat_right_fan_fill: SymbolExtension = SymbolExtension(rawValue: "carseat_right_fan_fill")
    static let carseat_right_fill: SymbolExtension = SymbolExtension(rawValue: "carseat_right_fill")
    static let carseat_right_forward_and_backward: SymbolExtension = SymbolExtension(rawValue: "carseat_right_forward_and_backward")
    static let carseat_right_forward_and_backward_fill: SymbolExtension = SymbolExtension(rawValue: "carseat_right_forward_and_backward_fill")
    static let carseat_right_massage: SymbolExtension = SymbolExtension(rawValue: "carseat_right_massage")
    static let carseat_right_massage_fill: SymbolExtension = SymbolExtension(rawValue: "carseat_right_massage_fill")
    static let carseat_right_up_and_down: SymbolExtension = SymbolExtension(rawValue: "carseat_right_up_and_down")
    static let carseat_right_up_and_down_fill: SymbolExtension = SymbolExtension(rawValue: "carseat_right_up_and_down_fill")
    static let cat: SymbolExtension = SymbolExtension(rawValue: "cat")
    static let cat_circle: SymbolExtension = SymbolExtension(rawValue: "cat_circle")
    static let cat_circle_fill: SymbolExtension = SymbolExtension(rawValue: "cat_circle_fill")
    static let cat_fill: SymbolExtension = SymbolExtension(rawValue: "cat_fill")
    static let cedisign_arrow_circlepath: SymbolExtension = SymbolExtension(rawValue: "cedisign_arrow_circlepath")
    static let centsign_arrow_circlepath: SymbolExtension = SymbolExtension(rawValue: "centsign_arrow_circlepath")
    static let character_magnify: SymbolExtension = SymbolExtension(rawValue: "character_magnify")
    static let chart_bar_xaxis_ascending: SymbolExtension = SymbolExtension(rawValue: "chart_bar_xaxis_ascending")
    static let chart_bar_xaxis_ascending_badge_clock: SymbolExtension = SymbolExtension(rawValue: "chart_bar_xaxis_ascending_badge_clock")
    static let checkmark_applewatch: SymbolExtension = SymbolExtension(rawValue: "checkmark_applewatch")
    static let checkmark_gobackward: SymbolExtension = SymbolExtension(rawValue: "checkmark_gobackward")
    static let checkmark_rectangle_stack: SymbolExtension = SymbolExtension(rawValue: "checkmark_rectangle_stack")
    static let checkmark_rectangle_stack_fill: SymbolExtension = SymbolExtension(rawValue: "checkmark_rectangle_stack_fill")
    static let chineseyuanrenminbisign: SymbolExtension = SymbolExtension(rawValue: "chineseyuanrenminbisign")
    static let chineseyuanrenminbisign_arrow_circlepath: SymbolExtension = SymbolExtension(rawValue: "chineseyuanrenminbisign_arrow_circlepath")
    static let chineseyuanrenminbisign_circle: SymbolExtension = SymbolExtension(rawValue: "chineseyuanrenminbisign_circle")
    static let chineseyuanrenminbisign_circle_fill: SymbolExtension = SymbolExtension(rawValue: "chineseyuanrenminbisign_circle_fill")
    static let chineseyuanrenminbisign_square: SymbolExtension = SymbolExtension(rawValue: "chineseyuanrenminbisign_square")
    static let chineseyuanrenminbisign_square_fill: SymbolExtension = SymbolExtension(rawValue: "chineseyuanrenminbisign_square_fill")
    static let circle_badge_checkmark: SymbolExtension = SymbolExtension(rawValue: "circle_badge_checkmark")
    static let circle_badge_checkmark_fill: SymbolExtension = SymbolExtension(rawValue: "circle_badge_checkmark_fill")
    static let circle_badge_exclamationmark: SymbolExtension = SymbolExtension(rawValue: "circle_badge_exclamationmark")
    static let circle_badge_exclamationmark_fill: SymbolExtension = SymbolExtension(rawValue: "circle_badge_exclamationmark_fill")
    static let circle_badge_minus: SymbolExtension = SymbolExtension(rawValue: "circle_badge_minus")
    static let circle_badge_minus_fill: SymbolExtension = SymbolExtension(rawValue: "circle_badge_minus_fill")
    static let circle_badge_plus: SymbolExtension = SymbolExtension(rawValue: "circle_badge_plus")
    static let circle_badge_plus_fill: SymbolExtension = SymbolExtension(rawValue: "circle_badge_plus_fill")
    static let circle_badge_questionmark: SymbolExtension = SymbolExtension(rawValue: "circle_badge_questionmark")
    static let circle_badge_questionmark_fill: SymbolExtension = SymbolExtension(rawValue: "circle_badge_questionmark_fill")
    static let circle_badge_xmark: SymbolExtension = SymbolExtension(rawValue: "circle_badge_xmark")
    static let circle_badge_xmark_fill: SymbolExtension = SymbolExtension(rawValue: "circle_badge_xmark_fill")
    static let circle_bottomhalf_filled_inverse: SymbolExtension = SymbolExtension(rawValue: "circle_bottomhalf_filled_inverse")
    static let circle_bottomrighthalf_checkered: SymbolExtension = SymbolExtension(rawValue: "circle_bottomrighthalf_checkered")
    static let circle_dotted_and_circle: SymbolExtension = SymbolExtension(rawValue: "circle_dotted_and_circle")
    static let circle_dotted_circle: SymbolExtension = SymbolExtension(rawValue: "circle_dotted_circle")
    static let circle_dotted_circle_fill: SymbolExtension = SymbolExtension(rawValue: "circle_dotted_circle_fill")
    static let circle_filled_ipad: SymbolExtension = SymbolExtension(rawValue: "circle_filled_ipad")
    static let circle_filled_ipad_fill: SymbolExtension = SymbolExtension(rawValue: "circle_filled_ipad_fill")
    static let circle_filled_ipad_landscape: SymbolExtension = SymbolExtension(rawValue: "circle_filled_ipad_landscape")
    static let circle_filled_ipad_landscape_fill: SymbolExtension = SymbolExtension(rawValue: "circle_filled_ipad_landscape_fill")
    static let circle_filled_iphone: SymbolExtension = SymbolExtension(rawValue: "circle_filled_iphone")
    static let circle_filled_iphone_fill: SymbolExtension = SymbolExtension(rawValue: "circle_filled_iphone_fill")
    static let circle_lefthalf_filled_inverse: SymbolExtension = SymbolExtension(rawValue: "circle_lefthalf_filled_inverse")
    static let circle_lefthalf_filled_righthalf_striped_horizontal: SymbolExtension = SymbolExtension(rawValue: "circle_lefthalf_filled_righthalf_striped_horizontal")
    static let circle_lefthalf_filled_righthalf_striped_horizontal_inverse: SymbolExtension = SymbolExtension(rawValue: "circle_lefthalf_filled_righthalf_striped_horizontal_inverse")
    static let circle_lefthalf_striped_horizontal: SymbolExtension = SymbolExtension(rawValue: "circle_lefthalf_striped_horizontal")
    static let circle_lefthalf_striped_horizontal_inverse: SymbolExtension = SymbolExtension(rawValue: "circle_lefthalf_striped_horizontal_inverse")
    static let circle_righthalf_filled_inverse: SymbolExtension = SymbolExtension(rawValue: "circle_righthalf_filled_inverse")
    static let circle_tophalf_filled_inverse: SymbolExtension = SymbolExtension(rawValue: "circle_tophalf_filled_inverse")
    static let cloud_rainbow_half: SymbolExtension = SymbolExtension(rawValue: "cloud_rainbow_half")
    static let cloud_rainbow_half_fill: SymbolExtension = SymbolExtension(rawValue: "cloud_rainbow_half_fill")
    static let coloncurrencysign_arrow_circlepath: SymbolExtension = SymbolExtension(rawValue: "coloncurrencysign_arrow_circlepath")
    static let creditcard_trianglebadge_exclamationmark_fill: SymbolExtension = SymbolExtension(rawValue: "creditcard_trianglebadge_exclamationmark_fill")
    static let cruzeirosign_arrow_circlepath: SymbolExtension = SymbolExtension(rawValue: "cruzeirosign_arrow_circlepath")
    static let cursorarrow_slash: SymbolExtension = SymbolExtension(rawValue: "cursorarrow_slash")
    static let cursorarrow_slash_square: SymbolExtension = SymbolExtension(rawValue: "cursorarrow_slash_square")
    static let cursorarrow_slash_square_fill: SymbolExtension = SymbolExtension(rawValue: "cursorarrow_slash_square_fill")
    static let danishkronesign: SymbolExtension = SymbolExtension(rawValue: "danishkronesign")
    static let danishkronesign_arrow_circlepath: SymbolExtension = SymbolExtension(rawValue: "danishkronesign_arrow_circlepath")
    static let danishkronesign_circle: SymbolExtension = SymbolExtension(rawValue: "danishkronesign_circle")
    static let danishkronesign_circle_fill: SymbolExtension = SymbolExtension(rawValue: "danishkronesign_circle_fill")
    static let danishkronesign_square: SymbolExtension = SymbolExtension(rawValue: "danishkronesign_square")
    static let danishkronesign_square_fill: SymbolExtension = SymbolExtension(rawValue: "danishkronesign_square_fill")
    static let dishwasher_circle: SymbolExtension = SymbolExtension(rawValue: "dishwasher_circle")
    static let dishwasher_circle_fill: SymbolExtension = SymbolExtension(rawValue: "dishwasher_circle_fill")
    static let doc_badge_clock: SymbolExtension = SymbolExtension(rawValue: "doc_badge_clock")
    static let doc_badge_clock_fill: SymbolExtension = SymbolExtension(rawValue: "doc_badge_clock_fill")
    static let doc_questionmark: SymbolExtension = SymbolExtension(rawValue: "doc_questionmark")
    static let doc_questionmark_fill: SymbolExtension = SymbolExtension(rawValue: "doc_questionmark_fill")
    static let dog: SymbolExtension = SymbolExtension(rawValue: "dog")
    static let dog_circle: SymbolExtension = SymbolExtension(rawValue: "dog_circle")
    static let dog_circle_fill: SymbolExtension = SymbolExtension(rawValue: "dog_circle_fill")
    static let dog_fill: SymbolExtension = SymbolExtension(rawValue: "dog_fill")
    static let dongsign_arrow_circlepath: SymbolExtension = SymbolExtension(rawValue: "dongsign_arrow_circlepath")
    static let dot_scope: SymbolExtension = SymbolExtension(rawValue: "dot_scope")
    static let dot_scope_display: SymbolExtension = SymbolExtension(rawValue: "dot_scope_display")
    static let dot_scope_laptopcomputer: SymbolExtension = SymbolExtension(rawValue: "dot_scope_laptopcomputer")
    static let drop_halffull: SymbolExtension = SymbolExtension(rawValue: "drop_halffull")
    static let drop_transmission: SymbolExtension = SymbolExtension(rawValue: "drop_transmission")
    static let dryer_circle: SymbolExtension = SymbolExtension(rawValue: "dryer_circle")
    static let dryer_circle_fill: SymbolExtension = SymbolExtension(rawValue: "dryer_circle_fill")
    static let ear_badge_waveform: SymbolExtension = SymbolExtension(rawValue: "ear_badge_waveform")
    static let engine_combustion_badge_exclamationmark: SymbolExtension = SymbolExtension(rawValue: "engine_combustion_badge_exclamationmark")
    static let engine_combustion_badge_exclamationmark_fill: SymbolExtension = SymbolExtension(rawValue: "engine_combustion_badge_exclamationmark_fill")
    static let envelope_badge_person_crop: SymbolExtension = SymbolExtension(rawValue: "envelope_badge_person_crop")
    static let envelope_badge_person_crop_fill: SymbolExtension = SymbolExtension(rawValue: "envelope_badge_person_crop_fill")
    static let eurosign_arrow_circlepath: SymbolExtension = SymbolExtension(rawValue: "eurosign_arrow_circlepath")
    static let eurozonesign: SymbolExtension = SymbolExtension(rawValue: "eurozonesign")
    static let eurozonesign_arrow_circlepath: SymbolExtension = SymbolExtension(rawValue: "eurozonesign_arrow_circlepath")
    static let eurozonesign_circle: SymbolExtension = SymbolExtension(rawValue: "eurozonesign_circle")
    static let eurozonesign_circle_fill: SymbolExtension = SymbolExtension(rawValue: "eurozonesign_circle_fill")
    static let eurozonesign_square: SymbolExtension = SymbolExtension(rawValue: "eurozonesign_square")
    static let eurozonesign_square_fill: SymbolExtension = SymbolExtension(rawValue: "eurozonesign_square_fill")
    static let ev_charger: SymbolExtension = SymbolExtension(rawValue: "ev_charger")
    static let ev_charger_arrowtriangle_left: SymbolExtension = SymbolExtension(rawValue: "ev_charger_arrowtriangle_left")
    static let ev_charger_arrowtriangle_left_fill: SymbolExtension = SymbolExtension(rawValue: "ev_charger_arrowtriangle_left_fill")
    static let ev_charger_arrowtriangle_right: SymbolExtension = SymbolExtension(rawValue: "ev_charger_arrowtriangle_right")
    static let ev_charger_arrowtriangle_right_fill: SymbolExtension = SymbolExtension(rawValue: "ev_charger_arrowtriangle_right_fill")
    static let ev_charger_exclamationmark: SymbolExtension = SymbolExtension(rawValue: "ev_charger_exclamationmark")
    static let ev_charger_exclamationmark_fill: SymbolExtension = SymbolExtension(rawValue: "ev_charger_exclamationmark_fill")
    static let ev_charger_fill: SymbolExtension = SymbolExtension(rawValue: "ev_charger_fill")
    static let ev_charger_slash: SymbolExtension = SymbolExtension(rawValue: "ev_charger_slash")
    static let ev_charger_slash_fill: SymbolExtension = SymbolExtension(rawValue: "ev_charger_slash_fill")
    static let ev_plug_ac_gb_t: SymbolExtension = SymbolExtension(rawValue: "ev_plug_ac_gb_t")
    static let ev_plug_ac_gb_t_fill: SymbolExtension = SymbolExtension(rawValue: "ev_plug_ac_gb_t_fill")
    static let ev_plug_ac_type_1: SymbolExtension = SymbolExtension(rawValue: "ev_plug_ac_type_1")
    static let ev_plug_ac_type_1_fill: SymbolExtension = SymbolExtension(rawValue: "ev_plug_ac_type_1_fill")
    static let ev_plug_ac_type_2: SymbolExtension = SymbolExtension(rawValue: "ev_plug_ac_type_2")
    static let ev_plug_ac_type_2_fill: SymbolExtension = SymbolExtension(rawValue: "ev_plug_ac_type_2_fill")
    static let ev_plug_dc_ccs1: SymbolExtension = SymbolExtension(rawValue: "ev_plug_dc_ccs1")
    static let ev_plug_dc_ccs1_fill: SymbolExtension = SymbolExtension(rawValue: "ev_plug_dc_ccs1_fill")
    static let ev_plug_dc_ccs2: SymbolExtension = SymbolExtension(rawValue: "ev_plug_dc_ccs2")
    static let ev_plug_dc_ccs2_fill: SymbolExtension = SymbolExtension(rawValue: "ev_plug_dc_ccs2_fill")
    static let ev_plug_dc_chademo: SymbolExtension = SymbolExtension(rawValue: "ev_plug_dc_chademo")
    static let ev_plug_dc_chademo_fill: SymbolExtension = SymbolExtension(rawValue: "ev_plug_dc_chademo_fill")
    static let ev_plug_dc_gb_t: SymbolExtension = SymbolExtension(rawValue: "ev_plug_dc_gb_t")
    static let ev_plug_dc_gb_t_fill: SymbolExtension = SymbolExtension(rawValue: "ev_plug_dc_gb_t_fill")
    static let ev_plug_dc_nacs: SymbolExtension = SymbolExtension(rawValue: "ev_plug_dc_nacs")
    static let ev_plug_dc_nacs_fill: SymbolExtension = SymbolExtension(rawValue: "ev_plug_dc_nacs_fill")
    static let exclamationmark_magnifyingglass: SymbolExtension = SymbolExtension(rawValue: "exclamationmark_magnifyingglass")
    static let exclamationmark_tirepressure: SymbolExtension = SymbolExtension(rawValue: "exclamationmark_tirepressure")
    static let exclamationmark_warninglight: SymbolExtension = SymbolExtension(rawValue: "exclamationmark_warninglight")
    static let exclamationmark_warninglight_fill: SymbolExtension = SymbolExtension(rawValue: "exclamationmark_warninglight_fill")
    static let eyeglasses_slash: SymbolExtension = SymbolExtension(rawValue: "eyeglasses_slash")
    static let fan: SymbolExtension = SymbolExtension(rawValue: "fan")
    static let fan_badge_automatic: SymbolExtension = SymbolExtension(rawValue: "fan_badge_automatic")
    static let fan_badge_automatic_fill: SymbolExtension = SymbolExtension(rawValue: "fan_badge_automatic_fill")
    static let fan_fill: SymbolExtension = SymbolExtension(rawValue: "fan_fill")
    static let fan_slash: SymbolExtension = SymbolExtension(rawValue: "fan_slash")
    static let fan_slash_fill: SymbolExtension = SymbolExtension(rawValue: "fan_slash_fill")
    static let field_of_view_ultrawide: SymbolExtension = SymbolExtension(rawValue: "field_of_view_ultrawide")
    static let field_of_view_ultrawide_fill: SymbolExtension = SymbolExtension(rawValue: "field_of_view_ultrawide_fill")
    static let field_of_view_wide: SymbolExtension = SymbolExtension(rawValue: "field_of_view_wide")
    static let field_of_view_wide_fill: SymbolExtension = SymbolExtension(rawValue: "field_of_view_wide_fill")
    static let figure: SymbolExtension = SymbolExtension(rawValue: "figure")
    static let figure_2: SymbolExtension = SymbolExtension(rawValue: "figure_2")
    static let figure_2_circle: SymbolExtension = SymbolExtension(rawValue: "figure_2_circle")
    static let figure_2_circle_fill: SymbolExtension = SymbolExtension(rawValue: "figure_2_circle_fill")
    static let figure_child: SymbolExtension = SymbolExtension(rawValue: "figure_child")
    static let figure_child_and_lock: SymbolExtension = SymbolExtension(rawValue: "figure_child_and_lock")
    static let figure_child_and_lock_fill: SymbolExtension = SymbolExtension(rawValue: "figure_child_and_lock_fill")
    static let figure_child_and_lock_open: SymbolExtension = SymbolExtension(rawValue: "figure_child_and_lock_open")
    static let figure_child_and_lock_open_fill: SymbolExtension = SymbolExtension(rawValue: "figure_child_and_lock_open_fill")
    static let figure_child_circle: SymbolExtension = SymbolExtension(rawValue: "figure_child_circle")
    static let figure_child_circle_fill: SymbolExtension = SymbolExtension(rawValue: "figure_child_circle_fill")
    static let figure_seated_side: SymbolExtension = SymbolExtension(rawValue: "figure_seated_side")
    static let figure_seated_side_air_distribution_lower: SymbolExtension = SymbolExtension(rawValue: "figure_seated_side_air_distribution_lower")
    static let figure_seated_side_air_distribution_middle: SymbolExtension = SymbolExtension(rawValue: "figure_seated_side_air_distribution_middle")
    static let figure_seated_side_air_distribution_middle_and_lower: SymbolExtension = SymbolExtension(rawValue: "figure_seated_side_air_distribution_middle_and_lower")
    static let figure_seated_side_air_distribution_middle_and_lower_angled: SymbolExtension = SymbolExtension(rawValue: "figure_seated_side_air_distribution_middle_and_lower_angled")
    static let figure_seated_side_air_distribution_upper: SymbolExtension = SymbolExtension(rawValue: "figure_seated_side_air_distribution_upper")
    static let figure_seated_side_air_distribution_upper_angled_and_lower_angled: SymbolExtension = SymbolExtension(rawValue: "figure_seated_side_air_distribution_upper_angled_and_lower_angled")
    static let figure_seated_side_air_distribution_upper_angled_and_middle: SymbolExtension = SymbolExtension(rawValue: "figure_seated_side_air_distribution_upper_angled_and_middle")
    static let figure_seated_side_air_distribution_upper_angled_and_middle_and_lower_angled: SymbolExtension = SymbolExtension(rawValue: "figure_seated_side_air_distribution_upper_angled_and_middle_and_lower_angled")
    static let figure_seated_side_automatic: SymbolExtension = SymbolExtension(rawValue: "figure_seated_side_automatic")
    static let figure_seated_side_windshield_front_and_heat_waves_air_distribution_lower: SymbolExtension = SymbolExtension(rawValue: "figure_seated_side_windshield_front_and_heat_waves_air_distribution_lower")
    static let figure_seated_side_windshield_front_and_heat_waves_air_distribution_middle: SymbolExtension = SymbolExtension(rawValue: "figure_seated_side_windshield_front_and_heat_waves_air_distribution_middle")
    static let figure_seated_side_windshield_front_and_heat_waves_air_distribution_middle_and_lower: SymbolExtension = SymbolExtension(rawValue: "figure_seated_side_windshield_front_and_heat_waves_air_distribution_middle_and_lower")
    static let figure_seated_side_windshield_front_and_heat_waves_air_distribution_upper: SymbolExtension = SymbolExtension(rawValue: "figure_seated_side_windshield_front_and_heat_waves_air_distribution_upper")
    static let figure_seated_side_windshield_front_and_heat_waves_air_distribution_upper_and_lower: SymbolExtension = SymbolExtension(rawValue: "figure_seated_side_windshield_front_and_heat_waves_air_distribution_upper_and_lower")
    static let figure_seated_side_windshield_front_and_heat_waves_air_distribution_upper_and_middle: SymbolExtension = SymbolExtension(rawValue: "figure_seated_side_windshield_front_and_heat_waves_air_distribution_upper_and_middle")
    static let figure_seated_side_windshield_front_and_heat_waves_air_distribution_upper_and_middle_and_lower: SymbolExtension = SymbolExtension(rawValue: "figure_seated_side_windshield_front_and_heat_waves_air_distribution_upper_and_middle_and_lower")
    static let figure_walk_motion_trianglebadge_exclamationmark: SymbolExtension = SymbolExtension(rawValue: "figure_walk_motion_trianglebadge_exclamationmark")
    static let fireworks: SymbolExtension = SymbolExtension(rawValue: "fireworks")
    static let flashlight_off_circle: SymbolExtension = SymbolExtension(rawValue: "flashlight_off_circle")
    static let flashlight_off_circle_fill: SymbolExtension = SymbolExtension(rawValue: "flashlight_off_circle_fill")
    static let flashlight_on_circle: SymbolExtension = SymbolExtension(rawValue: "flashlight_on_circle")
    static let flashlight_on_circle_fill: SymbolExtension = SymbolExtension(rawValue: "flashlight_on_circle_fill")
    static let flashlight_slash: SymbolExtension = SymbolExtension(rawValue: "flashlight_slash")
    static let flashlight_slash_circle: SymbolExtension = SymbolExtension(rawValue: "flashlight_slash_circle")
    static let flashlight_slash_circle_fill: SymbolExtension = SymbolExtension(rawValue: "flashlight_slash_circle_fill")
    static let flask: SymbolExtension = SymbolExtension(rawValue: "flask")
    static let flask_fill: SymbolExtension = SymbolExtension(rawValue: "flask_fill")
    static let florinsign_arrow_circlepath: SymbolExtension = SymbolExtension(rawValue: "florinsign_arrow_circlepath")
    static let francsign_arrow_circlepath: SymbolExtension = SymbolExtension(rawValue: "francsign_arrow_circlepath")
    static let fuelpump_arrowtriangle_left: SymbolExtension = SymbolExtension(rawValue: "fuelpump_arrowtriangle_left")
    static let fuelpump_arrowtriangle_left_fill: SymbolExtension = SymbolExtension(rawValue: "fuelpump_arrowtriangle_left_fill")
    static let fuelpump_arrowtriangle_right: SymbolExtension = SymbolExtension(rawValue: "fuelpump_arrowtriangle_right")
    static let fuelpump_arrowtriangle_right_fill: SymbolExtension = SymbolExtension(rawValue: "fuelpump_arrowtriangle_right_fill")
    static let fuelpump_exclamationmark: SymbolExtension = SymbolExtension(rawValue: "fuelpump_exclamationmark")
    static let fuelpump_exclamationmark_fill: SymbolExtension = SymbolExtension(rawValue: "fuelpump_exclamationmark_fill")
    static let fuelpump_slash: SymbolExtension = SymbolExtension(rawValue: "fuelpump_slash")
    static let fuelpump_slash_fill: SymbolExtension = SymbolExtension(rawValue: "fuelpump_slash_fill")
    static let gauge_open_with_lines_needle_33percent: SymbolExtension = SymbolExtension(rawValue: "gauge_open_with_lines_needle_33percent")
    static let gauge_open_with_lines_needle_33percent_and_arrowtriangle: SymbolExtension = SymbolExtension(rawValue: "gauge_open_with_lines_needle_33percent_and_arrowtriangle")
    static let gauge_open_with_lines_needle_33percent_and_arrowtriangle_from_0percent_to_50percent: SymbolExtension = SymbolExtension(rawValue: "gauge_open_with_lines_needle_33percent_and_arrowtriangle_from_0percent_to_50percent")
    static let gauge_open_with_lines_needle_67percent_and_arrowtriangle: SymbolExtension = SymbolExtension(rawValue: "gauge_open_with_lines_needle_67percent_and_arrowtriangle")
    static let gauge_open_with_lines_needle_67percent_and_arrowtriangle_and_car: SymbolExtension = SymbolExtension(rawValue: "gauge_open_with_lines_needle_67percent_and_arrowtriangle_and_car")
    static let gauge_open_with_lines_needle_84percent_exclamation: SymbolExtension = SymbolExtension(rawValue: "gauge_open_with_lines_needle_84percent_exclamation")
    static let gauge_with_dots_needle_0percent: SymbolExtension = SymbolExtension(rawValue: "gauge_with_dots_needle_0percent")
    static let gauge_with_dots_needle_33percent: SymbolExtension = SymbolExtension(rawValue: "gauge_with_dots_needle_33percent")
    static let gauge_with_dots_needle_50percent: SymbolExtension = SymbolExtension(rawValue: "gauge_with_dots_needle_50percent")
    static let gauge_with_dots_needle_67percent: SymbolExtension = SymbolExtension(rawValue: "gauge_with_dots_needle_67percent")
    static let gauge_with_dots_needle_100percent: SymbolExtension = SymbolExtension(rawValue: "gauge_with_dots_needle_100percent")
    static let gauge_with_dots_needle_bottom_0percent: SymbolExtension = SymbolExtension(rawValue: "gauge_with_dots_needle_bottom_0percent")
    static let gauge_with_dots_needle_bottom_50percent: SymbolExtension = SymbolExtension(rawValue: "gauge_with_dots_needle_bottom_50percent")
    static let gauge_with_dots_needle_bottom_50percent_badge_minus: SymbolExtension = SymbolExtension(rawValue: "gauge_with_dots_needle_bottom_50percent_badge_minus")
    static let gauge_with_dots_needle_bottom_50percent_badge_plus: SymbolExtension = SymbolExtension(rawValue: "gauge_with_dots_needle_bottom_50percent_badge_plus")
    static let gauge_with_dots_needle_bottom_100percent: SymbolExtension = SymbolExtension(rawValue: "gauge_with_dots_needle_bottom_100percent")
    static let gauge_with_needle: SymbolExtension = SymbolExtension(rawValue: "gauge_with_needle")
    static let gauge_with_needle_fill: SymbolExtension = SymbolExtension(rawValue: "gauge_with_needle_fill")
    static let gearshift_layout_sixspeed: SymbolExtension = SymbolExtension(rawValue: "gearshift_layout_sixspeed")
    static let guaranisign_arrow_circlepath: SymbolExtension = SymbolExtension(rawValue: "guaranisign_arrow_circlepath")
    static let gym_bag: SymbolExtension = SymbolExtension(rawValue: "gym_bag")
    static let gym_bag_fill: SymbolExtension = SymbolExtension(rawValue: "gym_bag_fill")
    static let hand_point_up_left_and_text: SymbolExtension = SymbolExtension(rawValue: "hand_point_up_left_and_text")
    static let hand_point_up_left_and_text_fill: SymbolExtension = SymbolExtension(rawValue: "hand_point_up_left_and_text_fill")
    static let handbag_circle: SymbolExtension = SymbolExtension(rawValue: "handbag_circle")
    static let handbag_circle_fill: SymbolExtension = SymbolExtension(rawValue: "handbag_circle_fill")
    static let hands_and_sparkles: SymbolExtension = SymbolExtension(rawValue: "hands_and_sparkles")
    static let hands_and_sparkles_fill: SymbolExtension = SymbolExtension(rawValue: "hands_and_sparkles_fill")
    static let hanger: SymbolExtension = SymbolExtension(rawValue: "hanger")
    static let hare_circle: SymbolExtension = SymbolExtension(rawValue: "hare_circle")
    static let hare_circle_fill: SymbolExtension = SymbolExtension(rawValue: "hare_circle_fill")
    static let head_profile_arrow_forward_and_visionpro: SymbolExtension = SymbolExtension(rawValue: "head_profile_arrow_forward_and_visionpro")
    static let heat_waves: SymbolExtension = SymbolExtension(rawValue: "heat_waves")
    static let horn: SymbolExtension = SymbolExtension(rawValue: "horn")
    static let horn_blast: SymbolExtension = SymbolExtension(rawValue: "horn_blast")
    static let horn_blast_fill: SymbolExtension = SymbolExtension(rawValue: "horn_blast_fill")
    static let horn_fill: SymbolExtension = SymbolExtension(rawValue: "horn_fill")
    static let hourglass_and_lock: SymbolExtension = SymbolExtension(rawValue: "hourglass_and_lock")
    static let hryvniasign_arrow_circlepath: SymbolExtension = SymbolExtension(rawValue: "hryvniasign_arrow_circlepath")
    static let indianrupeesign_arrow_circlepath: SymbolExtension = SymbolExtension(rawValue: "indianrupeesign_arrow_circlepath")
    static let ipad_case: SymbolExtension = SymbolExtension(rawValue: "ipad_case")
    static let ipad_case_and_iphone_case: SymbolExtension = SymbolExtension(rawValue: "ipad_case_and_iphone_case")
    static let ipad_sizes: SymbolExtension = SymbolExtension(rawValue: "ipad_sizes")
    static let iphone_and_arrow_left_and_arrow_right: SymbolExtension = SymbolExtension(rawValue: "iphone_and_arrow_left_and_arrow_right")
    static let iphone_case: SymbolExtension = SymbolExtension(rawValue: "iphone_case")
    static let iphone_sizes: SymbolExtension = SymbolExtension(rawValue: "iphone_sizes")
    static let kashida_arabic: SymbolExtension = SymbolExtension(rawValue: "kashida_arabic")
    static let key_radiowaves_forward_slash: SymbolExtension = SymbolExtension(rawValue: "key_radiowaves_forward_slash")
    static let key_radiowaves_forward_slash_fill: SymbolExtension = SymbolExtension(rawValue: "key_radiowaves_forward_slash_fill")
    static let key_slash: SymbolExtension = SymbolExtension(rawValue: "key_slash")
    static let key_slash_fill: SymbolExtension = SymbolExtension(rawValue: "key_slash_fill")
    static let kipsign_arrow_circlepath: SymbolExtension = SymbolExtension(rawValue: "kipsign_arrow_circlepath")
    static let l_button_roundedbottom_horizontal: SymbolExtension = SymbolExtension(rawValue: "l_button_roundedbottom_horizontal")
    static let l_button_roundedbottom_horizontal_fill: SymbolExtension = SymbolExtension(rawValue: "l_button_roundedbottom_horizontal_fill")
    static let l1_button_roundedbottom_horizontal: SymbolExtension = SymbolExtension(rawValue: "l1_button_roundedbottom_horizontal")
    static let l1_button_roundedbottom_horizontal_fill: SymbolExtension = SymbolExtension(rawValue: "l1_button_roundedbottom_horizontal_fill")
    static let l1_circle: SymbolExtension = SymbolExtension(rawValue: "l1_circle")
    static let l1_circle_fill: SymbolExtension = SymbolExtension(rawValue: "l1_circle_fill")
    static let l2_button_angledtop_vertical_left: SymbolExtension = SymbolExtension(rawValue: "l2_button_angledtop_vertical_left")
    static let l2_button_angledtop_vertical_left_fill: SymbolExtension = SymbolExtension(rawValue: "l2_button_angledtop_vertical_left_fill")
    static let l2_button_roundedtop_horizontal: SymbolExtension = SymbolExtension(rawValue: "l2_button_roundedtop_horizontal")
    static let l2_button_roundedtop_horizontal_fill: SymbolExtension = SymbolExtension(rawValue: "l2_button_roundedtop_horizontal_fill")
    static let l2_circle: SymbolExtension = SymbolExtension(rawValue: "l2_circle")
    static let l2_circle_fill: SymbolExtension = SymbolExtension(rawValue: "l2_circle_fill")
    static let l3_button_angledbottom_horizontal_left: SymbolExtension = SymbolExtension(rawValue: "l3_button_angledbottom_horizontal_left")
    static let l3_button_angledbottom_horizontal_left_fill: SymbolExtension = SymbolExtension(rawValue: "l3_button_angledbottom_horizontal_left_fill")
    static let l4_button_horizontal: SymbolExtension = SymbolExtension(rawValue: "l4_button_horizontal")
    static let l4_button_horizontal_fill: SymbolExtension = SymbolExtension(rawValue: "l4_button_horizontal_fill")
    static let ladybug_circle: SymbolExtension = SymbolExtension(rawValue: "ladybug_circle")
    static let ladybug_circle_fill: SymbolExtension = SymbolExtension(rawValue: "ladybug_circle_fill")
    static let larisign_arrow_circlepath: SymbolExtension = SymbolExtension(rawValue: "larisign_arrow_circlepath")
    static let laser_burst: SymbolExtension = SymbolExtension(rawValue: "laser_burst")
    static let lasso_badge_sparkles: SymbolExtension = SymbolExtension(rawValue: "lasso_badge_sparkles")
    static let lb_button_roundedbottom_horizontal: SymbolExtension = SymbolExtension(rawValue: "lb_button_roundedbottom_horizontal")
    static let lb_button_roundedbottom_horizontal_fill: SymbolExtension = SymbolExtension(rawValue: "lb_button_roundedbottom_horizontal_fill")
    static let lb_circle: SymbolExtension = SymbolExtension(rawValue: "lb_circle")
    static let lb_circle_fill: SymbolExtension = SymbolExtension(rawValue: "lb_circle_fill")
    static let left: SymbolExtension = SymbolExtension(rawValue: "left")
    static let left_circle: SymbolExtension = SymbolExtension(rawValue: "left_circle")
    static let left_circle_fill: SymbolExtension = SymbolExtension(rawValue: "left_circle_fill")
    static let licenseplate: SymbolExtension = SymbolExtension(rawValue: "licenseplate")
    static let licenseplate_fill: SymbolExtension = SymbolExtension(rawValue: "licenseplate_fill")
    static let lightbulb_max: SymbolExtension = SymbolExtension(rawValue: "lightbulb_max")
    static let lightbulb_max_fill: SymbolExtension = SymbolExtension(rawValue: "lightbulb_max_fill")
    static let lightbulb_min: SymbolExtension = SymbolExtension(rawValue: "lightbulb_min")
    static let lightbulb_min_badge_exclamationmark: SymbolExtension = SymbolExtension(rawValue: "lightbulb_min_badge_exclamationmark")
    static let lightbulb_min_badge_exclamationmark_fill: SymbolExtension = SymbolExtension(rawValue: "lightbulb_min_badge_exclamationmark_fill")
    static let lightbulb_min_fill: SymbolExtension = SymbolExtension(rawValue: "lightbulb_min_fill")
    static let lightrail: SymbolExtension = SymbolExtension(rawValue: "lightrail")
    static let lightrail_fill: SymbolExtension = SymbolExtension(rawValue: "lightrail_fill")
    static let lightspectrum_horizontal: SymbolExtension = SymbolExtension(rawValue: "lightspectrum_horizontal")
    static let line_3_horizontal_button_angledtop_vertical_right: SymbolExtension = SymbolExtension(rawValue: "line_3_horizontal_button_angledtop_vertical_right")
    static let line_3_horizontal_button_angledtop_vertical_right_fill: SymbolExtension = SymbolExtension(rawValue: "line_3_horizontal_button_angledtop_vertical_right_fill")
    static let lines_measurement_vertical: SymbolExtension = SymbolExtension(rawValue: "lines_measurement_vertical")
    static let lirasign_arrow_circlepath: SymbolExtension = SymbolExtension(rawValue: "lirasign_arrow_circlepath")
    static let livephoto_badge_automatic: SymbolExtension = SymbolExtension(rawValue: "livephoto_badge_automatic")
    static let lizard_circle: SymbolExtension = SymbolExtension(rawValue: "lizard_circle")
    static let lizard_circle_fill: SymbolExtension = SymbolExtension(rawValue: "lizard_circle_fill")
    static let lm_button_horizontal: SymbolExtension = SymbolExtension(rawValue: "lm_button_horizontal")
    static let lm_button_horizontal_fill: SymbolExtension = SymbolExtension(rawValue: "lm_button_horizontal_fill")
    static let lock_app_dashed: SymbolExtension = SymbolExtension(rawValue: "lock_app_dashed")
    static let lock_badge_clock: SymbolExtension = SymbolExtension(rawValue: "lock_badge_clock")
    static let lock_badge_clock_fill: SymbolExtension = SymbolExtension(rawValue: "lock_badge_clock_fill")
    static let lock_circle_dotted: SymbolExtension = SymbolExtension(rawValue: "lock_circle_dotted")
    static let lsb_button_angledbottom_horizontal_left: SymbolExtension = SymbolExtension(rawValue: "lsb_button_angledbottom_horizontal_left")
    static let lsb_button_angledbottom_horizontal_left_fill: SymbolExtension = SymbolExtension(rawValue: "lsb_button_angledbottom_horizontal_left_fill")
    static let lt_button_roundedtop_horizontal: SymbolExtension = SymbolExtension(rawValue: "lt_button_roundedtop_horizontal")
    static let lt_button_roundedtop_horizontal_fill: SymbolExtension = SymbolExtension(rawValue: "lt_button_roundedtop_horizontal_fill")
    static let lt_circle: SymbolExtension = SymbolExtension(rawValue: "lt_circle")
    static let lt_circle_fill: SymbolExtension = SymbolExtension(rawValue: "lt_circle_fill")
    static let m1_button_horizontal: SymbolExtension = SymbolExtension(rawValue: "m1_button_horizontal")
    static let m1_button_horizontal_fill: SymbolExtension = SymbolExtension(rawValue: "m1_button_horizontal_fill")
    static let m2_button_horizontal: SymbolExtension = SymbolExtension(rawValue: "m2_button_horizontal")
    static let m2_button_horizontal_fill: SymbolExtension = SymbolExtension(rawValue: "m2_button_horizontal_fill")
    static let m3_button_horizontal: SymbolExtension = SymbolExtension(rawValue: "m3_button_horizontal")
    static let m3_button_horizontal_fill: SymbolExtension = SymbolExtension(rawValue: "m3_button_horizontal_fill")
    static let m4_button_horizontal: SymbolExtension = SymbolExtension(rawValue: "m4_button_horizontal")
    static let m4_button_horizontal_fill: SymbolExtension = SymbolExtension(rawValue: "m4_button_horizontal_fill")
    static let macbook: SymbolExtension = SymbolExtension(rawValue: "macbook")
    static let macbook_and_visionpro: SymbolExtension = SymbolExtension(rawValue: "macbook_and_visionpro")
    static let macbook_gen1: SymbolExtension = SymbolExtension(rawValue: "macbook_gen1")
    static let macbook_gen2: SymbolExtension = SymbolExtension(rawValue: "macbook_gen2")
    static let macwindow_and_cursorarrow: SymbolExtension = SymbolExtension(rawValue: "macwindow_and_cursorarrow")
    static let manatsign_arrow_circlepath: SymbolExtension = SymbolExtension(rawValue: "manatsign_arrow_circlepath")
    static let mappin_and_ellipse_circle: SymbolExtension = SymbolExtension(rawValue: "mappin_and_ellipse_circle")
    static let mappin_and_ellipse_circle_fill: SymbolExtension = SymbolExtension(rawValue: "mappin_and_ellipse_circle_fill")
    static let message_badge_waveform: SymbolExtension = SymbolExtension(rawValue: "message_badge_waveform")
    static let message_badge_waveform_fill: SymbolExtension = SymbolExtension(rawValue: "message_badge_waveform_fill")
    static let millsign_arrow_circlepath: SymbolExtension = SymbolExtension(rawValue: "millsign_arrow_circlepath")
    static let moon_dust: SymbolExtension = SymbolExtension(rawValue: "moon_dust")
    static let moon_dust_circle: SymbolExtension = SymbolExtension(rawValue: "moon_dust_circle")
    static let moon_dust_circle_fill: SymbolExtension = SymbolExtension(rawValue: "moon_dust_circle_fill")
    static let moon_dust_fill: SymbolExtension = SymbolExtension(rawValue: "moon_dust_fill")
    static let moonrise: SymbolExtension = SymbolExtension(rawValue: "moonrise")
    static let moonrise_circle: SymbolExtension = SymbolExtension(rawValue: "moonrise_circle")
    static let moonrise_circle_fill: SymbolExtension = SymbolExtension(rawValue: "moonrise_circle_fill")
    static let moonrise_fill: SymbolExtension = SymbolExtension(rawValue: "moonrise_fill")
    static let moonset: SymbolExtension = SymbolExtension(rawValue: "moonset")
    static let moonset_circle: SymbolExtension = SymbolExtension(rawValue: "moonset_circle")
    static let moonset_circle_fill: SymbolExtension = SymbolExtension(rawValue: "moonset_circle_fill")
    static let moonset_fill: SymbolExtension = SymbolExtension(rawValue: "moonset_fill")
    static let movieclapper: SymbolExtension = SymbolExtension(rawValue: "movieclapper")
    static let movieclapper_fill: SymbolExtension = SymbolExtension(rawValue: "movieclapper_fill")
    static let nairasign_arrow_circlepath: SymbolExtension = SymbolExtension(rawValue: "nairasign_arrow_circlepath")
    static let network_slash: SymbolExtension = SymbolExtension(rawValue: "network_slash")
    static let norwegiankronesign: SymbolExtension = SymbolExtension(rawValue: "norwegiankronesign")
    static let norwegiankronesign_arrow_circlepath: SymbolExtension = SymbolExtension(rawValue: "norwegiankronesign_arrow_circlepath")
    static let norwegiankronesign_circle: SymbolExtension = SymbolExtension(rawValue: "norwegiankronesign_circle")
    static let norwegiankronesign_circle_fill: SymbolExtension = SymbolExtension(rawValue: "norwegiankronesign_circle_fill")
    static let norwegiankronesign_square: SymbolExtension = SymbolExtension(rawValue: "norwegiankronesign_square")
    static let norwegiankronesign_square_fill: SymbolExtension = SymbolExtension(rawValue: "norwegiankronesign_square_fill")
    static let opticid: SymbolExtension = SymbolExtension(rawValue: "opticid")
    static let opticid_fill: SymbolExtension = SymbolExtension(rawValue: "opticid_fill")
    static let p1_button_horizontal: SymbolExtension = SymbolExtension(rawValue: "p1_button_horizontal")
    static let p1_button_horizontal_fill: SymbolExtension = SymbolExtension(rawValue: "p1_button_horizontal_fill")
    static let p2_button_horizontal: SymbolExtension = SymbolExtension(rawValue: "p2_button_horizontal")
    static let p2_button_horizontal_fill: SymbolExtension = SymbolExtension(rawValue: "p2_button_horizontal_fill")
    static let p3_button_horizontal: SymbolExtension = SymbolExtension(rawValue: "p3_button_horizontal")
    static let p3_button_horizontal_fill: SymbolExtension = SymbolExtension(rawValue: "p3_button_horizontal_fill")
    static let p4_button_horizontal: SymbolExtension = SymbolExtension(rawValue: "p4_button_horizontal")
    static let p4_button_horizontal_fill: SymbolExtension = SymbolExtension(rawValue: "p4_button_horizontal_fill")
    static let paddleshifter_left: SymbolExtension = SymbolExtension(rawValue: "paddleshifter_left")
    static let paddleshifter_left_fill: SymbolExtension = SymbolExtension(rawValue: "paddleshifter_left_fill")
    static let paddleshifter_right: SymbolExtension = SymbolExtension(rawValue: "paddleshifter_right")
    static let paddleshifter_right_fill: SymbolExtension = SymbolExtension(rawValue: "paddleshifter_right_fill")
    static let pano_badge_play: SymbolExtension = SymbolExtension(rawValue: "pano_badge_play")
    static let pano_badge_play_fill: SymbolExtension = SymbolExtension(rawValue: "pano_badge_play_fill")
    static let parkingsign_radiowaves_left_and_right: SymbolExtension = SymbolExtension(rawValue: "parkingsign_radiowaves_left_and_right")
    static let parkingsign_radiowaves_right_and_safetycone: SymbolExtension = SymbolExtension(rawValue: "parkingsign_radiowaves_right_and_safetycone")
    static let parkingsign_steeringwheel: SymbolExtension = SymbolExtension(rawValue: "parkingsign_steeringwheel")
    static let pedal_accelerator: SymbolExtension = SymbolExtension(rawValue: "pedal_accelerator")
    static let pedal_accelerator_fill: SymbolExtension = SymbolExtension(rawValue: "pedal_accelerator_fill")
    static let pedal_brake: SymbolExtension = SymbolExtension(rawValue: "pedal_brake")
    static let pedal_brake_fill: SymbolExtension = SymbolExtension(rawValue: "pedal_brake_fill")
    static let pedal_clutch: SymbolExtension = SymbolExtension(rawValue: "pedal_clutch")
    static let pedal_clutch_fill: SymbolExtension = SymbolExtension(rawValue: "pedal_clutch_fill")
    static let pencil_and_list_clipboard: SymbolExtension = SymbolExtension(rawValue: "pencil_and_list_clipboard")
    static let pencil_and_scribble: SymbolExtension = SymbolExtension(rawValue: "pencil_and_scribble")
    static let pencil_tip_crop_circle_badge_arrow_forward_fill: SymbolExtension = SymbolExtension(rawValue: "pencil_tip_crop_circle_badge_arrow_forward_fill")
    static let pencil_tip_crop_circle_badge_minus_fill: SymbolExtension = SymbolExtension(rawValue: "pencil_tip_crop_circle_badge_minus_fill")
    static let pencil_tip_crop_circle_badge_plus_fill: SymbolExtension = SymbolExtension(rawValue: "pencil_tip_crop_circle_badge_plus_fill")
    static let pencil_tip_crop_circle_fill: SymbolExtension = SymbolExtension(rawValue: "pencil_tip_crop_circle_fill")
    static let person_2_badge_key: SymbolExtension = SymbolExtension(rawValue: "person_2_badge_key")
    static let person_2_badge_key_fill: SymbolExtension = SymbolExtension(rawValue: "person_2_badge_key_fill")
    static let person_and_background_striped_horizontal: SymbolExtension = SymbolExtension(rawValue: "person_and_background_striped_horizontal")
    static let person_bubble: SymbolExtension = SymbolExtension(rawValue: "person_bubble")
    static let person_bubble_fill: SymbolExtension = SymbolExtension(rawValue: "person_bubble_fill")
    static let person_bust_circle: SymbolExtension = SymbolExtension(rawValue: "person_bust_circle")
    static let person_bust_circle_fill: SymbolExtension = SymbolExtension(rawValue: "person_bust_circle_fill")
    static let person_crop_circle_dashed_circle: SymbolExtension = SymbolExtension(rawValue: "person_crop_circle_dashed_circle")
    static let person_crop_circle_dashed_circle_fill: SymbolExtension = SymbolExtension(rawValue: "person_crop_circle_dashed_circle_fill")
    static let person_slash: SymbolExtension = SymbolExtension(rawValue: "person_slash")
    static let person_slash_fill: SymbolExtension = SymbolExtension(rawValue: "person_slash_fill")
    static let pesetasign_arrow_circlepath: SymbolExtension = SymbolExtension(rawValue: "pesetasign_arrow_circlepath")
    static let pesosign_arrow_circlepath: SymbolExtension = SymbolExtension(rawValue: "pesosign_arrow_circlepath")
    static let phone_badge_waveform: SymbolExtension = SymbolExtension(rawValue: "phone_badge_waveform")
    static let phone_badge_waveform_fill: SymbolExtension = SymbolExtension(rawValue: "phone_badge_waveform_fill")
    static let phone_bubble: SymbolExtension = SymbolExtension(rawValue: "phone_bubble")
    static let phone_bubble_fill: SymbolExtension = SymbolExtension(rawValue: "phone_bubble_fill")
    static let photo_artframe_circle: SymbolExtension = SymbolExtension(rawValue: "photo_artframe_circle")
    static let photo_artframe_circle_fill: SymbolExtension = SymbolExtension(rawValue: "photo_artframe_circle_fill")
    static let photo_badge_arrow_down: SymbolExtension = SymbolExtension(rawValue: "photo_badge_arrow_down")
    static let photo_badge_arrow_down_fill: SymbolExtension = SymbolExtension(rawValue: "photo_badge_arrow_down_fill")
    static let photo_badge_checkmark: SymbolExtension = SymbolExtension(rawValue: "photo_badge_checkmark")
    static let photo_badge_checkmark_fill: SymbolExtension = SymbolExtension(rawValue: "photo_badge_checkmark_fill")
    static let photo_badge_plus: SymbolExtension = SymbolExtension(rawValue: "photo_badge_plus")
    static let photo_badge_plus_fill: SymbolExtension = SymbolExtension(rawValue: "photo_badge_plus_fill")
    static let play_house: SymbolExtension = SymbolExtension(rawValue: "play_house")
    static let play_house_fill: SymbolExtension = SymbolExtension(rawValue: "play_house_fill")
    static let point_bottomleft_filled_forward_to_point_topright_scurvepath: SymbolExtension = SymbolExtension(rawValue: "point_bottomleft_filled_forward_to_point_topright_scurvepath")
    static let point_bottomleft_forward_to_arrowtriangle_uturn_scurvepath: SymbolExtension = SymbolExtension(rawValue: "point_bottomleft_forward_to_arrowtriangle_uturn_scurvepath")
    static let point_bottomleft_forward_to_arrowtriangle_uturn_scurvepath_fill: SymbolExtension = SymbolExtension(rawValue: "point_bottomleft_forward_to_arrowtriangle_uturn_scurvepath_fill")
    static let point_bottomleft_forward_to_point_topright_filled_scurvepath: SymbolExtension = SymbolExtension(rawValue: "point_bottomleft_forward_to_point_topright_filled_scurvepath")
    static let point_bottomleft_forward_to_point_topright_scurvepath: SymbolExtension = SymbolExtension(rawValue: "point_bottomleft_forward_to_point_topright_scurvepath")
    static let point_bottomleft_forward_to_point_topright_scurvepath_fill: SymbolExtension = SymbolExtension(rawValue: "point_bottomleft_forward_to_point_topright_scurvepath_fill")
    static let point_forward_to_point_capsulepath: SymbolExtension = SymbolExtension(rawValue: "point_forward_to_point_capsulepath")
    static let point_forward_to_point_capsulepath_fill: SymbolExtension = SymbolExtension(rawValue: "point_forward_to_point_capsulepath_fill")
    static let point_topleft_down_to_point_bottomright_curvepath: SymbolExtension = SymbolExtension(rawValue: "point_topleft_down_to_point_bottomright_curvepath")
    static let point_topleft_down_to_point_bottomright_curvepath_fill: SymbolExtension = SymbolExtension(rawValue: "point_topleft_down_to_point_bottomright_curvepath_fill")
    static let point_topleft_down_to_point_bottomright_filled_curvepath: SymbolExtension = SymbolExtension(rawValue: "point_topleft_down_to_point_bottomright_filled_curvepath")
    static let point_topleft_filled_down_to_point_bottomright_curvepath: SymbolExtension = SymbolExtension(rawValue: "point_topleft_filled_down_to_point_bottomright_curvepath")
    static let polishzlotysign: SymbolExtension = SymbolExtension(rawValue: "polishzlotysign")
    static let polishzlotysign_arrow_circlepath: SymbolExtension = SymbolExtension(rawValue: "polishzlotysign_arrow_circlepath")
    static let polishzlotysign_circle: SymbolExtension = SymbolExtension(rawValue: "polishzlotysign_circle")
    static let polishzlotysign_circle_fill: SymbolExtension = SymbolExtension(rawValue: "polishzlotysign_circle_fill")
    static let polishzlotysign_square: SymbolExtension = SymbolExtension(rawValue: "polishzlotysign_square")
    static let polishzlotysign_square_fill: SymbolExtension = SymbolExtension(rawValue: "polishzlotysign_square_fill")
    static let powercord: SymbolExtension = SymbolExtension(rawValue: "powercord")
    static let powercord_fill: SymbolExtension = SymbolExtension(rawValue: "powercord_fill")
    static let r_button_roundedbottom_horizontal: SymbolExtension = SymbolExtension(rawValue: "r_button_roundedbottom_horizontal")
    static let r_button_roundedbottom_horizontal_fill: SymbolExtension = SymbolExtension(rawValue: "r_button_roundedbottom_horizontal_fill")
    static let r1_button_roundedbottom_horizontal: SymbolExtension = SymbolExtension(rawValue: "r1_button_roundedbottom_horizontal")
    static let r1_button_roundedbottom_horizontal_fill: SymbolExtension = SymbolExtension(rawValue: "r1_button_roundedbottom_horizontal_fill")
    static let r1_circle: SymbolExtension = SymbolExtension(rawValue: "r1_circle")
    static let r1_circle_fill: SymbolExtension = SymbolExtension(rawValue: "r1_circle_fill")
    static let r2_button_angledtop_vertical_right: SymbolExtension = SymbolExtension(rawValue: "r2_button_angledtop_vertical_right")
    static let r2_button_angledtop_vertical_right_fill: SymbolExtension = SymbolExtension(rawValue: "r2_button_angledtop_vertical_right_fill")
    static let r2_button_roundedtop_horizontal: SymbolExtension = SymbolExtension(rawValue: "r2_button_roundedtop_horizontal")
    static let r2_button_roundedtop_horizontal_fill: SymbolExtension = SymbolExtension(rawValue: "r2_button_roundedtop_horizontal_fill")
    static let r2_circle: SymbolExtension = SymbolExtension(rawValue: "r2_circle")
    static let r2_circle_fill: SymbolExtension = SymbolExtension(rawValue: "r2_circle_fill")
    static let r3_button_angledbottom_horizontal_right: SymbolExtension = SymbolExtension(rawValue: "r3_button_angledbottom_horizontal_right")
    static let r3_button_angledbottom_horizontal_right_fill: SymbolExtension = SymbolExtension(rawValue: "r3_button_angledbottom_horizontal_right_fill")
    static let r4_button_horizontal: SymbolExtension = SymbolExtension(rawValue: "r4_button_horizontal")
    static let r4_button_horizontal_fill: SymbolExtension = SymbolExtension(rawValue: "r4_button_horizontal_fill")
    static let rainbow: SymbolExtension = SymbolExtension(rawValue: "rainbow")
    static let rb_button_roundedbottom_horizontal: SymbolExtension = SymbolExtension(rawValue: "rb_button_roundedbottom_horizontal")
    static let rb_button_roundedbottom_horizontal_fill: SymbolExtension = SymbolExtension(rawValue: "rb_button_roundedbottom_horizontal_fill")
    static let rb_circle: SymbolExtension = SymbolExtension(rawValue: "rb_circle")
    static let rb_circle_fill: SymbolExtension = SymbolExtension(rawValue: "rb_circle_fill")
    static let rectangle_3_group_bubble: SymbolExtension = SymbolExtension(rawValue: "rectangle_3_group_bubble")
    static let rectangle_3_group_bubble_fill: SymbolExtension = SymbolExtension(rawValue: "rectangle_3_group_bubble_fill")
    static let rectangle_checkered: SymbolExtension = SymbolExtension(rawValue: "rectangle_checkered")
    static let rectangle_inset_filled_and_cursorarrow: SymbolExtension = SymbolExtension(rawValue: "rectangle_inset_filled_and_cursorarrow")
    static let rectangle_inset_filled_badge_record: SymbolExtension = SymbolExtension(rawValue: "rectangle_inset_filled_badge_record")
    static let rectangle_landscape_rotate: SymbolExtension = SymbolExtension(rawValue: "rectangle_landscape_rotate")
    static let rectangle_on_rectangle_badge_gearshape: SymbolExtension = SymbolExtension(rawValue: "rectangle_on_rectangle_badge_gearshape")
    static let rectangle_on_rectangle_button_angledtop_vertical_left: SymbolExtension = SymbolExtension(rawValue: "rectangle_on_rectangle_button_angledtop_vertical_left")
    static let rectangle_on_rectangle_button_angledtop_vertical_left_fill: SymbolExtension = SymbolExtension(rawValue: "rectangle_on_rectangle_button_angledtop_vertical_left_fill")
    static let rectangle_portrait_badge_plus: SymbolExtension = SymbolExtension(rawValue: "rectangle_portrait_badge_plus")
    static let rectangle_portrait_badge_plus_fill: SymbolExtension = SymbolExtension(rawValue: "rectangle_portrait_badge_plus_fill")
    static let rectangle_portrait_rotate: SymbolExtension = SymbolExtension(rawValue: "rectangle_portrait_rotate")
    static let rectangle_ratio_3_to_4: SymbolExtension = SymbolExtension(rawValue: "rectangle_ratio_3_to_4")
    static let rectangle_ratio_3_to_4_fill: SymbolExtension = SymbolExtension(rawValue: "rectangle_ratio_3_to_4_fill")
    static let rectangle_ratio_4_to_3: SymbolExtension = SymbolExtension(rawValue: "rectangle_ratio_4_to_3")
    static let rectangle_ratio_4_to_3_fill: SymbolExtension = SymbolExtension(rawValue: "rectangle_ratio_4_to_3_fill")
    static let rectangle_ratio_9_to_16: SymbolExtension = SymbolExtension(rawValue: "rectangle_ratio_9_to_16")
    static let rectangle_ratio_9_to_16_fill: SymbolExtension = SymbolExtension(rawValue: "rectangle_ratio_9_to_16_fill")
    static let rectangle_ratio_16_to_9: SymbolExtension = SymbolExtension(rawValue: "rectangle_ratio_16_to_9")
    static let rectangle_ratio_16_to_9_fill: SymbolExtension = SymbolExtension(rawValue: "rectangle_ratio_16_to_9_fill")
    static let retarder_brakesignal_and_exclamationmark: SymbolExtension = SymbolExtension(rawValue: "retarder_brakesignal_and_exclamationmark")
    static let retarder_brakesignal_slash: SymbolExtension = SymbolExtension(rawValue: "retarder_brakesignal_slash")
    static let right: SymbolExtension = SymbolExtension(rawValue: "right")
    static let right_circle: SymbolExtension = SymbolExtension(rawValue: "right_circle")
    static let right_circle_fill: SymbolExtension = SymbolExtension(rawValue: "right_circle_fill")
    static let righttriangle: SymbolExtension = SymbolExtension(rawValue: "righttriangle")
    static let righttriangle_fill: SymbolExtension = SymbolExtension(rawValue: "righttriangle_fill")
    static let righttriangle_split_diagonal: SymbolExtension = SymbolExtension(rawValue: "righttriangle_split_diagonal")
    static let righttriangle_split_diagonal_fill: SymbolExtension = SymbolExtension(rawValue: "righttriangle_split_diagonal_fill")
    static let rm_button_horizontal: SymbolExtension = SymbolExtension(rawValue: "rm_button_horizontal")
    static let rm_button_horizontal_fill: SymbolExtension = SymbolExtension(rawValue: "rm_button_horizontal_fill")
    static let rotate_3d_circle: SymbolExtension = SymbolExtension(rawValue: "rotate_3d_circle")
    static let rotate_3d_circle_fill: SymbolExtension = SymbolExtension(rawValue: "rotate_3d_circle_fill")
    static let rotate_3d_fill: SymbolExtension = SymbolExtension(rawValue: "rotate_3d_fill")
    static let rsb_button_angledbottom_horizontal_right: SymbolExtension = SymbolExtension(rawValue: "rsb_button_angledbottom_horizontal_right")
    static let rsb_button_angledbottom_horizontal_right_fill: SymbolExtension = SymbolExtension(rawValue: "rsb_button_angledbottom_horizontal_right_fill")
    static let rt_button_roundedtop_horizontal: SymbolExtension = SymbolExtension(rawValue: "rt_button_roundedtop_horizontal")
    static let rt_button_roundedtop_horizontal_fill: SymbolExtension = SymbolExtension(rawValue: "rt_button_roundedtop_horizontal_fill")
    static let rt_circle: SymbolExtension = SymbolExtension(rawValue: "rt_circle")
    static let rt_circle_fill: SymbolExtension = SymbolExtension(rawValue: "rt_circle_fill")
    static let rublesign_arrow_circlepath: SymbolExtension = SymbolExtension(rawValue: "rublesign_arrow_circlepath")
    static let rupeesign_arrow_circlepath: SymbolExtension = SymbolExtension(rawValue: "rupeesign_arrow_circlepath")
    static let shared_with_you_circle: SymbolExtension = SymbolExtension(rawValue: "shared_with_you_circle")
    static let shared_with_you_circle_fill: SymbolExtension = SymbolExtension(rawValue: "shared_with_you_circle_fill")
    static let shekelsign_arrow_circlepath: SymbolExtension = SymbolExtension(rawValue: "shekelsign_arrow_circlepath")
    static let shield_checkered: SymbolExtension = SymbolExtension(rawValue: "shield_checkered")
    static let shield_lefthalf_filled_badge_checkmark: SymbolExtension = SymbolExtension(rawValue: "shield_lefthalf_filled_badge_checkmark")
    static let shield_lefthalf_filled_trianglebadge_exclamationmark: SymbolExtension = SymbolExtension(rawValue: "shield_lefthalf_filled_trianglebadge_exclamationmark")
    static let shoe: SymbolExtension = SymbolExtension(rawValue: "shoe")
    static let shoe_2: SymbolExtension = SymbolExtension(rawValue: "shoe_2")
    static let shoe_2_fill: SymbolExtension = SymbolExtension(rawValue: "shoe_2_fill")
    static let shoe_circle: SymbolExtension = SymbolExtension(rawValue: "shoe_circle")
    static let shoe_circle_fill: SymbolExtension = SymbolExtension(rawValue: "shoe_circle_fill")
    static let shoe_fill: SymbolExtension = SymbolExtension(rawValue: "shoe_fill")
    static let skateboard: SymbolExtension = SymbolExtension(rawValue: "skateboard")
    static let skateboard_fill: SymbolExtension = SymbolExtension(rawValue: "skateboard_fill")
    static let skis: SymbolExtension = SymbolExtension(rawValue: "skis")
    static let skis_fill: SymbolExtension = SymbolExtension(rawValue: "skis_fill")
    static let slider_horizontal_2_square: SymbolExtension = SymbolExtension(rawValue: "slider_horizontal_2_square")
    static let slider_horizontal_below_sun_max: SymbolExtension = SymbolExtension(rawValue: "slider_horizontal_below_sun_max")
    static let smartphone: SymbolExtension = SymbolExtension(rawValue: "smartphone")
    static let snowboard: SymbolExtension = SymbolExtension(rawValue: "snowboard")
    static let snowboard_fill: SymbolExtension = SymbolExtension(rawValue: "snowboard_fill")
    static let speaker_wave_2_bubble: SymbolExtension = SymbolExtension(rawValue: "speaker_wave_2_bubble")
    static let speaker_wave_2_bubble_fill: SymbolExtension = SymbolExtension(rawValue: "speaker_wave_2_bubble_fill")
    static let square_2_layers_3d_fill: SymbolExtension = SymbolExtension(rawValue: "square_2_layers_3d_fill")
    static let square_arrowtriangle_4_outward: SymbolExtension = SymbolExtension(rawValue: "square_arrowtriangle_4_outward")
    static let square_badge_plus: SymbolExtension = SymbolExtension(rawValue: "square_badge_plus")
    static let square_badge_plus_fill: SymbolExtension = SymbolExtension(rawValue: "square_badge_plus_fill")
    static let square_resize: SymbolExtension = SymbolExtension(rawValue: "square_resize")
    static let square_resize_down: SymbolExtension = SymbolExtension(rawValue: "square_resize_down")
    static let square_resize_up: SymbolExtension = SymbolExtension(rawValue: "square_resize_up")
    static let square_stack_3d_up_badge_automatic: SymbolExtension = SymbolExtension(rawValue: "square_stack_3d_up_badge_automatic")
    static let square_stack_3d_up_badge_automatic_fill: SymbolExtension = SymbolExtension(rawValue: "square_stack_3d_up_badge_automatic_fill")
    static let square_stack_3d_up_trianglebadge_exclamationmark: SymbolExtension = SymbolExtension(rawValue: "square_stack_3d_up_trianglebadge_exclamationmark")
    static let square_stack_3d_up_trianglebadge_exclamationmark_fill: SymbolExtension = SymbolExtension(rawValue: "square_stack_3d_up_trianglebadge_exclamationmark_fill")
    static let squares_leading_rectangle_fill: SymbolExtension = SymbolExtension(rawValue: "squares_leading_rectangle_fill")
    static let squareshape_dotted_squareshape: SymbolExtension = SymbolExtension(rawValue: "squareshape_dotted_squareshape")
    static let squareshape_squareshape_dotted: SymbolExtension = SymbolExtension(rawValue: "squareshape_squareshape_dotted")
    static let staroflife_shield: SymbolExtension = SymbolExtension(rawValue: "staroflife_shield")
    static let staroflife_shield_fill: SymbolExtension = SymbolExtension(rawValue: "staroflife_shield_fill")
    static let steeringwheel_and_liquid_wave: SymbolExtension = SymbolExtension(rawValue: "steeringwheel_and_liquid_wave")
    static let steeringwheel_arrowtriangle_left: SymbolExtension = SymbolExtension(rawValue: "steeringwheel_arrowtriangle_left")
    static let steeringwheel_arrowtriangle_right: SymbolExtension = SymbolExtension(rawValue: "steeringwheel_arrowtriangle_right")
    static let steeringwheel_badge_exclamationmark: SymbolExtension = SymbolExtension(rawValue: "steeringwheel_badge_exclamationmark")
    static let steeringwheel_circle: SymbolExtension = SymbolExtension(rawValue: "steeringwheel_circle")
    static let steeringwheel_circle_fill: SymbolExtension = SymbolExtension(rawValue: "steeringwheel_circle_fill")
    static let sterlingsign_arrow_circlepath: SymbolExtension = SymbolExtension(rawValue: "sterlingsign_arrow_circlepath")
    static let storefront: SymbolExtension = SymbolExtension(rawValue: "storefront")
    static let storefront_circle: SymbolExtension = SymbolExtension(rawValue: "storefront_circle")
    static let storefront_circle_fill: SymbolExtension = SymbolExtension(rawValue: "storefront_circle_fill")
    static let storefront_fill: SymbolExtension = SymbolExtension(rawValue: "storefront_fill")
    static let sun_horizon: SymbolExtension = SymbolExtension(rawValue: "sun_horizon")
    static let sun_horizon_circle: SymbolExtension = SymbolExtension(rawValue: "sun_horizon_circle")
    static let sun_horizon_circle_fill: SymbolExtension = SymbolExtension(rawValue: "sun_horizon_circle_fill")
    static let sun_horizon_fill: SymbolExtension = SymbolExtension(rawValue: "sun_horizon_fill")
    static let sun_rain: SymbolExtension = SymbolExtension(rawValue: "sun_rain")
    static let sun_rain_circle: SymbolExtension = SymbolExtension(rawValue: "sun_rain_circle")
    static let sun_rain_circle_fill: SymbolExtension = SymbolExtension(rawValue: "sun_rain_circle_fill")
    static let sun_rain_fill: SymbolExtension = SymbolExtension(rawValue: "sun_rain_fill")
    static let sun_snow: SymbolExtension = SymbolExtension(rawValue: "sun_snow")
    static let sun_snow_circle: SymbolExtension = SymbolExtension(rawValue: "sun_snow_circle")
    static let sun_snow_circle_fill: SymbolExtension = SymbolExtension(rawValue: "sun_snow_circle_fill")
    static let sun_snow_fill: SymbolExtension = SymbolExtension(rawValue: "sun_snow_fill")
    static let sunglasses: SymbolExtension = SymbolExtension(rawValue: "sunglasses")
    static let sunglasses_fill: SymbolExtension = SymbolExtension(rawValue: "sunglasses_fill")
    static let surfboard: SymbolExtension = SymbolExtension(rawValue: "surfboard")
    static let surfboard_fill: SymbolExtension = SymbolExtension(rawValue: "surfboard_fill")
    static let suv_side_hill_down: SymbolExtension = SymbolExtension(rawValue: "suv_side_hill_down")
    static let suv_side_hill_down_fill: SymbolExtension = SymbolExtension(rawValue: "suv_side_hill_down_fill")
    static let suv_side_hill_up: SymbolExtension = SymbolExtension(rawValue: "suv_side_hill_up")
    static let suv_side_hill_up_fill: SymbolExtension = SymbolExtension(rawValue: "suv_side_hill_up_fill")
    static let suv_side_lock: SymbolExtension = SymbolExtension(rawValue: "suv_side_lock")
    static let suv_side_lock_fill: SymbolExtension = SymbolExtension(rawValue: "suv_side_lock_fill")
    static let suv_side_lock_open: SymbolExtension = SymbolExtension(rawValue: "suv_side_lock_open")
    static let suv_side_lock_open_fill: SymbolExtension = SymbolExtension(rawValue: "suv_side_lock_open_fill")
    static let swedishkronasign: SymbolExtension = SymbolExtension(rawValue: "swedishkronasign")
    static let swedishkronasign_arrow_circlepath: SymbolExtension = SymbolExtension(rawValue: "swedishkronasign_arrow_circlepath")
    static let swedishkronasign_circle: SymbolExtension = SymbolExtension(rawValue: "swedishkronasign_circle")
    static let swedishkronasign_circle_fill: SymbolExtension = SymbolExtension(rawValue: "swedishkronasign_circle_fill")
    static let swedishkronasign_square: SymbolExtension = SymbolExtension(rawValue: "swedishkronasign_square")
    static let swedishkronasign_square_fill: SymbolExtension = SymbolExtension(rawValue: "swedishkronasign_square_fill")
}
