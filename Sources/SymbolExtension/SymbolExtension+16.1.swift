//
//  SymbolExtension+16.1.swift
//  Symbol
//
//  Created by otake on 2025/05/05.
//

import Foundation

@available(iOS 16.1, macOS 13.0, *)
public extension SymbolExtension {
    static let _1_brakesignal: SymbolExtension = SymbolExtension(rawValue: "1.brakesignal")
    static let _1_lane: SymbolExtension = SymbolExtension(rawValue: "1.lane")
    static let _2_brakesignal: SymbolExtension = SymbolExtension(rawValue: "2.brakesignal")
    static let _2_lane: SymbolExtension = SymbolExtension(rawValue: "2.lane")
    static let _3_lane: SymbolExtension = SymbolExtension(rawValue: "3.lane")
    static let _4_lane: SymbolExtension = SymbolExtension(rawValue: "4.lane")
    static let _5_lane: SymbolExtension = SymbolExtension(rawValue: "5.lane")
    static let _6_lane: SymbolExtension = SymbolExtension(rawValue: "6.lane")
    static let _7_lane: SymbolExtension = SymbolExtension(rawValue: "7.lane")
    static let _8_lane: SymbolExtension = SymbolExtension(rawValue: "8.lane")
    static let _9_lane: SymbolExtension = SymbolExtension(rawValue: "9.lane")
    static let _10_lane: SymbolExtension = SymbolExtension(rawValue: "10.lane")
    static let _11_lane: SymbolExtension = SymbolExtension(rawValue: "11.lane")
    static let _12_lane: SymbolExtension = SymbolExtension(rawValue: "12.lane")
    static let abs: SymbolExtension = SymbolExtension(rawValue: "abs")
    static let abs_brakesignal_slash: SymbolExtension = SymbolExtension(rawValue: "abs.brakesignal.slash")
    static let abs_circle: SymbolExtension = SymbolExtension(rawValue: "abs.circle")
    static let abs_circle_fill: SymbolExtension = SymbolExtension(rawValue: "abs.circle.fill")
    static let autostartstop: SymbolExtension = SymbolExtension(rawValue: "autostartstop")
    static let autostartstop_slash: SymbolExtension = SymbolExtension(rawValue: "autostartstop.slash")
    static let autostartstop_trianglebadge_exclamationmark: SymbolExtension = SymbolExtension(rawValue: "autostartstop.trianglebadge.exclamationmark")
    static let backpack_circle: SymbolExtension = SymbolExtension(rawValue: "backpack.circle")
    static let backpack_circle_fill: SymbolExtension = SymbolExtension(rawValue: "backpack.circle.fill")
    static let batteryblock: SymbolExtension = SymbolExtension(rawValue: "batteryblock")
    static let batteryblock_fill: SymbolExtension = SymbolExtension(rawValue: "batteryblock.fill")
    static let batteryblock_slash: SymbolExtension = SymbolExtension(rawValue: "batteryblock.slash")
    static let batteryblock_slash_fill: SymbolExtension = SymbolExtension(rawValue: "batteryblock.slash.fill")
    static let bolt_trianglebadge_exclamationmark: SymbolExtension = SymbolExtension(rawValue: "bolt.trianglebadge.exclamationmark")
    static let bolt_trianglebadge_exclamationmark_fill: SymbolExtension = SymbolExtension(rawValue: "bolt.trianglebadge.exclamationmark.fill")
    static let car_front_waves_up: SymbolExtension = SymbolExtension(rawValue: "car.front.waves.up")
    static let car_front_waves_up_fill: SymbolExtension = SymbolExtension(rawValue: "car.front.waves.up.fill")
    static let car_rear: SymbolExtension = SymbolExtension(rawValue: "car.rear")
    static let car_rear_and_tire_marks: SymbolExtension = SymbolExtension(rawValue: "car.rear.and.tire.marks")
    static let car_rear_and_tire_marks_slash: SymbolExtension = SymbolExtension(rawValue: "car.rear.and.tire.marks.slash")
    static let car_rear_fill: SymbolExtension = SymbolExtension(rawValue: "car.rear.fill")
    static let car_rear_road_lane: SymbolExtension = SymbolExtension(rawValue: "car.rear.road.lane")
    static let car_rear_road_lane_dashed: SymbolExtension = SymbolExtension(rawValue: "car.rear.road.lane.dashed")
    static let car_rear_waves_up: SymbolExtension = SymbolExtension(rawValue: "car.rear.waves.up")
    static let car_rear_waves_up_fill: SymbolExtension = SymbolExtension(rawValue: "car.rear.waves.up.fill")
    static let car_side: SymbolExtension = SymbolExtension(rawValue: "car.side")
    static let car_side_air_circulate: SymbolExtension = SymbolExtension(rawValue: "car.side.air.circulate")
    static let car_side_air_circulate_fill: SymbolExtension = SymbolExtension(rawValue: "car.side.air.circulate.fill")
    static let car_side_air_fresh: SymbolExtension = SymbolExtension(rawValue: "car.side.air.fresh")
    static let car_side_air_fresh_fill: SymbolExtension = SymbolExtension(rawValue: "car.side.air.fresh.fill")
    static let car_side_and_exclamationmark: SymbolExtension = SymbolExtension(rawValue: "car.side.and.exclamationmark")
    static let car_side_and_exclamationmark_fill: SymbolExtension = SymbolExtension(rawValue: "car.side.and.exclamationmark.fill")
    static let car_side_arrowtriangle_down: SymbolExtension = SymbolExtension(rawValue: "car.side.arrowtriangle.down")
    static let car_side_arrowtriangle_down_fill: SymbolExtension = SymbolExtension(rawValue: "car.side.arrowtriangle.down.fill")
    static let car_side_arrowtriangle_up: SymbolExtension = SymbolExtension(rawValue: "car.side.arrowtriangle.up")
    static let car_side_arrowtriangle_up_arrowtriangle_down: SymbolExtension = SymbolExtension(rawValue: "car.side.arrowtriangle.up.arrowtriangle.down")
    static let car_side_arrowtriangle_up_arrowtriangle_down_fill: SymbolExtension = SymbolExtension(rawValue: "car.side.arrowtriangle.up.arrowtriangle.down.fill")
    static let car_side_arrowtriangle_up_fill: SymbolExtension = SymbolExtension(rawValue: "car.side.arrowtriangle.up.fill")
    static let car_side_fill: SymbolExtension = SymbolExtension(rawValue: "car.side.fill")
    static let car_side_front_open: SymbolExtension = SymbolExtension(rawValue: "car.side.front.open")
    static let car_side_front_open_fill: SymbolExtension = SymbolExtension(rawValue: "car.side.front.open.fill")
    static let car_side_rear_open: SymbolExtension = SymbolExtension(rawValue: "car.side.rear.open")
    static let car_side_rear_open_fill: SymbolExtension = SymbolExtension(rawValue: "car.side.rear.open.fill")
    static let car_top_door_front_left_and_front_right_and_rear_left_and_rear_right_open: SymbolExtension = SymbolExtension(rawValue: "car.top.door.front.left.and.front.right.and.rear.left.and.rear.right.open")
    static let car_top_door_front_left_and_front_right_and_rear_left_and_rear_right_open_fill: SymbolExtension = SymbolExtension(rawValue: "car.top.door.front.left.and.front.right.and.rear.left.and.rear.right.open.fill")
    static let car_top_door_front_left_and_front_right_and_rear_left_open: SymbolExtension = SymbolExtension(rawValue: "car.top.door.front.left.and.front.right.and.rear.left.open")
    static let car_top_door_front_left_and_front_right_and_rear_left_open_fill: SymbolExtension = SymbolExtension(rawValue: "car.top.door.front.left.and.front.right.and.rear.left.open.fill")
    static let car_top_door_front_left_and_front_right_and_rear_right_open: SymbolExtension = SymbolExtension(rawValue: "car.top.door.front.left.and.front.right.and.rear.right.open")
    static let car_top_door_front_left_and_front_right_and_rear_right_open_fill: SymbolExtension = SymbolExtension(rawValue: "car.top.door.front.left.and.front.right.and.rear.right.open.fill")
    static let car_top_door_front_left_and_front_right_open: SymbolExtension = SymbolExtension(rawValue: "car.top.door.front.left.and.front.right.open")
    static let car_top_door_front_left_and_front_right_open_fill: SymbolExtension = SymbolExtension(rawValue: "car.top.door.front.left.and.front.right.open.fill")
    static let car_top_door_front_left_and_rear_left_and_rear_right_open: SymbolExtension = SymbolExtension(rawValue: "car.top.door.front.left.and.rear.left.and.rear.right.open")
    static let car_top_door_front_left_and_rear_left_and_rear_right_open_fill: SymbolExtension = SymbolExtension(rawValue: "car.top.door.front.left.and.rear.left.and.rear.right.open.fill")
    static let car_top_door_front_left_and_rear_left_open: SymbolExtension = SymbolExtension(rawValue: "car.top.door.front.left.and.rear.left.open")
    static let car_top_door_front_left_and_rear_left_open_fill: SymbolExtension = SymbolExtension(rawValue: "car.top.door.front.left.and.rear.left.open.fill")
    static let car_top_door_front_left_and_rear_right_open: SymbolExtension = SymbolExtension(rawValue: "car.top.door.front.left.and.rear.right.open")
    static let car_top_door_front_left_and_rear_right_open_fill: SymbolExtension = SymbolExtension(rawValue: "car.top.door.front.left.and.rear.right.open.fill")
    static let car_top_door_front_left_open: SymbolExtension = SymbolExtension(rawValue: "car.top.door.front.left.open")
    static let car_top_door_front_left_open_fill: SymbolExtension = SymbolExtension(rawValue: "car.top.door.front.left.open.fill")
    static let car_top_door_front_right_and_rear_left_and_rear_right_open: SymbolExtension = SymbolExtension(rawValue: "car.top.door.front.right.and.rear.left.and.rear.right.open")
    static let car_top_door_front_right_and_rear_left_and_rear_right_open_fill: SymbolExtension = SymbolExtension(rawValue: "car.top.door.front.right.and.rear.left.and.rear.right.open.fill")
    static let car_top_door_front_right_and_rear_left_open: SymbolExtension = SymbolExtension(rawValue: "car.top.door.front.right.and.rear.left.open")
    static let car_top_door_front_right_and_rear_left_open_fill: SymbolExtension = SymbolExtension(rawValue: "car.top.door.front.right.and.rear.left.open.fill")
    static let car_top_door_front_right_and_rear_right_open: SymbolExtension = SymbolExtension(rawValue: "car.top.door.front.right.and.rear.right.open")
    static let car_top_door_front_right_and_rear_right_open_fill: SymbolExtension = SymbolExtension(rawValue: "car.top.door.front.right.and.rear.right.open.fill")
    static let car_top_door_front_right_open: SymbolExtension = SymbolExtension(rawValue: "car.top.door.front.right.open")
    static let car_top_door_front_right_open_fill: SymbolExtension = SymbolExtension(rawValue: "car.top.door.front.right.open.fill")
    static let car_top_door_rear_left_and_rear_right_open: SymbolExtension = SymbolExtension(rawValue: "car.top.door.rear.left.and.rear.right.open")
    static let car_top_door_rear_left_and_rear_right_open_fill: SymbolExtension = SymbolExtension(rawValue: "car.top.door.rear.left.and.rear.right.open.fill")
    static let car_top_door_rear_left_open: SymbolExtension = SymbolExtension(rawValue: "car.top.door.rear.left.open")
    static let car_top_door_rear_left_open_fill: SymbolExtension = SymbolExtension(rawValue: "car.top.door.rear.left.open.fill")
    static let car_top_door_rear_right_open: SymbolExtension = SymbolExtension(rawValue: "car.top.door.rear.right.open")
    static let car_top_door_rear_right_open_fill: SymbolExtension = SymbolExtension(rawValue: "car.top.door.rear.right.open.fill")
    static let car_top_lane_dashed_arrowtriangle_inward: SymbolExtension = SymbolExtension(rawValue: "car.top.lane.dashed.arrowtriangle.inward")
    static let car_top_lane_dashed_arrowtriangle_inward_fill: SymbolExtension = SymbolExtension(rawValue: "car.top.lane.dashed.arrowtriangle.inward.fill")
    static let car_top_lane_dashed_badge_steeringwheel: SymbolExtension = SymbolExtension(rawValue: "car.top.lane.dashed.badge.steeringwheel")
    static let car_top_lane_dashed_badge_steeringwheel_fill: SymbolExtension = SymbolExtension(rawValue: "car.top.lane.dashed.badge.steeringwheel.fill")
    static let car_top_lane_dashed_departure_left: SymbolExtension = SymbolExtension(rawValue: "car.top.lane.dashed.departure.left")
    static let car_top_lane_dashed_departure_left_fill: SymbolExtension = SymbolExtension(rawValue: "car.top.lane.dashed.departure.left.fill")
    static let car_top_lane_dashed_departure_right: SymbolExtension = SymbolExtension(rawValue: "car.top.lane.dashed.departure.right")
    static let car_top_lane_dashed_departure_right_fill: SymbolExtension = SymbolExtension(rawValue: "car.top.lane.dashed.departure.right.fill")
    static let car_top_radiowaves_front: SymbolExtension = SymbolExtension(rawValue: "car.top.radiowaves.front")
    static let car_top_radiowaves_front_fill: SymbolExtension = SymbolExtension(rawValue: "car.top.radiowaves.front.fill")
    static let car_top_radiowaves_rear: SymbolExtension = SymbolExtension(rawValue: "car.top.radiowaves.rear")
    static let car_top_radiowaves_rear_fill: SymbolExtension = SymbolExtension(rawValue: "car.top.radiowaves.rear.fill")
    static let car_top_radiowaves_rear_left: SymbolExtension = SymbolExtension(rawValue: "car.top.radiowaves.rear.left")
    static let car_top_radiowaves_rear_left_and_rear_right: SymbolExtension = SymbolExtension(rawValue: "car.top.radiowaves.rear.left.and.rear.right")
    static let car_top_radiowaves_rear_left_and_rear_right_fill: SymbolExtension = SymbolExtension(rawValue: "car.top.radiowaves.rear.left.and.rear.right.fill")
    static let car_top_radiowaves_rear_left_fill: SymbolExtension = SymbolExtension(rawValue: "car.top.radiowaves.rear.left.fill")
    static let car_top_radiowaves_rear_right: SymbolExtension = SymbolExtension(rawValue: "car.top.radiowaves.rear.right")
    static let car_top_radiowaves_rear_right_fill: SymbolExtension = SymbolExtension(rawValue: "car.top.radiowaves.rear.right.fill")
    static let chart_dots_scatter: SymbolExtension = SymbolExtension(rawValue: "chart.dots.scatter")
    static let cross_case_circle: SymbolExtension = SymbolExtension(rawValue: "cross.case.circle")
    static let cross_case_circle_fill: SymbolExtension = SymbolExtension(rawValue: "cross.case.circle.fill")
    static let ellipsis_viewfinder: SymbolExtension = SymbolExtension(rawValue: "ellipsis.viewfinder")
    static let engine_combustion: SymbolExtension = SymbolExtension(rawValue: "engine.combustion")
    static let engine_combustion_fill: SymbolExtension = SymbolExtension(rawValue: "engine.combustion.fill")
    static let exclamationmark_transmission: SymbolExtension = SymbolExtension(rawValue: "exclamationmark.transmission")
    static let figure_run_square_stack: SymbolExtension = SymbolExtension(rawValue: "figure.run.square.stack")
    static let figure_run_square_stack_fill: SymbolExtension = SymbolExtension(rawValue: "figure.run.square.stack.fill")
    static let figure_seated_seatbelt: SymbolExtension = SymbolExtension(rawValue: "figure.seated.seatbelt")
    static let figure_seated_seatbelt_and_airbag_off: SymbolExtension = SymbolExtension(rawValue: "figure.seated.seatbelt.and.airbag.off")
    static let figure_seated_seatbelt_and_airbag_on: SymbolExtension = SymbolExtension(rawValue: "figure.seated.seatbelt.and.airbag.on")
    static let figure_seated_side_airbag_off: SymbolExtension = SymbolExtension(rawValue: "figure.seated.side.airbag.off")
    static let figure_seated_side_airbag_off_2: SymbolExtension = SymbolExtension(rawValue: "figure.seated.side.airbag.off.2")
    static let figure_seated_side_airbag_on: SymbolExtension = SymbolExtension(rawValue: "figure.seated.side.airbag.on")
    static let figure_seated_side_airbag_on_2: SymbolExtension = SymbolExtension(rawValue: "figure.seated.side.airbag.on.2")
    static let figure_seated_side_windshield_front_and_heat_waves: SymbolExtension = SymbolExtension(rawValue: "figure.seated.side.windshield.front.and.heat.waves")
    static let fish_circle: SymbolExtension = SymbolExtension(rawValue: "fish.circle")
    static let fish_circle_fill: SymbolExtension = SymbolExtension(rawValue: "fish.circle.fill")
    static let flag_checkered_circle: SymbolExtension = SymbolExtension(rawValue: "flag.checkered.circle")
    static let flag_checkered_circle_fill: SymbolExtension = SymbolExtension(rawValue: "flag.checkered.circle.fill")
    static let fluid_transmission: SymbolExtension = SymbolExtension(rawValue: "fluid.transmission")
    static let glowplug: SymbolExtension = SymbolExtension(rawValue: "glowplug")
    static let hand_raised_app: SymbolExtension = SymbolExtension(rawValue: "hand.raised.app")
    static let hand_raised_app_fill: SymbolExtension = SymbolExtension(rawValue: "hand.raised.app.fill")
    static let hand_raised_brakesignal: SymbolExtension = SymbolExtension(rawValue: "hand.raised.brakesignal")
    static let hand_raised_brakesignal_slash: SymbolExtension = SymbolExtension(rawValue: "hand.raised.brakesignal.slash")
    static let handbag: SymbolExtension = SymbolExtension(rawValue: "handbag")
    static let handbag_fill: SymbolExtension = SymbolExtension(rawValue: "handbag.fill")
    static let hazardsign: SymbolExtension = SymbolExtension(rawValue: "hazardsign")
    static let hazardsign_fill: SymbolExtension = SymbolExtension(rawValue: "hazardsign.fill")
    static let headlight_daytime: SymbolExtension = SymbolExtension(rawValue: "headlight.daytime")
    static let headlight_daytime_fill: SymbolExtension = SymbolExtension(rawValue: "headlight.daytime.fill")
    static let headlight_fog: SymbolExtension = SymbolExtension(rawValue: "headlight.fog")
    static let headlight_fog_fill: SymbolExtension = SymbolExtension(rawValue: "headlight.fog.fill")
    static let heat_element_windshield: SymbolExtension = SymbolExtension(rawValue: "heat.element.windshield")
    static let house_and_flag: SymbolExtension = SymbolExtension(rawValue: "house.and.flag")
    static let house_and_flag_circle: SymbolExtension = SymbolExtension(rawValue: "house.and.flag.circle")
    static let house_and_flag_circle_fill: SymbolExtension = SymbolExtension(rawValue: "house.and.flag.circle.fill")
    static let house_and_flag_fill: SymbolExtension = SymbolExtension(rawValue: "house.and.flag.fill")
    static let house_lodge: SymbolExtension = SymbolExtension(rawValue: "house.lodge")
    static let house_lodge_circle: SymbolExtension = SymbolExtension(rawValue: "house.lodge.circle")
    static let house_lodge_circle_fill: SymbolExtension = SymbolExtension(rawValue: "house.lodge.circle.fill")
    static let house_lodge_fill: SymbolExtension = SymbolExtension(rawValue: "house.lodge.fill")
    static let info_windshield: SymbolExtension = SymbolExtension(rawValue: "info.windshield")
    static let ipad_and_iphone_slash: SymbolExtension = SymbolExtension(rawValue: "ipad.and.iphone.slash")
    static let ipad_gen1: SymbolExtension = SymbolExtension(rawValue: "ipad.gen1")
    static let ipad_gen1_badge_play: SymbolExtension = SymbolExtension(rawValue: "ipad.gen1.badge.play")
    static let ipad_gen1_landscape: SymbolExtension = SymbolExtension(rawValue: "ipad.gen1.landscape")
    static let ipad_gen1_landscape_badge_play: SymbolExtension = SymbolExtension(rawValue: "ipad.gen1.landscape.badge.play")
    static let ipad_gen2: SymbolExtension = SymbolExtension(rawValue: "ipad.gen2")
    static let ipad_gen2_badge_play: SymbolExtension = SymbolExtension(rawValue: "ipad.gen2.badge.play")
    static let ipad_gen2_landscape: SymbolExtension = SymbolExtension(rawValue: "ipad.gen2.landscape")
    static let ipad_gen2_landscape_badge_play: SymbolExtension = SymbolExtension(rawValue: "ipad.gen2.landscape.badge.play")
    static let iphone_gen1: SymbolExtension = SymbolExtension(rawValue: "iphone.gen1")
    static let iphone_gen1_badge_play: SymbolExtension = SymbolExtension(rawValue: "iphone.gen1.badge.play")
    static let iphone_gen1_circle: SymbolExtension = SymbolExtension(rawValue: "iphone.gen1.circle")
    static let iphone_gen1_circle_fill: SymbolExtension = SymbolExtension(rawValue: "iphone.gen1.circle.fill")
    static let iphone_gen1_landscape: SymbolExtension = SymbolExtension(rawValue: "iphone.gen1.landscape")
    static let iphone_gen1_radiowaves_left_and_right: SymbolExtension = SymbolExtension(rawValue: "iphone.gen1.radiowaves.left.and.right")
    static let iphone_gen1_radiowaves_left_and_right_circle: SymbolExtension = SymbolExtension(rawValue: "iphone.gen1.radiowaves.left.and.right.circle")
    static let iphone_gen1_radiowaves_left_and_right_circle_fill: SymbolExtension = SymbolExtension(rawValue: "iphone.gen1.radiowaves.left.and.right.circle.fill")
    static let iphone_gen1_slash: SymbolExtension = SymbolExtension(rawValue: "iphone.gen1.slash")
    static let iphone_gen1_slash_circle: SymbolExtension = SymbolExtension(rawValue: "iphone.gen1.slash.circle")
    static let iphone_gen1_slash_circle_fill: SymbolExtension = SymbolExtension(rawValue: "iphone.gen1.slash.circle.fill")
    static let iphone_gen2: SymbolExtension = SymbolExtension(rawValue: "iphone.gen2")
    static let iphone_gen2_badge_play: SymbolExtension = SymbolExtension(rawValue: "iphone.gen2.badge.play")
    static let iphone_gen2_circle: SymbolExtension = SymbolExtension(rawValue: "iphone.gen2.circle")
    static let iphone_gen2_circle_fill: SymbolExtension = SymbolExtension(rawValue: "iphone.gen2.circle.fill")
    static let iphone_gen2_landscape: SymbolExtension = SymbolExtension(rawValue: "iphone.gen2.landscape")
    static let iphone_gen2_radiowaves_left_and_right: SymbolExtension = SymbolExtension(rawValue: "iphone.gen2.radiowaves.left.and.right")
    static let iphone_gen2_radiowaves_left_and_right_circle: SymbolExtension = SymbolExtension(rawValue: "iphone.gen2.radiowaves.left.and.right.circle")
    static let iphone_gen2_radiowaves_left_and_right_circle_fill: SymbolExtension = SymbolExtension(rawValue: "iphone.gen2.radiowaves.left.and.right.circle.fill")
    static let iphone_gen2_slash: SymbolExtension = SymbolExtension(rawValue: "iphone.gen2.slash")
    static let iphone_gen2_slash_circle: SymbolExtension = SymbolExtension(rawValue: "iphone.gen2.slash.circle")
    static let iphone_gen2_slash_circle_fill: SymbolExtension = SymbolExtension(rawValue: "iphone.gen2.slash.circle.fill")
    static let iphone_gen3: SymbolExtension = SymbolExtension(rawValue: "iphone.gen3")
    static let iphone_gen3_badge_play: SymbolExtension = SymbolExtension(rawValue: "iphone.gen3.badge.play")
    static let iphone_gen3_circle: SymbolExtension = SymbolExtension(rawValue: "iphone.gen3.circle")
    static let iphone_gen3_circle_fill: SymbolExtension = SymbolExtension(rawValue: "iphone.gen3.circle.fill")
    static let iphone_gen3_landscape: SymbolExtension = SymbolExtension(rawValue: "iphone.gen3.landscape")
    static let iphone_gen3_radiowaves_left_and_right: SymbolExtension = SymbolExtension(rawValue: "iphone.gen3.radiowaves.left.and.right")
    static let iphone_gen3_radiowaves_left_and_right_circle: SymbolExtension = SymbolExtension(rawValue: "iphone.gen3.radiowaves.left.and.right.circle")
    static let iphone_gen3_radiowaves_left_and_right_circle_fill: SymbolExtension = SymbolExtension(rawValue: "iphone.gen3.radiowaves.left.and.right.circle.fill")
    static let iphone_gen3_slash: SymbolExtension = SymbolExtension(rawValue: "iphone.gen3.slash")
    static let iphone_gen3_slash_circle: SymbolExtension = SymbolExtension(rawValue: "iphone.gen3.slash.circle")
    static let iphone_gen3_slash_circle_fill: SymbolExtension = SymbolExtension(rawValue: "iphone.gen3.slash.circle.fill")
    static let key_horizontal: SymbolExtension = SymbolExtension(rawValue: "key.horizontal")
    static let key_horizontal_fill: SymbolExtension = SymbolExtension(rawValue: "key.horizontal.fill")
    static let key_radiowaves_forward: SymbolExtension = SymbolExtension(rawValue: "key.radiowaves.forward")
    static let key_radiowaves_forward_fill: SymbolExtension = SymbolExtension(rawValue: "key.radiowaves.forward.fill")
    static let kph: SymbolExtension = SymbolExtension(rawValue: "kph")
    static let kph_circle: SymbolExtension = SymbolExtension(rawValue: "kph.circle")
    static let kph_circle_fill: SymbolExtension = SymbolExtension(rawValue: "kph.circle.fill")
    static let lane: SymbolExtension = SymbolExtension(rawValue: "lane")
    static let laptopcomputer_slash: SymbolExtension = SymbolExtension(rawValue: "laptopcomputer.slash")
    static let light_overhead_left: SymbolExtension = SymbolExtension(rawValue: "light.overhead.left")
    static let light_overhead_left_fill: SymbolExtension = SymbolExtension(rawValue: "light.overhead.left.fill")
    static let light_overhead_right: SymbolExtension = SymbolExtension(rawValue: "light.overhead.right")
    static let light_overhead_right_fill: SymbolExtension = SymbolExtension(rawValue: "light.overhead.right.fill")
    static let lock_open_rotation: SymbolExtension = SymbolExtension(rawValue: "lock.open.rotation")
    static let macbook_and_ipad: SymbolExtension = SymbolExtension(rawValue: "macbook.and.ipad")
    static let macbook_and_iphone: SymbolExtension = SymbolExtension(rawValue: "macbook.and.iphone")
    static let minus_plus_and_fluid_batteryblock: SymbolExtension = SymbolExtension(rawValue: "minus.plus.and.fluid.batteryblock")
    static let minus_plus_batteryblock_exclamationmark: SymbolExtension = SymbolExtension(rawValue: "minus.plus.batteryblock.exclamationmark")
    static let minus_plus_batteryblock_exclamationmark_fill: SymbolExtension = SymbolExtension(rawValue: "minus.plus.batteryblock.exclamationmark.fill")
    static let minus_plus_batteryblock_slash: SymbolExtension = SymbolExtension(rawValue: "minus.plus.batteryblock.slash")
    static let minus_plus_batteryblock_slash_fill: SymbolExtension = SymbolExtension(rawValue: "minus.plus.batteryblock.slash.fill")
    static let minus_plus_batteryblock_stack: SymbolExtension = SymbolExtension(rawValue: "minus.plus.batteryblock.stack")
    static let minus_plus_batteryblock_stack_exclamationmark: SymbolExtension = SymbolExtension(rawValue: "minus.plus.batteryblock.stack.exclamationmark")
    static let minus_plus_batteryblock_stack_exclamationmark_fill: SymbolExtension = SymbolExtension(rawValue: "minus.plus.batteryblock.stack.exclamationmark.fill")
    static let minus_plus_batteryblock_stack_fill: SymbolExtension = SymbolExtension(rawValue: "minus.plus.batteryblock.stack.fill")
    static let mirror_side_left_and_arrow_turn_down_right: SymbolExtension = SymbolExtension(rawValue: "mirror.side.left.and.arrow.turn.down.right")
    static let mirror_side_left_and_heat_waves: SymbolExtension = SymbolExtension(rawValue: "mirror.side.left.and.heat.waves")
    static let mirror_side_right_and_arrow_turn_down_left: SymbolExtension = SymbolExtension(rawValue: "mirror.side.right.and.arrow.turn.down.left")
    static let mirror_side_right_and_heat_waves: SymbolExtension = SymbolExtension(rawValue: "mirror.side.right.and.heat.waves")
    static let mountain_2: SymbolExtension = SymbolExtension(rawValue: "mountain.2")
    static let mountain_2_circle: SymbolExtension = SymbolExtension(rawValue: "mountain.2.circle")
    static let mountain_2_circle_fill: SymbolExtension = SymbolExtension(rawValue: "mountain.2.circle.fill")
    static let mountain_2_fill: SymbolExtension = SymbolExtension(rawValue: "mountain.2.fill")
    static let mph: SymbolExtension = SymbolExtension(rawValue: "mph")
    static let mph_circle: SymbolExtension = SymbolExtension(rawValue: "mph.circle")
    static let mph_circle_fill: SymbolExtension = SymbolExtension(rawValue: "mph.circle.fill")
    static let mug: SymbolExtension = SymbolExtension(rawValue: "mug")
    static let mug_fill: SymbolExtension = SymbolExtension(rawValue: "mug.fill")
    static let oilcan: SymbolExtension = SymbolExtension(rawValue: "oilcan")
    static let oilcan_fill: SymbolExtension = SymbolExtension(rawValue: "oilcan.fill")
    static let person_crop_circle_dashed: SymbolExtension = SymbolExtension(rawValue: "person.crop.circle.dashed")
    static let play_square_stack: SymbolExtension = SymbolExtension(rawValue: "play.square.stack")
    static let play_square_stack_fill: SymbolExtension = SymbolExtension(rawValue: "play.square.stack.fill")
    static let questionmark_key_filled: SymbolExtension = SymbolExtension(rawValue: "questionmark.key.filled")
    static let retarder_brakesignal: SymbolExtension = SymbolExtension(rawValue: "retarder.brakesignal")
    static let road_lane_arrowtriangle_2_inward: SymbolExtension = SymbolExtension(rawValue: "road.lane.arrowtriangle.2.inward")
    static let sailboat_circle: SymbolExtension = SymbolExtension(rawValue: "sailboat.circle")
    static let sailboat_circle_fill: SymbolExtension = SymbolExtension(rawValue: "sailboat.circle.fill")
    static let signpost_and_arrowtriangle_up: SymbolExtension = SymbolExtension(rawValue: "signpost.and.arrowtriangle.up")
    static let signpost_and_arrowtriangle_up_circle: SymbolExtension = SymbolExtension(rawValue: "signpost.and.arrowtriangle.up.circle")
    static let signpost_and_arrowtriangle_up_circle_fill: SymbolExtension = SymbolExtension(rawValue: "signpost.and.arrowtriangle.up.circle.fill")
    static let signpost_and_arrowtriangle_up_fill: SymbolExtension = SymbolExtension(rawValue: "signpost.and.arrowtriangle.up.fill")
    static let signpost_left_circle: SymbolExtension = SymbolExtension(rawValue: "signpost.left.circle")
    static let signpost_left_circle_fill: SymbolExtension = SymbolExtension(rawValue: "signpost.left.circle.fill")
    static let signpost_right_and_left: SymbolExtension = SymbolExtension(rawValue: "signpost.right.and.left")
    static let signpost_right_and_left_circle: SymbolExtension = SymbolExtension(rawValue: "signpost.right.and.left.circle")
    static let signpost_right_and_left_circle_fill: SymbolExtension = SymbolExtension(rawValue: "signpost.right.and.left.circle.fill")
    static let signpost_right_and_left_fill: SymbolExtension = SymbolExtension(rawValue: "signpost.right.and.left.fill")
    static let signpost_right_circle: SymbolExtension = SymbolExtension(rawValue: "signpost.right.circle")
    static let signpost_right_circle_fill: SymbolExtension = SymbolExtension(rawValue: "signpost.right.circle.fill")
    static let snowflake_road_lane: SymbolExtension = SymbolExtension(rawValue: "snowflake.road.lane")
    static let snowflake_road_lane_dashed: SymbolExtension = SymbolExtension(rawValue: "snowflake.road.lane.dashed")
    static let snowflake_slash: SymbolExtension = SymbolExtension(rawValue: "snowflake.slash")
    static let sos: SymbolExtension = SymbolExtension(rawValue: "sos")
    static let sos_circle: SymbolExtension = SymbolExtension(rawValue: "sos.circle")
    static let sos_circle_fill: SymbolExtension = SymbolExtension(rawValue: "sos.circle.fill")
    static let steeringwheel: SymbolExtension = SymbolExtension(rawValue: "steeringwheel")
    static let steeringwheel_and_heat_waves: SymbolExtension = SymbolExtension(rawValue: "steeringwheel.and.heat.waves")
    static let steeringwheel_and_key: SymbolExtension = SymbolExtension(rawValue: "steeringwheel.and.key")
    static let steeringwheel_and_lock: SymbolExtension = SymbolExtension(rawValue: "steeringwheel.and.lock")
    static let steeringwheel_exclamationmark: SymbolExtension = SymbolExtension(rawValue: "steeringwheel.exclamationmark")
    static let steeringwheel_road_lane: SymbolExtension = SymbolExtension(rawValue: "steeringwheel.road.lane")
    static let steeringwheel_road_lane_dashed: SymbolExtension = SymbolExtension(rawValue: "steeringwheel.road.lane.dashed")
    static let steeringwheel_slash: SymbolExtension = SymbolExtension(rawValue: "steeringwheel.slash")
    static let stroller: SymbolExtension = SymbolExtension(rawValue: "stroller")
    static let stroller_fill: SymbolExtension = SymbolExtension(rawValue: "stroller.fill")
    static let suitcase_rolling: SymbolExtension = SymbolExtension(rawValue: "suitcase.rolling")
    static let suitcase_rolling_fill: SymbolExtension = SymbolExtension(rawValue: "suitcase.rolling.fill")
    static let suv_side: SymbolExtension = SymbolExtension(rawValue: "suv.side")
    static let suv_side_air_circulate: SymbolExtension = SymbolExtension(rawValue: "suv.side.air.circulate")
    static let suv_side_air_circulate_fill: SymbolExtension = SymbolExtension(rawValue: "suv.side.air.circulate.fill")
    static let suv_side_air_fresh: SymbolExtension = SymbolExtension(rawValue: "suv.side.air.fresh")
    static let suv_side_air_fresh_fill: SymbolExtension = SymbolExtension(rawValue: "suv.side.air.fresh.fill")
    static let suv_side_and_exclamationmark: SymbolExtension = SymbolExtension(rawValue: "suv.side.and.exclamationmark")
    static let suv_side_and_exclamationmark_fill: SymbolExtension = SymbolExtension(rawValue: "suv.side.and.exclamationmark.fill")
    static let suv_side_arrowtriangle_down: SymbolExtension = SymbolExtension(rawValue: "suv.side.arrowtriangle.down")
    static let suv_side_arrowtriangle_down_fill: SymbolExtension = SymbolExtension(rawValue: "suv.side.arrowtriangle.down.fill")
    static let suv_side_arrowtriangle_up: SymbolExtension = SymbolExtension(rawValue: "suv.side.arrowtriangle.up")
    static let suv_side_arrowtriangle_up_arrowtriangle_down: SymbolExtension = SymbolExtension(rawValue: "suv.side.arrowtriangle.up.arrowtriangle.down")
    static let suv_side_arrowtriangle_up_arrowtriangle_down_fill: SymbolExtension = SymbolExtension(rawValue: "suv.side.arrowtriangle.up.arrowtriangle.down.fill")
    static let suv_side_arrowtriangle_up_fill: SymbolExtension = SymbolExtension(rawValue: "suv.side.arrowtriangle.up.fill")
    static let suv_side_fill: SymbolExtension = SymbolExtension(rawValue: "suv.side.fill")
    static let suv_side_front_open: SymbolExtension = SymbolExtension(rawValue: "suv.side.front.open")
    static let suv_side_front_open_fill: SymbolExtension = SymbolExtension(rawValue: "suv.side.front.open.fill")
    static let suv_side_rear_open: SymbolExtension = SymbolExtension(rawValue: "suv.side.rear.open")
    static let suv_side_rear_open_fill: SymbolExtension = SymbolExtension(rawValue: "suv.side.rear.open.fill")
    static let taillight_fog: SymbolExtension = SymbolExtension(rawValue: "taillight.fog")
    static let taillight_fog_fill: SymbolExtension = SymbolExtension(rawValue: "taillight.fog.fill")
    static let tent_2: SymbolExtension = SymbolExtension(rawValue: "tent.2")
    static let tent_2_circle: SymbolExtension = SymbolExtension(rawValue: "tent.2.circle")
    static let tent_2_circle_fill: SymbolExtension = SymbolExtension(rawValue: "tent.2.circle.fill")
    static let tent_2_fill: SymbolExtension = SymbolExtension(rawValue: "tent.2.fill")
    static let tent_circle: SymbolExtension = SymbolExtension(rawValue: "tent.circle")
    static let tent_circle_fill: SymbolExtension = SymbolExtension(rawValue: "tent.circle.fill")
    static let thermometer_and_liquid_waves: SymbolExtension = SymbolExtension(rawValue: "thermometer.and.liquid.waves")
    static let thermometer_transmission: SymbolExtension = SymbolExtension(rawValue: "thermometer.transmission")
    static let toilet_circle: SymbolExtension = SymbolExtension(rawValue: "toilet.circle")
    static let toilet_circle_fill: SymbolExtension = SymbolExtension(rawValue: "toilet.circle.fill")
    static let transmission: SymbolExtension = SymbolExtension(rawValue: "transmission")
    static let tree: SymbolExtension = SymbolExtension(rawValue: "tree")
    static let tree_circle: SymbolExtension = SymbolExtension(rawValue: "tree.circle")
    static let tree_circle_fill: SymbolExtension = SymbolExtension(rawValue: "tree.circle.fill")
    static let tree_fill: SymbolExtension = SymbolExtension(rawValue: "tree.fill")
    static let windshield_front_and_fluid_and_spray: SymbolExtension = SymbolExtension(rawValue: "windshield.front.and.fluid.and.spray")
    static let windshield_front_and_heat_waves: SymbolExtension = SymbolExtension(rawValue: "windshield.front.and.heat.waves")
    static let windshield_front_and_spray: SymbolExtension = SymbolExtension(rawValue: "windshield.front.and.spray")
    static let windshield_front_and_wiper_and_spray: SymbolExtension = SymbolExtension(rawValue: "windshield.front.and.wiper.and.spray")
    static let windshield_front_and_wiper_exclamationmark: SymbolExtension = SymbolExtension(rawValue: "windshield.front.and.wiper.exclamationmark")
    static let windshield_front_and_wiper_intermittent: SymbolExtension = SymbolExtension(rawValue: "windshield.front.and.wiper.intermittent")
    static let windshield_rear_and_fluid_and_spray: SymbolExtension = SymbolExtension(rawValue: "windshield.rear.and.fluid.and.spray")
    static let windshield_rear_and_heat_waves: SymbolExtension = SymbolExtension(rawValue: "windshield.rear.and.heat.waves")
    static let windshield_rear_and_spray: SymbolExtension = SymbolExtension(rawValue: "windshield.rear.and.spray")
    static let windshield_rear_and_wiper_and_drop: SymbolExtension = SymbolExtension(rawValue: "windshield.rear.and.wiper.and.drop")
    static let windshield_rear_and_wiper_and_spray: SymbolExtension = SymbolExtension(rawValue: "windshield.rear.and.wiper.and.spray")
    static let windshield_rear_and_wiper_exclamationmark: SymbolExtension = SymbolExtension(rawValue: "windshield.rear.and.wiper.exclamationmark")
    static let windshield_rear_and_wiper_intermittent: SymbolExtension = SymbolExtension(rawValue: "windshield.rear.and.wiper.intermittent")
    static let wrongwaysign: SymbolExtension = SymbolExtension(rawValue: "wrongwaysign")
    static let wrongwaysign_fill: SymbolExtension = SymbolExtension(rawValue: "wrongwaysign.fill")
}
