//
//  SymbolExtension+14.0.swift
//  Symbol
//
//  Created by otake on 2025/05/05.
//

import Foundation

@available(iOS 14.0, macOS 11.0, *)
public extension SymbolExtension {
    static let _4k_tv: SymbolExtension = SymbolExtension(rawValue: "4k_tv")
    static let _4k_tv_fill: SymbolExtension = SymbolExtension(rawValue: "4k_tv_fill")
    static let abc: SymbolExtension = SymbolExtension(rawValue: "abc")
    static let airplane_circle: SymbolExtension = SymbolExtension(rawValue: "airplane_circle")
    static let airplane_circle_fill: SymbolExtension = SymbolExtension(rawValue: "airplane_circle_fill")
    static let airpod_left: SymbolExtension = SymbolExtension(rawValue: "airpod_left")
    static let airpod_right: SymbolExtension = SymbolExtension(rawValue: "airpod_right")
    static let airpodpro_left: SymbolExtension = SymbolExtension(rawValue: "airpodpro_left")
    static let airpodpro_right: SymbolExtension = SymbolExtension(rawValue: "airpodpro_right")
    static let airpods: SymbolExtension = SymbolExtension(rawValue: "airpods")
    static let airpodspro: SymbolExtension = SymbolExtension(rawValue: "airpodspro")
    static let airport_express: SymbolExtension = SymbolExtension(rawValue: "airport_express")
    static let airport_extreme: SymbolExtension = SymbolExtension(rawValue: "airport_extreme")
    static let airport_extreme_tower: SymbolExtension = SymbolExtension(rawValue: "airport_extreme_tower")
    static let amplifier: SymbolExtension = SymbolExtension(rawValue: "amplifier")
    static let appclip: SymbolExtension = SymbolExtension(rawValue: "appclip")
    static let applescript: SymbolExtension = SymbolExtension(rawValue: "applescript")
    static let applescript_fill: SymbolExtension = SymbolExtension(rawValue: "applescript_fill")
    static let appletv: SymbolExtension = SymbolExtension(rawValue: "appletv")
    static let appletv_fill: SymbolExtension = SymbolExtension(rawValue: "appletv_fill")
    static let applewatch: SymbolExtension = SymbolExtension(rawValue: "applewatch")
    static let applewatch_radiowaves_left_and_right: SymbolExtension = SymbolExtension(rawValue: "applewatch_radiowaves_left_and_right")
    static let applewatch_slash: SymbolExtension = SymbolExtension(rawValue: "applewatch_slash")
    static let applewatch_watchface: SymbolExtension = SymbolExtension(rawValue: "applewatch_watchface")
    static let apps_ipad: SymbolExtension = SymbolExtension(rawValue: "apps_ipad")
    static let apps_ipad_landscape: SymbolExtension = SymbolExtension(rawValue: "apps_ipad_landscape")
    static let apps_iphone: SymbolExtension = SymbolExtension(rawValue: "apps_iphone")
    static let apps_iphone_badge_plus: SymbolExtension = SymbolExtension(rawValue: "apps_iphone_badge_plus")
    static let apps_iphone_landscape: SymbolExtension = SymbolExtension(rawValue: "apps_iphone_landscape")
    static let archivebox_circle: SymbolExtension = SymbolExtension(rawValue: "archivebox_circle")
    static let archivebox_circle_fill: SymbolExtension = SymbolExtension(rawValue: "archivebox_circle_fill")
    static let arrow_backward: SymbolExtension = SymbolExtension(rawValue: "arrow_backward")
    static let arrow_backward_circle: SymbolExtension = SymbolExtension(rawValue: "arrow_backward_circle")
    static let arrow_backward_circle_fill: SymbolExtension = SymbolExtension(rawValue: "arrow_backward_circle_fill")
    static let arrow_backward_square: SymbolExtension = SymbolExtension(rawValue: "arrow_backward_square")
    static let arrow_backward_square_fill: SymbolExtension = SymbolExtension(rawValue: "arrow_backward_square_fill")
    static let arrow_clockwise_heart: SymbolExtension = SymbolExtension(rawValue: "arrow_clockwise_heart")
    static let arrow_clockwise_heart_fill: SymbolExtension = SymbolExtension(rawValue: "arrow_clockwise_heart_fill")
    static let arrow_down_app: SymbolExtension = SymbolExtension(rawValue: "arrow_down_app")
    static let arrow_down_app_fill: SymbolExtension = SymbolExtension(rawValue: "arrow_down_app_fill")
    static let arrow_down_backward: SymbolExtension = SymbolExtension(rawValue: "arrow_down_backward")
    static let arrow_down_backward_circle: SymbolExtension = SymbolExtension(rawValue: "arrow_down_backward_circle")
    static let arrow_down_backward_circle_fill: SymbolExtension = SymbolExtension(rawValue: "arrow_down_backward_circle_fill")
    static let arrow_down_backward_square: SymbolExtension = SymbolExtension(rawValue: "arrow_down_backward_square")
    static let arrow_down_backward_square_fill: SymbolExtension = SymbolExtension(rawValue: "arrow_down_backward_square_fill")
    static let arrow_down_forward: SymbolExtension = SymbolExtension(rawValue: "arrow_down_forward")
    static let arrow_down_forward_and_arrow_up_backward: SymbolExtension = SymbolExtension(rawValue: "arrow_down_forward_and_arrow_up_backward")
    static let arrow_down_forward_and_arrow_up_backward_circle: SymbolExtension = SymbolExtension(rawValue: "arrow_down_forward_and_arrow_up_backward_circle")
    static let arrow_down_forward_and_arrow_up_backward_circle_fill: SymbolExtension = SymbolExtension(rawValue: "arrow_down_forward_and_arrow_up_backward_circle_fill")
    static let arrow_down_forward_circle: SymbolExtension = SymbolExtension(rawValue: "arrow_down_forward_circle")
    static let arrow_down_forward_circle_fill: SymbolExtension = SymbolExtension(rawValue: "arrow_down_forward_circle_fill")
    static let arrow_down_forward_square: SymbolExtension = SymbolExtension(rawValue: "arrow_down_forward_square")
    static let arrow_down_forward_square_fill: SymbolExtension = SymbolExtension(rawValue: "arrow_down_forward_square_fill")
    static let arrow_down_heart: SymbolExtension = SymbolExtension(rawValue: "arrow_down_heart")
    static let arrow_down_heart_fill: SymbolExtension = SymbolExtension(rawValue: "arrow_down_heart_fill")
    static let arrow_down_right_and_arrow_up_left_circle: SymbolExtension = SymbolExtension(rawValue: "arrow_down_right_and_arrow_up_left_circle")
    static let arrow_down_right_and_arrow_up_left_circle_fill: SymbolExtension = SymbolExtension(rawValue: "arrow_down_right_and_arrow_up_left_circle_fill")
    static let arrow_forward: SymbolExtension = SymbolExtension(rawValue: "arrow_forward")
    static let arrow_forward_circle: SymbolExtension = SymbolExtension(rawValue: "arrow_forward_circle")
    static let arrow_forward_circle_fill: SymbolExtension = SymbolExtension(rawValue: "arrow_forward_circle_fill")
    static let arrow_forward_square: SymbolExtension = SymbolExtension(rawValue: "arrow_forward_square")
    static let arrow_forward_square_fill: SymbolExtension = SymbolExtension(rawValue: "arrow_forward_square_fill")
    static let arrow_left_and_right_righttriangle_left_righttriangle_right: SymbolExtension = SymbolExtension(rawValue: "arrow_left_and_right_righttriangle_left_righttriangle_right")
    static let arrow_left_and_right_righttriangle_left_righttriangle_right_fill: SymbolExtension = SymbolExtension(rawValue: "arrow_left_and_right_righttriangle_left_righttriangle_right_fill")
    static let arrow_left_arrow_right: SymbolExtension = SymbolExtension(rawValue: "arrow_left_arrow_right")
    static let arrow_left_arrow_right_circle: SymbolExtension = SymbolExtension(rawValue: "arrow_left_arrow_right_circle")
    static let arrow_left_arrow_right_circle_fill: SymbolExtension = SymbolExtension(rawValue: "arrow_left_arrow_right_circle_fill")
    static let arrow_left_arrow_right_square: SymbolExtension = SymbolExtension(rawValue: "arrow_left_arrow_right_square")
    static let arrow_left_arrow_right_square_fill: SymbolExtension = SymbolExtension(rawValue: "arrow_left_arrow_right_square_fill")
    static let arrow_rectanglepath: SymbolExtension = SymbolExtension(rawValue: "arrow_rectanglepath")
    static let arrow_right_doc_on_clipboard: SymbolExtension = SymbolExtension(rawValue: "arrow_right_doc_on_clipboard")
    static let arrow_triangle_2_circlepath: SymbolExtension = SymbolExtension(rawValue: "arrow_triangle_2_circlepath")
    static let arrow_triangle_2_circlepath_camera: SymbolExtension = SymbolExtension(rawValue: "arrow_triangle_2_circlepath_camera")
    static let arrow_triangle_2_circlepath_camera_fill: SymbolExtension = SymbolExtension(rawValue: "arrow_triangle_2_circlepath_camera_fill")
    static let arrow_triangle_2_circlepath_circle: SymbolExtension = SymbolExtension(rawValue: "arrow_triangle_2_circlepath_circle")
    static let arrow_triangle_2_circlepath_circle_fill: SymbolExtension = SymbolExtension(rawValue: "arrow_triangle_2_circlepath_circle_fill")
    static let arrow_triangle_2_circlepath_doc_on_clipboard: SymbolExtension = SymbolExtension(rawValue: "arrow_triangle_2_circlepath_doc_on_clipboard")
    static let arrow_triangle_branch: SymbolExtension = SymbolExtension(rawValue: "arrow_triangle_branch")
    static let arrow_triangle_capsulepath: SymbolExtension = SymbolExtension(rawValue: "arrow_triangle_capsulepath")
    static let arrow_triangle_merge: SymbolExtension = SymbolExtension(rawValue: "arrow_triangle_merge")
    static let arrow_triangle_pull: SymbolExtension = SymbolExtension(rawValue: "arrow_triangle_pull")
    static let arrow_triangle_swap: SymbolExtension = SymbolExtension(rawValue: "arrow_triangle_swap")
    static let arrow_triangle_turn_up_right_circle: SymbolExtension = SymbolExtension(rawValue: "arrow_triangle_turn_up_right_circle")
    static let arrow_triangle_turn_up_right_circle_fill: SymbolExtension = SymbolExtension(rawValue: "arrow_triangle_turn_up_right_circle_fill")
    static let arrow_triangle_turn_up_right_diamond: SymbolExtension = SymbolExtension(rawValue: "arrow_triangle_turn_up_right_diamond")
    static let arrow_triangle_turn_up_right_diamond_fill: SymbolExtension = SymbolExtension(rawValue: "arrow_triangle_turn_up_right_diamond_fill")
    static let arrow_turn_up_forward_iphone: SymbolExtension = SymbolExtension(rawValue: "arrow_turn_up_forward_iphone")
    static let arrow_turn_up_forward_iphone_fill: SymbolExtension = SymbolExtension(rawValue: "arrow_turn_up_forward_iphone_fill")
    static let arrow_up_and_down_and_arrow_left_and_right: SymbolExtension = SymbolExtension(rawValue: "arrow_up_and_down_and_arrow_left_and_right")
    static let arrow_up_and_down_righttriangle_up_righttriangle_down: SymbolExtension = SymbolExtension(rawValue: "arrow_up_and_down_righttriangle_up_righttriangle_down")
    static let arrow_up_and_person_rectangle_portrait: SymbolExtension = SymbolExtension(rawValue: "arrow_up_and_person_rectangle_portrait")
    static let arrow_up_and_person_rectangle_turn_left: SymbolExtension = SymbolExtension(rawValue: "arrow_up_and_person_rectangle_turn_left")
    static let arrow_up_and_person_rectangle_turn_right: SymbolExtension = SymbolExtension(rawValue: "arrow_up_and_person_rectangle_turn_right")
    static let arrow_up_backward: SymbolExtension = SymbolExtension(rawValue: "arrow_up_backward")
    static let arrow_up_backward_and_arrow_down_forward: SymbolExtension = SymbolExtension(rawValue: "arrow_up_backward_and_arrow_down_forward")
    static let arrow_up_backward_and_arrow_down_forward_circle: SymbolExtension = SymbolExtension(rawValue: "arrow_up_backward_and_arrow_down_forward_circle")
    static let arrow_up_backward_and_arrow_down_forward_circle_fill: SymbolExtension = SymbolExtension(rawValue: "arrow_up_backward_and_arrow_down_forward_circle_fill")
    static let arrow_up_backward_circle: SymbolExtension = SymbolExtension(rawValue: "arrow_up_backward_circle")
    static let arrow_up_backward_circle_fill: SymbolExtension = SymbolExtension(rawValue: "arrow_up_backward_circle_fill")
    static let arrow_up_backward_square: SymbolExtension = SymbolExtension(rawValue: "arrow_up_backward_square")
    static let arrow_up_backward_square_fill: SymbolExtension = SymbolExtension(rawValue: "arrow_up_backward_square_fill")
    static let arrow_up_doc_on_clipboard: SymbolExtension = SymbolExtension(rawValue: "arrow_up_doc_on_clipboard")
    static let arrow_up_forward: SymbolExtension = SymbolExtension(rawValue: "arrow_up_forward")
    static let arrow_up_forward_app: SymbolExtension = SymbolExtension(rawValue: "arrow_up_forward_app")
    static let arrow_up_forward_app_fill: SymbolExtension = SymbolExtension(rawValue: "arrow_up_forward_app_fill")
    static let arrow_up_forward_circle: SymbolExtension = SymbolExtension(rawValue: "arrow_up_forward_circle")
    static let arrow_up_forward_circle_fill: SymbolExtension = SymbolExtension(rawValue: "arrow_up_forward_circle_fill")
    static let arrow_up_forward_square: SymbolExtension = SymbolExtension(rawValue: "arrow_up_forward_square")
    static let arrow_up_forward_square_fill: SymbolExtension = SymbolExtension(rawValue: "arrow_up_forward_square_fill")
    static let arrow_up_heart: SymbolExtension = SymbolExtension(rawValue: "arrow_up_heart")
    static let arrow_up_heart_fill: SymbolExtension = SymbolExtension(rawValue: "arrow_up_heart_fill")
    static let arrow_up_left_and_arrow_down_right_circle: SymbolExtension = SymbolExtension(rawValue: "arrow_up_left_and_arrow_down_right_circle")
    static let arrow_up_left_and_arrow_down_right_circle_fill: SymbolExtension = SymbolExtension(rawValue: "arrow_up_left_and_arrow_down_right_circle_fill")
    static let arrow_up_left_and_down_right_and_arrow_up_right_and_down_left: SymbolExtension = SymbolExtension(rawValue: "arrow_up_left_and_down_right_and_arrow_up_right_and_down_left")
    static let arrow_up_left_and_down_right_magnifyingglass: SymbolExtension = SymbolExtension(rawValue: "arrow_up_left_and_down_right_magnifyingglass")
    static let arrow_up_message: SymbolExtension = SymbolExtension(rawValue: "arrow_up_message")
    static let arrow_up_message_fill: SymbolExtension = SymbolExtension(rawValue: "arrow_up_message_fill")
    static let arrow_up_right_and_arrow_down_left_rectangle: SymbolExtension = SymbolExtension(rawValue: "arrow_up_right_and_arrow_down_left_rectangle")
    static let arrow_up_right_and_arrow_down_left_rectangle_fill: SymbolExtension = SymbolExtension(rawValue: "arrow_up_right_and_arrow_down_left_rectangle_fill")
    static let arrow_uturn_backward: SymbolExtension = SymbolExtension(rawValue: "arrow_uturn_backward")
    static let arrow_uturn_backward_circle: SymbolExtension = SymbolExtension(rawValue: "arrow_uturn_backward_circle")
    static let arrow_uturn_backward_circle_badge_ellipsis: SymbolExtension = SymbolExtension(rawValue: "arrow_uturn_backward_circle_badge_ellipsis")
    static let arrow_uturn_backward_circle_fill: SymbolExtension = SymbolExtension(rawValue: "arrow_uturn_backward_circle_fill")
    static let arrow_uturn_backward_square: SymbolExtension = SymbolExtension(rawValue: "arrow_uturn_backward_square")
    static let arrow_uturn_backward_square_fill: SymbolExtension = SymbolExtension(rawValue: "arrow_uturn_backward_square_fill")
    static let arrow_uturn_forward: SymbolExtension = SymbolExtension(rawValue: "arrow_uturn_forward")
    static let arrow_uturn_forward_circle: SymbolExtension = SymbolExtension(rawValue: "arrow_uturn_forward_circle")
    static let arrow_uturn_forward_circle_fill: SymbolExtension = SymbolExtension(rawValue: "arrow_uturn_forward_circle_fill")
    static let arrow_uturn_forward_square: SymbolExtension = SymbolExtension(rawValue: "arrow_uturn_forward_square")
    static let arrow_uturn_forward_square_fill: SymbolExtension = SymbolExtension(rawValue: "arrow_uturn_forward_square_fill")
    static let arrowshape_bounce_forward: SymbolExtension = SymbolExtension(rawValue: "arrowshape_bounce_forward")
    static let arrowshape_bounce_forward_fill: SymbolExtension = SymbolExtension(rawValue: "arrowshape_bounce_forward_fill")
    static let arrowshape_bounce_right: SymbolExtension = SymbolExtension(rawValue: "arrowshape_bounce_right")
    static let arrowshape_bounce_right_fill: SymbolExtension = SymbolExtension(rawValue: "arrowshape_bounce_right_fill")
    static let arrowshape_turn_up_backward: SymbolExtension = SymbolExtension(rawValue: "arrowshape_turn_up_backward")
    static let arrowshape_turn_up_backward_2: SymbolExtension = SymbolExtension(rawValue: "arrowshape_turn_up_backward_2")
    static let arrowshape_turn_up_backward_2_circle: SymbolExtension = SymbolExtension(rawValue: "arrowshape_turn_up_backward_2_circle")
    static let arrowshape_turn_up_backward_2_circle_fill: SymbolExtension = SymbolExtension(rawValue: "arrowshape_turn_up_backward_2_circle_fill")
    static let arrowshape_turn_up_backward_2_fill: SymbolExtension = SymbolExtension(rawValue: "arrowshape_turn_up_backward_2_fill")
    static let arrowshape_turn_up_backward_circle: SymbolExtension = SymbolExtension(rawValue: "arrowshape_turn_up_backward_circle")
    static let arrowshape_turn_up_backward_circle_fill: SymbolExtension = SymbolExtension(rawValue: "arrowshape_turn_up_backward_circle_fill")
    static let arrowshape_turn_up_backward_fill: SymbolExtension = SymbolExtension(rawValue: "arrowshape_turn_up_backward_fill")
    static let arrowshape_turn_up_forward: SymbolExtension = SymbolExtension(rawValue: "arrowshape_turn_up_forward")
    static let arrowshape_turn_up_forward_circle: SymbolExtension = SymbolExtension(rawValue: "arrowshape_turn_up_forward_circle")
    static let arrowshape_turn_up_forward_circle_fill: SymbolExtension = SymbolExtension(rawValue: "arrowshape_turn_up_forward_circle_fill")
    static let arrowshape_turn_up_forward_fill: SymbolExtension = SymbolExtension(rawValue: "arrowshape_turn_up_forward_fill")
    static let arrowshape_turn_up_left_2_circle: SymbolExtension = SymbolExtension(rawValue: "arrowshape_turn_up_left_2_circle")
    static let arrowshape_turn_up_left_2_circle_fill: SymbolExtension = SymbolExtension(rawValue: "arrowshape_turn_up_left_2_circle_fill")
    static let arrowshape_zigzag_forward: SymbolExtension = SymbolExtension(rawValue: "arrowshape_zigzag_forward")
    static let arrowshape_zigzag_forward_fill: SymbolExtension = SymbolExtension(rawValue: "arrowshape_zigzag_forward_fill")
    static let arrowshape_zigzag_right: SymbolExtension = SymbolExtension(rawValue: "arrowshape_zigzag_right")
    static let arrowshape_zigzag_right_fill: SymbolExtension = SymbolExtension(rawValue: "arrowshape_zigzag_right_fill")
    static let arrowtriangle_backward: SymbolExtension = SymbolExtension(rawValue: "arrowtriangle_backward")
    static let arrowtriangle_backward_circle: SymbolExtension = SymbolExtension(rawValue: "arrowtriangle_backward_circle")
    static let arrowtriangle_backward_circle_fill: SymbolExtension = SymbolExtension(rawValue: "arrowtriangle_backward_circle_fill")
    static let arrowtriangle_backward_fill: SymbolExtension = SymbolExtension(rawValue: "arrowtriangle_backward_fill")
    static let arrowtriangle_backward_square: SymbolExtension = SymbolExtension(rawValue: "arrowtriangle_backward_square")
    static let arrowtriangle_backward_square_fill: SymbolExtension = SymbolExtension(rawValue: "arrowtriangle_backward_square_fill")
    static let arrowtriangle_forward: SymbolExtension = SymbolExtension(rawValue: "arrowtriangle_forward")
    static let arrowtriangle_forward_circle: SymbolExtension = SymbolExtension(rawValue: "arrowtriangle_forward_circle")
    static let arrowtriangle_forward_circle_fill: SymbolExtension = SymbolExtension(rawValue: "arrowtriangle_forward_circle_fill")
    static let arrowtriangle_forward_fill: SymbolExtension = SymbolExtension(rawValue: "arrowtriangle_forward_fill")
    static let arrowtriangle_forward_square: SymbolExtension = SymbolExtension(rawValue: "arrowtriangle_forward_square")
    static let arrowtriangle_forward_square_fill: SymbolExtension = SymbolExtension(rawValue: "arrowtriangle_forward_square_fill")
    static let arrowtriangle_left_and_line_vertical_and_arrowtriangle_right: SymbolExtension = SymbolExtension(rawValue: "arrowtriangle_left_and_line_vertical_and_arrowtriangle_right")
    static let arrowtriangle_right_and_line_vertical_and_arrowtriangle_left: SymbolExtension = SymbolExtension(rawValue: "arrowtriangle_right_and_line_vertical_and_arrowtriangle_left")
    static let at_circle: SymbolExtension = SymbolExtension(rawValue: "at_circle")
    static let at_circle_fill: SymbolExtension = SymbolExtension(rawValue: "at_circle_fill")
    static let atom: SymbolExtension = SymbolExtension(rawValue: "atom")
    static let backward_frame: SymbolExtension = SymbolExtension(rawValue: "backward_frame")
    static let backward_frame_fill: SymbolExtension = SymbolExtension(rawValue: "backward_frame_fill")
    static let badge_plus_radiowaves_forward: SymbolExtension = SymbolExtension(rawValue: "badge_plus_radiowaves_forward")
    static let bag_circle: SymbolExtension = SymbolExtension(rawValue: "bag_circle")
    static let bag_circle_fill: SymbolExtension = SymbolExtension(rawValue: "bag_circle_fill")
    static let banknote: SymbolExtension = SymbolExtension(rawValue: "banknote")
    static let banknote_fill: SymbolExtension = SymbolExtension(rawValue: "banknote_fill")
    static let barometer: SymbolExtension = SymbolExtension(rawValue: "barometer")
    static let bell_badge: SymbolExtension = SymbolExtension(rawValue: "bell_badge")
    static let bell_badge_fill: SymbolExtension = SymbolExtension(rawValue: "bell_badge_fill")
    static let bell_slash_circle: SymbolExtension = SymbolExtension(rawValue: "bell_slash_circle")
    static let bell_slash_circle_fill: SymbolExtension = SymbolExtension(rawValue: "bell_slash_circle_fill")
    static let bicycle: SymbolExtension = SymbolExtension(rawValue: "bicycle")
    static let bicycle_circle: SymbolExtension = SymbolExtension(rawValue: "bicycle_circle")
    static let bicycle_circle_fill: SymbolExtension = SymbolExtension(rawValue: "bicycle_circle_fill")
    static let binoculars: SymbolExtension = SymbolExtension(rawValue: "binoculars")
    static let binoculars_fill: SymbolExtension = SymbolExtension(rawValue: "binoculars_fill")
    static let bolt_car: SymbolExtension = SymbolExtension(rawValue: "bolt_car")
    static let bolt_car_fill: SymbolExtension = SymbolExtension(rawValue: "bolt_car_fill")
    static let bolt_heart: SymbolExtension = SymbolExtension(rawValue: "bolt_heart")
    static let bolt_heart_fill: SymbolExtension = SymbolExtension(rawValue: "bolt_heart_fill")
    static let bolt_slash_circle: SymbolExtension = SymbolExtension(rawValue: "bolt_slash_circle")
    static let bolt_slash_circle_fill: SymbolExtension = SymbolExtension(rawValue: "bolt_slash_circle_fill")
    static let bonjour: SymbolExtension = SymbolExtension(rawValue: "bonjour")
    static let book_closed: SymbolExtension = SymbolExtension(rawValue: "book_closed")
    static let book_closed_fill: SymbolExtension = SymbolExtension(rawValue: "book_closed_fill")
    static let bookmark_circle: SymbolExtension = SymbolExtension(rawValue: "bookmark_circle")
    static let bookmark_circle_fill: SymbolExtension = SymbolExtension(rawValue: "bookmark_circle_fill")
    static let bookmark_slash: SymbolExtension = SymbolExtension(rawValue: "bookmark_slash")
    static let bookmark_slash_fill: SymbolExtension = SymbolExtension(rawValue: "bookmark_slash_fill")
    static let books_vertical: SymbolExtension = SymbolExtension(rawValue: "books_vertical")
    static let books_vertical_fill: SymbolExtension = SymbolExtension(rawValue: "books_vertical_fill")
    static let building: SymbolExtension = SymbolExtension(rawValue: "building")
    static let building_2: SymbolExtension = SymbolExtension(rawValue: "building_2")
    static let building_2_crop_circle: SymbolExtension = SymbolExtension(rawValue: "building_2_crop_circle")
    static let building_2_crop_circle_fill: SymbolExtension = SymbolExtension(rawValue: "building_2_crop_circle_fill")
    static let building_2_fill: SymbolExtension = SymbolExtension(rawValue: "building_2_fill")
    static let building_columns: SymbolExtension = SymbolExtension(rawValue: "building_columns")
    static let building_columns_fill: SymbolExtension = SymbolExtension(rawValue: "building_columns_fill")
    static let building_fill: SymbolExtension = SymbolExtension(rawValue: "building_fill")
    static let bus: SymbolExtension = SymbolExtension(rawValue: "bus")
    static let bus_doubledecker: SymbolExtension = SymbolExtension(rawValue: "bus_doubledecker")
    static let bus_doubledecker_fill: SymbolExtension = SymbolExtension(rawValue: "bus_doubledecker_fill")
    static let bus_fill: SymbolExtension = SymbolExtension(rawValue: "bus_fill")
    static let calendar_badge_clock: SymbolExtension = SymbolExtension(rawValue: "calendar_badge_clock")
    static let calendar_badge_exclamationmark: SymbolExtension = SymbolExtension(rawValue: "calendar_badge_exclamationmark")
    static let camera_aperture: SymbolExtension = SymbolExtension(rawValue: "camera_aperture")
    static let camera_badge_ellipsis: SymbolExtension = SymbolExtension(rawValue: "camera_badge_ellipsis")
    static let camera_filters: SymbolExtension = SymbolExtension(rawValue: "camera_filters")
    static let camera_metering_center_weighted: SymbolExtension = SymbolExtension(rawValue: "camera_metering_center_weighted")
    static let camera_metering_center_weighted_average: SymbolExtension = SymbolExtension(rawValue: "camera_metering_center_weighted_average")
    static let camera_metering_matrix: SymbolExtension = SymbolExtension(rawValue: "camera_metering_matrix")
    static let camera_metering_multispot: SymbolExtension = SymbolExtension(rawValue: "camera_metering_multispot")
    static let camera_metering_none: SymbolExtension = SymbolExtension(rawValue: "camera_metering_none")
    static let camera_metering_partial: SymbolExtension = SymbolExtension(rawValue: "camera_metering_partial")
    static let camera_metering_spot: SymbolExtension = SymbolExtension(rawValue: "camera_metering_spot")
    static let camera_metering_unknown: SymbolExtension = SymbolExtension(rawValue: "camera_metering_unknown")
    static let candybarphone: SymbolExtension = SymbolExtension(rawValue: "candybarphone")
    static let capsule_portrait: SymbolExtension = SymbolExtension(rawValue: "capsule_portrait")
    static let capsule_portrait_fill: SymbolExtension = SymbolExtension(rawValue: "capsule_portrait_fill")
    static let car_2: SymbolExtension = SymbolExtension(rawValue: "car_2")
    static let car_2_fill: SymbolExtension = SymbolExtension(rawValue: "car_2_fill")
    static let car_circle: SymbolExtension = SymbolExtension(rawValue: "car_circle")
    static let car_circle_fill: SymbolExtension = SymbolExtension(rawValue: "car_circle_fill")
    static let _case: SymbolExtension = SymbolExtension(rawValue: "case")
    static let case_fill: SymbolExtension = SymbolExtension(rawValue: "case_fill")
    static let chart_bar_doc_horizontal: SymbolExtension = SymbolExtension(rawValue: "chart_bar_doc_horizontal")
    static let chart_bar_doc_horizontal_fill: SymbolExtension = SymbolExtension(rawValue: "chart_bar_doc_horizontal_fill")
    static let chart_bar_xaxis: SymbolExtension = SymbolExtension(rawValue: "chart_bar_xaxis")
    static let checkmark_icloud: SymbolExtension = SymbolExtension(rawValue: "checkmark_icloud")
    static let checkmark_icloud_fill: SymbolExtension = SymbolExtension(rawValue: "checkmark_icloud_fill")
    static let checkmark_rectangle_portrait: SymbolExtension = SymbolExtension(rawValue: "checkmark_rectangle_portrait")
    static let checkmark_rectangle_portrait_fill: SymbolExtension = SymbolExtension(rawValue: "checkmark_rectangle_portrait_fill")
    static let chevron_backward: SymbolExtension = SymbolExtension(rawValue: "chevron_backward")
    static let chevron_backward_2: SymbolExtension = SymbolExtension(rawValue: "chevron_backward_2")
    static let chevron_backward_circle: SymbolExtension = SymbolExtension(rawValue: "chevron_backward_circle")
    static let chevron_backward_circle_fill: SymbolExtension = SymbolExtension(rawValue: "chevron_backward_circle_fill")
    static let chevron_backward_square: SymbolExtension = SymbolExtension(rawValue: "chevron_backward_square")
    static let chevron_backward_square_fill: SymbolExtension = SymbolExtension(rawValue: "chevron_backward_square_fill")
    static let chevron_forward: SymbolExtension = SymbolExtension(rawValue: "chevron_forward")
    static let chevron_forward_2: SymbolExtension = SymbolExtension(rawValue: "chevron_forward_2")
    static let chevron_forward_circle: SymbolExtension = SymbolExtension(rawValue: "chevron_forward_circle")
    static let chevron_forward_circle_fill: SymbolExtension = SymbolExtension(rawValue: "chevron_forward_circle_fill")
    static let chevron_forward_square: SymbolExtension = SymbolExtension(rawValue: "chevron_forward_square")
    static let chevron_forward_square_fill: SymbolExtension = SymbolExtension(rawValue: "chevron_forward_square_fill")
    static let circle_circle: SymbolExtension = SymbolExtension(rawValue: "circle_circle")
    static let circle_circle_fill: SymbolExtension = SymbolExtension(rawValue: "circle_circle_fill")
    static let circle_dashed: SymbolExtension = SymbolExtension(rawValue: "circle_dashed")
    static let circle_grid_cross: SymbolExtension = SymbolExtension(rawValue: "circle_grid_cross")
    static let circle_grid_cross_fill: SymbolExtension = SymbolExtension(rawValue: "circle_grid_cross_fill")
    static let circle_square: SymbolExtension = SymbolExtension(rawValue: "circle_square")
    static let circlebadge: SymbolExtension = SymbolExtension(rawValue: "circlebadge")
    static let circlebadge_2: SymbolExtension = SymbolExtension(rawValue: "circlebadge_2")
    static let circlebadge_2_fill: SymbolExtension = SymbolExtension(rawValue: "circlebadge_2_fill")
    static let circlebadge_fill: SymbolExtension = SymbolExtension(rawValue: "circlebadge_fill")
    static let clock_arrow_circlepath: SymbolExtension = SymbolExtension(rawValue: "clock_arrow_circlepath")
    static let comb: SymbolExtension = SymbolExtension(rawValue: "comb")
    static let comb_fill: SymbolExtension = SymbolExtension(rawValue: "comb_fill")
    static let command_circle: SymbolExtension = SymbolExtension(rawValue: "command_circle")
    static let command_circle_fill: SymbolExtension = SymbolExtension(rawValue: "command_circle_fill")
    static let command_square: SymbolExtension = SymbolExtension(rawValue: "command_square")
    static let command_square_fill: SymbolExtension = SymbolExtension(rawValue: "command_square_fill")
    static let cone: SymbolExtension = SymbolExtension(rawValue: "cone")
    static let cone_fill: SymbolExtension = SymbolExtension(rawValue: "cone_fill")
    static let contextualmenu_and_cursorarrow: SymbolExtension = SymbolExtension(rawValue: "contextualmenu_and_cursorarrow")
    static let cpu: SymbolExtension = SymbolExtension(rawValue: "cpu")
    static let creditcard_circle: SymbolExtension = SymbolExtension(rawValue: "creditcard_circle")
    static let creditcard_circle_fill: SymbolExtension = SymbolExtension(rawValue: "creditcard_circle_fill")
    static let cross: SymbolExtension = SymbolExtension(rawValue: "cross")
    static let cross_case: SymbolExtension = SymbolExtension(rawValue: "cross_case")
    static let cross_case_fill: SymbolExtension = SymbolExtension(rawValue: "cross_case_fill")
    static let cross_circle: SymbolExtension = SymbolExtension(rawValue: "cross_circle")
    static let cross_circle_fill: SymbolExtension = SymbolExtension(rawValue: "cross_circle_fill")
    static let cross_fill: SymbolExtension = SymbolExtension(rawValue: "cross_fill")
    static let crown: SymbolExtension = SymbolExtension(rawValue: "crown")
    static let crown_fill: SymbolExtension = SymbolExtension(rawValue: "crown_fill")
    static let cube_transparent: SymbolExtension = SymbolExtension(rawValue: "cube_transparent")
    static let cube_transparent_fill: SymbolExtension = SymbolExtension(rawValue: "cube_transparent_fill")
    static let curlybraces: SymbolExtension = SymbolExtension(rawValue: "curlybraces")
    static let curlybraces_square: SymbolExtension = SymbolExtension(rawValue: "curlybraces_square")
    static let curlybraces_square_fill: SymbolExtension = SymbolExtension(rawValue: "curlybraces_square_fill")
    static let cursorarrow: SymbolExtension = SymbolExtension(rawValue: "cursorarrow")
    static let cursorarrow_and_square_on_square_dashed: SymbolExtension = SymbolExtension(rawValue: "cursorarrow_and_square_on_square_dashed")
    static let cursorarrow_click: SymbolExtension = SymbolExtension(rawValue: "cursorarrow_click")
    static let cursorarrow_click_2: SymbolExtension = SymbolExtension(rawValue: "cursorarrow_click_2")
    static let cursorarrow_click_badge_clock: SymbolExtension = SymbolExtension(rawValue: "cursorarrow_click_badge_clock")
    static let cursorarrow_motionlines: SymbolExtension = SymbolExtension(rawValue: "cursorarrow_motionlines")
    static let cursorarrow_motionlines_click: SymbolExtension = SymbolExtension(rawValue: "cursorarrow_motionlines_click")
    static let cursorarrow_rays: SymbolExtension = SymbolExtension(rawValue: "cursorarrow_rays")
    static let cursorarrow_square: SymbolExtension = SymbolExtension(rawValue: "cursorarrow_square")
    static let cylinder: SymbolExtension = SymbolExtension(rawValue: "cylinder")
    static let cylinder_fill: SymbolExtension = SymbolExtension(rawValue: "cylinder_fill")
    static let cylinder_split_1x2: SymbolExtension = SymbolExtension(rawValue: "cylinder_split_1x2")
    static let cylinder_split_1x2_fill: SymbolExtension = SymbolExtension(rawValue: "cylinder_split_1x2_fill")
    static let deskclock: SymbolExtension = SymbolExtension(rawValue: "deskclock")
    static let deskclock_fill: SymbolExtension = SymbolExtension(rawValue: "deskclock_fill")
    static let diamond: SymbolExtension = SymbolExtension(rawValue: "diamond")
    static let diamond_fill: SymbolExtension = SymbolExtension(rawValue: "diamond_fill")
    static let die_face_1: SymbolExtension = SymbolExtension(rawValue: "die_face_1")
    static let die_face_1_fill: SymbolExtension = SymbolExtension(rawValue: "die_face_1_fill")
    static let die_face_2: SymbolExtension = SymbolExtension(rawValue: "die_face_2")
    static let die_face_2_fill: SymbolExtension = SymbolExtension(rawValue: "die_face_2_fill")
    static let die_face_3: SymbolExtension = SymbolExtension(rawValue: "die_face_3")
    static let die_face_3_fill: SymbolExtension = SymbolExtension(rawValue: "die_face_3_fill")
    static let die_face_4: SymbolExtension = SymbolExtension(rawValue: "die_face_4")
    static let die_face_4_fill: SymbolExtension = SymbolExtension(rawValue: "die_face_4_fill")
    static let die_face_5: SymbolExtension = SymbolExtension(rawValue: "die_face_5")
    static let die_face_5_fill: SymbolExtension = SymbolExtension(rawValue: "die_face_5_fill")
    static let die_face_6: SymbolExtension = SymbolExtension(rawValue: "die_face_6")
    static let die_face_6_fill: SymbolExtension = SymbolExtension(rawValue: "die_face_6_fill")
    static let display: SymbolExtension = SymbolExtension(rawValue: "display")
    static let display_2: SymbolExtension = SymbolExtension(rawValue: "display_2")
    static let display_trianglebadge_exclamationmark: SymbolExtension = SymbolExtension(rawValue: "display_trianglebadge_exclamationmark")
    static let doc_append_fill: SymbolExtension = SymbolExtension(rawValue: "doc_append_fill")
    static let doc_badge_ellipsis: SymbolExtension = SymbolExtension(rawValue: "doc_badge_ellipsis")
    static let doc_badge_gearshape: SymbolExtension = SymbolExtension(rawValue: "doc_badge_gearshape")
    static let doc_badge_gearshape_fill: SymbolExtension = SymbolExtension(rawValue: "doc_badge_gearshape_fill")
    static let doc_badge_plus: SymbolExtension = SymbolExtension(rawValue: "doc_badge_plus")
    static let doc_fill_badge_ellipsis: SymbolExtension = SymbolExtension(rawValue: "doc_fill_badge_ellipsis")
    static let doc_fill_badge_plus: SymbolExtension = SymbolExtension(rawValue: "doc_fill_badge_plus")
    static let doc_plaintext_fill: SymbolExtension = SymbolExtension(rawValue: "doc_plaintext_fill")
    static let doc_richtext_fill: SymbolExtension = SymbolExtension(rawValue: "doc_richtext_fill")
    static let doc_text_below_ecg: SymbolExtension = SymbolExtension(rawValue: "doc_text_below_ecg")
    static let doc_text_below_ecg_fill: SymbolExtension = SymbolExtension(rawValue: "doc_text_below_ecg_fill")
    static let doc_zipper: SymbolExtension = SymbolExtension(rawValue: "doc_zipper")
    static let dock_arrow_down_rectangle: SymbolExtension = SymbolExtension(rawValue: "dock_arrow_down_rectangle")
    static let dock_arrow_up_rectangle: SymbolExtension = SymbolExtension(rawValue: "dock_arrow_up_rectangle")
    static let dock_rectangle: SymbolExtension = SymbolExtension(rawValue: "dock_rectangle")
    static let dot_arrowtriangles_up_right_down_left_circle: SymbolExtension = SymbolExtension(rawValue: "dot_arrowtriangles_up_right_down_left_circle")
    static let dot_circle_and_cursorarrow: SymbolExtension = SymbolExtension(rawValue: "dot_circle_and_cursorarrow")
    static let dot_radiowaves_forward: SymbolExtension = SymbolExtension(rawValue: "dot_radiowaves_forward")
    static let dot_squareshape: SymbolExtension = SymbolExtension(rawValue: "dot_squareshape")
    static let dot_squareshape_fill: SymbolExtension = SymbolExtension(rawValue: "dot_squareshape_fill")
    static let dot_squareshape_split_2x2: SymbolExtension = SymbolExtension(rawValue: "dot_squareshape_split_2x2")
    static let dpad: SymbolExtension = SymbolExtension(rawValue: "dpad")
    static let dpad_fill: SymbolExtension = SymbolExtension(rawValue: "dpad_fill")
    static let drop: SymbolExtension = SymbolExtension(rawValue: "drop")
    static let drop_fill: SymbolExtension = SymbolExtension(rawValue: "drop_fill")
    static let ear_badge_checkmark: SymbolExtension = SymbolExtension(rawValue: "ear_badge_checkmark")
    static let ear_fill: SymbolExtension = SymbolExtension(rawValue: "ear_fill")
    static let ear_trianglebadge_exclamationmark: SymbolExtension = SymbolExtension(rawValue: "ear_trianglebadge_exclamationmark")
    static let earpods: SymbolExtension = SymbolExtension(rawValue: "earpods")
    static let eject_circle: SymbolExtension = SymbolExtension(rawValue: "eject_circle")
    static let eject_circle_fill: SymbolExtension = SymbolExtension(rawValue: "eject_circle_fill")
    static let ellipsis_bubble: SymbolExtension = SymbolExtension(rawValue: "ellipsis_bubble")
    static let ellipsis_bubble_fill: SymbolExtension = SymbolExtension(rawValue: "ellipsis_bubble_fill")
    static let ellipsis_rectangle: SymbolExtension = SymbolExtension(rawValue: "ellipsis_rectangle")
    static let ellipsis_rectangle_fill: SymbolExtension = SymbolExtension(rawValue: "ellipsis_rectangle_fill")
    static let envelope_arrow_triangle_branch: SymbolExtension = SymbolExtension(rawValue: "envelope_arrow_triangle_branch")
    static let envelope_arrow_triangle_branch_fill: SymbolExtension = SymbolExtension(rawValue: "envelope_arrow_triangle_branch_fill")
    static let esim: SymbolExtension = SymbolExtension(rawValue: "esim")
    static let esim_fill: SymbolExtension = SymbolExtension(rawValue: "esim_fill")
    static let exclamationmark_2: SymbolExtension = SymbolExtension(rawValue: "exclamationmark_2")
    static let exclamationmark_3: SymbolExtension = SymbolExtension(rawValue: "exclamationmark_3")
    static let exclamationmark_arrow_circlepath: SymbolExtension = SymbolExtension(rawValue: "exclamationmark_arrow_circlepath")
    static let exclamationmark_arrow_triangle_2_circlepath: SymbolExtension = SymbolExtension(rawValue: "exclamationmark_arrow_triangle_2_circlepath")
    static let externaldrive: SymbolExtension = SymbolExtension(rawValue: "externaldrive")
    static let externaldrive_badge_checkmark: SymbolExtension = SymbolExtension(rawValue: "externaldrive_badge_checkmark")
    static let externaldrive_badge_icloud: SymbolExtension = SymbolExtension(rawValue: "externaldrive_badge_icloud")
    static let externaldrive_badge_minus: SymbolExtension = SymbolExtension(rawValue: "externaldrive_badge_minus")
    static let externaldrive_badge_person_crop: SymbolExtension = SymbolExtension(rawValue: "externaldrive_badge_person_crop")
    static let externaldrive_badge_plus: SymbolExtension = SymbolExtension(rawValue: "externaldrive_badge_plus")
    static let externaldrive_badge_timemachine: SymbolExtension = SymbolExtension(rawValue: "externaldrive_badge_timemachine")
    static let externaldrive_badge_wifi: SymbolExtension = SymbolExtension(rawValue: "externaldrive_badge_wifi")
    static let externaldrive_badge_xmark: SymbolExtension = SymbolExtension(rawValue: "externaldrive_badge_xmark")
    static let externaldrive_connected_to_line_below: SymbolExtension = SymbolExtension(rawValue: "externaldrive_connected_to_line_below")
    static let externaldrive_connected_to_line_below_fill: SymbolExtension = SymbolExtension(rawValue: "externaldrive_connected_to_line_below_fill")
    static let externaldrive_fill: SymbolExtension = SymbolExtension(rawValue: "externaldrive_fill")
    static let externaldrive_fill_badge_checkmark: SymbolExtension = SymbolExtension(rawValue: "externaldrive_fill_badge_checkmark")
    static let externaldrive_fill_badge_icloud: SymbolExtension = SymbolExtension(rawValue: "externaldrive_fill_badge_icloud")
    static let externaldrive_fill_badge_minus: SymbolExtension = SymbolExtension(rawValue: "externaldrive_fill_badge_minus")
    static let externaldrive_fill_badge_person_crop: SymbolExtension = SymbolExtension(rawValue: "externaldrive_fill_badge_person_crop")
    static let externaldrive_fill_badge_plus: SymbolExtension = SymbolExtension(rawValue: "externaldrive_fill_badge_plus")
    static let externaldrive_fill_badge_timemachine: SymbolExtension = SymbolExtension(rawValue: "externaldrive_fill_badge_timemachine")
    static let externaldrive_fill_badge_wifi: SymbolExtension = SymbolExtension(rawValue: "externaldrive_fill_badge_wifi")
    static let externaldrive_fill_badge_xmark: SymbolExtension = SymbolExtension(rawValue: "externaldrive_fill_badge_xmark")
    static let eye_circle: SymbolExtension = SymbolExtension(rawValue: "eye_circle")
    static let eye_circle_fill: SymbolExtension = SymbolExtension(rawValue: "eye_circle_fill")
    static let eyebrow: SymbolExtension = SymbolExtension(rawValue: "eyebrow")
    static let eyes: SymbolExtension = SymbolExtension(rawValue: "eyes")
    static let eyes_inverse: SymbolExtension = SymbolExtension(rawValue: "eyes_inverse")
    static let face_dashed: SymbolExtension = SymbolExtension(rawValue: "face_dashed")
    static let face_dashed_fill: SymbolExtension = SymbolExtension(rawValue: "face_dashed_fill")
    static let face_smiling: SymbolExtension = SymbolExtension(rawValue: "face_smiling")
    static let faxmachine: SymbolExtension = SymbolExtension(rawValue: "faxmachine")
    static let figure_stand: SymbolExtension = SymbolExtension(rawValue: "figure_stand")
    static let figure_stand_line_dotted_figure_stand: SymbolExtension = SymbolExtension(rawValue: "figure_stand_line_dotted_figure_stand")
    static let figure_walk: SymbolExtension = SymbolExtension(rawValue: "figure_walk")
    static let figure_walk_circle: SymbolExtension = SymbolExtension(rawValue: "figure_walk_circle")
    static let figure_walk_circle_fill: SymbolExtension = SymbolExtension(rawValue: "figure_walk_circle_fill")
    static let figure_walk_diamond: SymbolExtension = SymbolExtension(rawValue: "figure_walk_diamond")
    static let figure_walk_diamond_fill: SymbolExtension = SymbolExtension(rawValue: "figure_walk_diamond_fill")
    static let figure_wave: SymbolExtension = SymbolExtension(rawValue: "figure_wave")
    static let figure_wave_circle: SymbolExtension = SymbolExtension(rawValue: "figure_wave_circle")
    static let figure_wave_circle_fill: SymbolExtension = SymbolExtension(rawValue: "figure_wave_circle_fill")
    static let filemenu_and_cursorarrow: SymbolExtension = SymbolExtension(rawValue: "filemenu_and_cursorarrow")
    static let filemenu_and_selection: SymbolExtension = SymbolExtension(rawValue: "filemenu_and_selection")
    static let flag_badge_ellipsis: SymbolExtension = SymbolExtension(rawValue: "flag_badge_ellipsis")
    static let flag_badge_ellipsis_fill: SymbolExtension = SymbolExtension(rawValue: "flag_badge_ellipsis_fill")
    static let flag_slash_circle: SymbolExtension = SymbolExtension(rawValue: "flag_slash_circle")
    static let flag_slash_circle_fill: SymbolExtension = SymbolExtension(rawValue: "flag_slash_circle_fill")
    static let flipphone: SymbolExtension = SymbolExtension(rawValue: "flipphone")
    static let fn: SymbolExtension = SymbolExtension(rawValue: "fn")
    static let folder_badge_questionmark: SymbolExtension = SymbolExtension(rawValue: "folder_badge_questionmark")
    static let folder_fill_badge_questionmark: SymbolExtension = SymbolExtension(rawValue: "folder_fill_badge_questionmark")
    static let forward_frame: SymbolExtension = SymbolExtension(rawValue: "forward_frame")
    static let forward_frame_fill: SymbolExtension = SymbolExtension(rawValue: "forward_frame_fill")
    static let gearshape: SymbolExtension = SymbolExtension(rawValue: "gearshape")
    static let gearshape_2: SymbolExtension = SymbolExtension(rawValue: "gearshape_2")
    static let gearshape_2_fill: SymbolExtension = SymbolExtension(rawValue: "gearshape_2_fill")
    static let gearshape_fill: SymbolExtension = SymbolExtension(rawValue: "gearshape_fill")
    static let gift_circle: SymbolExtension = SymbolExtension(rawValue: "gift_circle")
    static let gift_circle_fill: SymbolExtension = SymbolExtension(rawValue: "gift_circle_fill")
    static let giftcard: SymbolExtension = SymbolExtension(rawValue: "giftcard")
    static let giftcard_fill: SymbolExtension = SymbolExtension(rawValue: "giftcard_fill")
    static let graduationcap: SymbolExtension = SymbolExtension(rawValue: "graduationcap")
    static let graduationcap_fill: SymbolExtension = SymbolExtension(rawValue: "graduationcap_fill")
    static let greetingcard: SymbolExtension = SymbolExtension(rawValue: "greetingcard")
    static let greetingcard_fill: SymbolExtension = SymbolExtension(rawValue: "greetingcard_fill")
    static let guitars_fill: SymbolExtension = SymbolExtension(rawValue: "guitars_fill")
    static let gyroscope: SymbolExtension = SymbolExtension(rawValue: "gyroscope")
    static let h_square_on_square: SymbolExtension = SymbolExtension(rawValue: "h_square_on_square")
    static let hand_point_down: SymbolExtension = SymbolExtension(rawValue: "hand_point_down")
    static let hand_point_down_fill: SymbolExtension = SymbolExtension(rawValue: "hand_point_down_fill")
    static let hand_point_up: SymbolExtension = SymbolExtension(rawValue: "hand_point_up")
    static let hand_point_up_braille: SymbolExtension = SymbolExtension(rawValue: "hand_point_up_braille")
    static let hand_point_up_braille_fill: SymbolExtension = SymbolExtension(rawValue: "hand_point_up_braille_fill")
    static let hand_point_up_fill: SymbolExtension = SymbolExtension(rawValue: "hand_point_up_fill")
    static let hand_point_up_left: SymbolExtension = SymbolExtension(rawValue: "hand_point_up_left")
    static let hand_point_up_left_fill: SymbolExtension = SymbolExtension(rawValue: "hand_point_up_left_fill")
    static let hand_tap: SymbolExtension = SymbolExtension(rawValue: "hand_tap")
    static let hand_tap_fill: SymbolExtension = SymbolExtension(rawValue: "hand_tap_fill")
    static let hand_wave: SymbolExtension = SymbolExtension(rawValue: "hand_wave")
    static let hand_wave_fill: SymbolExtension = SymbolExtension(rawValue: "hand_wave_fill")
    static let hands_clap: SymbolExtension = SymbolExtension(rawValue: "hands_clap")
    static let hands_clap_fill: SymbolExtension = SymbolExtension(rawValue: "hands_clap_fill")
    static let headphones_circle: SymbolExtension = SymbolExtension(rawValue: "headphones_circle")
    static let headphones_circle_fill: SymbolExtension = SymbolExtension(rawValue: "headphones_circle_fill")
    static let heart_text_square: SymbolExtension = SymbolExtension(rawValue: "heart_text_square")
    static let heart_text_square_fill: SymbolExtension = SymbolExtension(rawValue: "heart_text_square_fill")
    static let hifispeaker_2: SymbolExtension = SymbolExtension(rawValue: "hifispeaker_2")
    static let hifispeaker_2_fill: SymbolExtension = SymbolExtension(rawValue: "hifispeaker_2_fill")
    static let hifispeaker_and_homepod: SymbolExtension = SymbolExtension(rawValue: "hifispeaker_and_homepod")
    static let hifispeaker_and_homepod_fill: SymbolExtension = SymbolExtension(rawValue: "hifispeaker_and_homepod_fill")
    static let highlighter: SymbolExtension = SymbolExtension(rawValue: "highlighter")
    static let homekit: SymbolExtension = SymbolExtension(rawValue: "homekit")
    static let homepod: SymbolExtension = SymbolExtension(rawValue: "homepod")
    static let homepod_2: SymbolExtension = SymbolExtension(rawValue: "homepod_2")
    static let homepod_2_fill: SymbolExtension = SymbolExtension(rawValue: "homepod_2_fill")
    static let homepod_fill: SymbolExtension = SymbolExtension(rawValue: "homepod_fill")
    static let hourglass_badge_plus: SymbolExtension = SymbolExtension(rawValue: "hourglass_badge_plus")
    static let house_circle: SymbolExtension = SymbolExtension(rawValue: "house_circle")
    static let house_circle_fill: SymbolExtension = SymbolExtension(rawValue: "house_circle_fill")
    static let infinity: SymbolExtension = SymbolExtension(rawValue: "infinity")
    static let internaldrive: SymbolExtension = SymbolExtension(rawValue: "internaldrive")
    static let internaldrive_fill: SymbolExtension = SymbolExtension(rawValue: "internaldrive_fill")
    static let ipad: SymbolExtension = SymbolExtension(rawValue: "ipad")
    static let ipad_landscape: SymbolExtension = SymbolExtension(rawValue: "ipad_landscape")
    static let iphone: SymbolExtension = SymbolExtension(rawValue: "iphone")
    static let iphone_radiowaves_left_and_right: SymbolExtension = SymbolExtension(rawValue: "iphone_radiowaves_left_and_right")
    static let iphone_slash: SymbolExtension = SymbolExtension(rawValue: "iphone_slash")
    static let ipod: SymbolExtension = SymbolExtension(rawValue: "ipod")
    static let ipodshuffle_gen1: SymbolExtension = SymbolExtension(rawValue: "ipodshuffle_gen1")
    static let ipodshuffle_gen2: SymbolExtension = SymbolExtension(rawValue: "ipodshuffle_gen2")
    static let ipodshuffle_gen3: SymbolExtension = SymbolExtension(rawValue: "ipodshuffle_gen3")
    static let ipodshuffle_gen4: SymbolExtension = SymbolExtension(rawValue: "ipodshuffle_gen4")
    static let ipodtouch: SymbolExtension = SymbolExtension(rawValue: "ipodtouch")
    static let j_square_on_square: SymbolExtension = SymbolExtension(rawValue: "j_square_on_square")
    static let k: SymbolExtension = SymbolExtension(rawValue: "k")
    static let key: SymbolExtension = SymbolExtension(rawValue: "key")
    static let key_fill: SymbolExtension = SymbolExtension(rawValue: "key_fill")
    static let key_icloud: SymbolExtension = SymbolExtension(rawValue: "key_icloud")
    static let key_icloud_fill: SymbolExtension = SymbolExtension(rawValue: "key_icloud_fill")
    static let keyboard_badge_ellipsis: SymbolExtension = SymbolExtension(rawValue: "keyboard_badge_ellipsis")
    static let keyboard_chevron_compact_left: SymbolExtension = SymbolExtension(rawValue: "keyboard_chevron_compact_left")
    static let keyboard_macwindow: SymbolExtension = SymbolExtension(rawValue: "keyboard_macwindow")
    static let keyboard_onehanded_left: SymbolExtension = SymbolExtension(rawValue: "keyboard_onehanded_left")
    static let keyboard_onehanded_right: SymbolExtension = SymbolExtension(rawValue: "keyboard_onehanded_right")
    static let l_joystick: SymbolExtension = SymbolExtension(rawValue: "l_joystick")
    static let l_joystick_fill: SymbolExtension = SymbolExtension(rawValue: "l_joystick_fill")
    static let ladybug: SymbolExtension = SymbolExtension(rawValue: "ladybug")
    static let ladybug_fill: SymbolExtension = SymbolExtension(rawValue: "ladybug_fill")
    static let laptopcomputer: SymbolExtension = SymbolExtension(rawValue: "laptopcomputer")
    static let latch_2_case: SymbolExtension = SymbolExtension(rawValue: "latch_2_case")
    static let latch_2_case_fill: SymbolExtension = SymbolExtension(rawValue: "latch_2_case_fill")
    static let leaf: SymbolExtension = SymbolExtension(rawValue: "leaf")
    static let leaf_arrow_triangle_circlepath: SymbolExtension = SymbolExtension(rawValue: "leaf_arrow_triangle_circlepath")
    static let leaf_fill: SymbolExtension = SymbolExtension(rawValue: "leaf_fill")
    static let level: SymbolExtension = SymbolExtension(rawValue: "level")
    static let level_fill: SymbolExtension = SymbolExtension(rawValue: "level_fill")
    static let lifepreserver: SymbolExtension = SymbolExtension(rawValue: "lifepreserver")
    static let lifepreserver_fill: SymbolExtension = SymbolExtension(rawValue: "lifepreserver_fill")
    static let line_3_crossed_swirl_circle: SymbolExtension = SymbolExtension(rawValue: "line_3_crossed_swirl_circle")
    static let line_3_crossed_swirl_circle_fill: SymbolExtension = SymbolExtension(rawValue: "line_3_crossed_swirl_circle_fill")
    static let line_diagonal: SymbolExtension = SymbolExtension(rawValue: "line_diagonal")
    static let line_diagonal_arrow: SymbolExtension = SymbolExtension(rawValue: "line_diagonal_arrow")
    static let line_horizontal_star_fill_line_horizontal: SymbolExtension = SymbolExtension(rawValue: "line_horizontal_star_fill_line_horizontal")
    static let lineweight: SymbolExtension = SymbolExtension(rawValue: "lineweight")
    static let link_badge_plus: SymbolExtension = SymbolExtension(rawValue: "link_badge_plus")
    static let list_and_film: SymbolExtension = SymbolExtension(rawValue: "list_and_film")
    static let list_bullet_rectangle: SymbolExtension = SymbolExtension(rawValue: "list_bullet_rectangle")
    static let list_star: SymbolExtension = SymbolExtension(rawValue: "list_star")
    static let list_triangle: SymbolExtension = SymbolExtension(rawValue: "list_triangle")
    static let location_fill_viewfinder: SymbolExtension = SymbolExtension(rawValue: "location_fill_viewfinder")
    static let location_viewfinder: SymbolExtension = SymbolExtension(rawValue: "location_viewfinder")
    static let lock_doc: SymbolExtension = SymbolExtension(rawValue: "lock_doc")
    static let lock_doc_fill: SymbolExtension = SymbolExtension(rawValue: "lock_doc_fill")
    static let lock_rectangle: SymbolExtension = SymbolExtension(rawValue: "lock_rectangle")
    static let lock_rectangle_fill: SymbolExtension = SymbolExtension(rawValue: "lock_rectangle_fill")
    static let lock_rectangle_on_rectangle: SymbolExtension = SymbolExtension(rawValue: "lock_rectangle_on_rectangle")
    static let lock_rectangle_on_rectangle_fill: SymbolExtension = SymbolExtension(rawValue: "lock_rectangle_on_rectangle_fill")
    static let lock_rectangle_stack: SymbolExtension = SymbolExtension(rawValue: "lock_rectangle_stack")
    static let lock_rectangle_stack_fill: SymbolExtension = SymbolExtension(rawValue: "lock_rectangle_stack_fill")
    static let lock_square: SymbolExtension = SymbolExtension(rawValue: "lock_square")
    static let lock_square_fill: SymbolExtension = SymbolExtension(rawValue: "lock_square_fill")
    static let lock_square_stack: SymbolExtension = SymbolExtension(rawValue: "lock_square_stack")
    static let lock_square_stack_fill: SymbolExtension = SymbolExtension(rawValue: "lock_square_stack_fill")
    static let loupe: SymbolExtension = SymbolExtension(rawValue: "loupe")
    static let lungs: SymbolExtension = SymbolExtension(rawValue: "lungs")
    static let lungs_fill: SymbolExtension = SymbolExtension(rawValue: "lungs_fill")
    static let macmini: SymbolExtension = SymbolExtension(rawValue: "macmini")
    static let macmini_fill: SymbolExtension = SymbolExtension(rawValue: "macmini_fill")
    static let macpro_gen1: SymbolExtension = SymbolExtension(rawValue: "macpro_gen1")
    static let macpro_gen2: SymbolExtension = SymbolExtension(rawValue: "macpro_gen2")
    static let macpro_gen2_fill: SymbolExtension = SymbolExtension(rawValue: "macpro_gen2_fill")
    static let macpro_gen3: SymbolExtension = SymbolExtension(rawValue: "macpro_gen3")
    static let macpro_gen3_server: SymbolExtension = SymbolExtension(rawValue: "macpro_gen3_server")
    static let macwindow_badge_plus: SymbolExtension = SymbolExtension(rawValue: "macwindow_badge_plus")
    static let macwindow_on_rectangle: SymbolExtension = SymbolExtension(rawValue: "macwindow_on_rectangle")
    static let mail: SymbolExtension = SymbolExtension(rawValue: "mail")
    static let mail_and_text_magnifyingglass: SymbolExtension = SymbolExtension(rawValue: "mail_and_text_magnifyingglass")
    static let mail_fill: SymbolExtension = SymbolExtension(rawValue: "mail_fill")
    static let mail_stack: SymbolExtension = SymbolExtension(rawValue: "mail_stack")
    static let mail_stack_fill: SymbolExtension = SymbolExtension(rawValue: "mail_stack_fill")
    static let megaphone: SymbolExtension = SymbolExtension(rawValue: "megaphone")
    static let megaphone_fill: SymbolExtension = SymbolExtension(rawValue: "megaphone_fill")
    static let memorychip: SymbolExtension = SymbolExtension(rawValue: "memorychip")
    static let menubar_arrow_down_rectangle: SymbolExtension = SymbolExtension(rawValue: "menubar_arrow_down_rectangle")
    static let menubar_arrow_up_rectangle: SymbolExtension = SymbolExtension(rawValue: "menubar_arrow_up_rectangle")
    static let menubar_dock_rectangle: SymbolExtension = SymbolExtension(rawValue: "menubar_dock_rectangle")
    static let menubar_dock_rectangle_badge_record: SymbolExtension = SymbolExtension(rawValue: "menubar_dock_rectangle_badge_record")
    static let menubar_rectangle: SymbolExtension = SymbolExtension(rawValue: "menubar_rectangle")
    static let metronome_fill: SymbolExtension = SymbolExtension(rawValue: "metronome_fill")
    static let minus_diamond: SymbolExtension = SymbolExtension(rawValue: "minus_diamond")
    static let minus_diamond_fill: SymbolExtension = SymbolExtension(rawValue: "minus_diamond_fill")
    static let minus_plus_batteryblock: SymbolExtension = SymbolExtension(rawValue: "minus_plus_batteryblock")
    static let minus_plus_batteryblock_fill: SymbolExtension = SymbolExtension(rawValue: "minus_plus_batteryblock_fill")
    static let minus_rectangle_portrait: SymbolExtension = SymbolExtension(rawValue: "minus_rectangle_portrait")
    static let minus_rectangle_portrait_fill: SymbolExtension = SymbolExtension(rawValue: "minus_rectangle_portrait_fill")
    static let mosaic: SymbolExtension = SymbolExtension(rawValue: "mosaic")
    static let mosaic_fill: SymbolExtension = SymbolExtension(rawValue: "mosaic_fill")
    static let mount: SymbolExtension = SymbolExtension(rawValue: "mount")
    static let mount_fill: SymbolExtension = SymbolExtension(rawValue: "mount_fill")
    static let mouth: SymbolExtension = SymbolExtension(rawValue: "mouth")
    static let mouth_fill: SymbolExtension = SymbolExtension(rawValue: "mouth_fill")
    static let move_3d: SymbolExtension = SymbolExtension(rawValue: "move_3d")
    static let music_note_house: SymbolExtension = SymbolExtension(rawValue: "music_note_house")
    static let music_note_house_fill: SymbolExtension = SymbolExtension(rawValue: "music_note_house_fill")
    static let music_quarternote_3: SymbolExtension = SymbolExtension(rawValue: "music_quarternote_3")
    static let mustache: SymbolExtension = SymbolExtension(rawValue: "mustache")
    static let mustache_fill: SymbolExtension = SymbolExtension(rawValue: "mustache_fill")
    static let network: SymbolExtension = SymbolExtension(rawValue: "network")
    static let newspaper: SymbolExtension = SymbolExtension(rawValue: "newspaper")
    static let newspaper_fill: SymbolExtension = SymbolExtension(rawValue: "newspaper_fill")
    static let nose: SymbolExtension = SymbolExtension(rawValue: "nose")
    static let nose_fill: SymbolExtension = SymbolExtension(rawValue: "nose_fill")
    static let note: SymbolExtension = SymbolExtension(rawValue: "note")
    static let note_text: SymbolExtension = SymbolExtension(rawValue: "note_text")
    static let note_text_badge_plus: SymbolExtension = SymbolExtension(rawValue: "note_text_badge_plus")
    static let octagon: SymbolExtension = SymbolExtension(rawValue: "octagon")
    static let octagon_fill: SymbolExtension = SymbolExtension(rawValue: "octagon_fill")
    static let opticaldisc: SymbolExtension = SymbolExtension(rawValue: "opticaldisc")
    static let opticaldiscdrive: SymbolExtension = SymbolExtension(rawValue: "opticaldiscdrive")
    static let opticaldiscdrive_fill: SymbolExtension = SymbolExtension(rawValue: "opticaldiscdrive_fill")
    static let oval: SymbolExtension = SymbolExtension(rawValue: "oval")
    static let oval_fill: SymbolExtension = SymbolExtension(rawValue: "oval_fill")
    static let oval_portrait: SymbolExtension = SymbolExtension(rawValue: "oval_portrait")
    static let oval_portrait_fill: SymbolExtension = SymbolExtension(rawValue: "oval_portrait_fill")
    static let paintbrush_pointed: SymbolExtension = SymbolExtension(rawValue: "paintbrush_pointed")
    static let paintbrush_pointed_fill: SymbolExtension = SymbolExtension(rawValue: "paintbrush_pointed_fill")
    static let paintpalette: SymbolExtension = SymbolExtension(rawValue: "paintpalette")
    static let paintpalette_fill: SymbolExtension = SymbolExtension(rawValue: "paintpalette_fill")
    static let paperclip_badge_ellipsis: SymbolExtension = SymbolExtension(rawValue: "paperclip_badge_ellipsis")
    static let paperplane_circle: SymbolExtension = SymbolExtension(rawValue: "paperplane_circle")
    static let paperplane_circle_fill: SymbolExtension = SymbolExtension(rawValue: "paperplane_circle_fill")
    static let paragraphsign: SymbolExtension = SymbolExtension(rawValue: "paragraphsign")
    static let pc: SymbolExtension = SymbolExtension(rawValue: "pc")
    static let pencil_tip_crop_circle_badge_arrow_forward: SymbolExtension = SymbolExtension(rawValue: "pencil_tip_crop_circle_badge_arrow_forward")
    static let person_2_circle: SymbolExtension = SymbolExtension(rawValue: "person_2_circle")
    static let person_2_circle_fill: SymbolExtension = SymbolExtension(rawValue: "person_2_circle_fill")
    static let person_and_arrow_left_and_arrow_right: SymbolExtension = SymbolExtension(rawValue: "person_and_arrow_left_and_arrow_right")
    static let person_crop_circle_badge_exclamationmark: SymbolExtension = SymbolExtension(rawValue: "person_crop_circle_badge_exclamationmark")
    static let person_crop_circle_badge_questionmark: SymbolExtension = SymbolExtension(rawValue: "person_crop_circle_badge_questionmark")
    static let person_fill_and_arrow_left_and_arrow_right: SymbolExtension = SymbolExtension(rawValue: "person_fill_and_arrow_left_and_arrow_right")
    static let person_fill_badge_minus: SymbolExtension = SymbolExtension(rawValue: "person_fill_badge_minus")
    static let person_fill_badge_plus: SymbolExtension = SymbolExtension(rawValue: "person_fill_badge_plus")
    static let person_fill_checkmark: SymbolExtension = SymbolExtension(rawValue: "person_fill_checkmark")
    static let person_fill_questionmark: SymbolExtension = SymbolExtension(rawValue: "person_fill_questionmark")
    static let person_fill_turn_down: SymbolExtension = SymbolExtension(rawValue: "person_fill_turn_down")
    static let person_fill_turn_left: SymbolExtension = SymbolExtension(rawValue: "person_fill_turn_left")
    static let person_fill_turn_right: SymbolExtension = SymbolExtension(rawValue: "person_fill_turn_right")
    static let person_fill_viewfinder: SymbolExtension = SymbolExtension(rawValue: "person_fill_viewfinder")
    static let person_fill_xmark: SymbolExtension = SymbolExtension(rawValue: "person_fill_xmark")
    static let phone_connection: SymbolExtension = SymbolExtension(rawValue: "phone_connection")
    static let photo_on_rectangle_angled: SymbolExtension = SymbolExtension(rawValue: "photo_on_rectangle_angled")
    static let pianokeys: SymbolExtension = SymbolExtension(rawValue: "pianokeys")
    static let pianokeys_inverse: SymbolExtension = SymbolExtension(rawValue: "pianokeys_inverse")
    static let pills: SymbolExtension = SymbolExtension(rawValue: "pills")
    static let pills_fill: SymbolExtension = SymbolExtension(rawValue: "pills_fill")
    static let pip: SymbolExtension = SymbolExtension(rawValue: "pip")
    static let pip_enter: SymbolExtension = SymbolExtension(rawValue: "pip_enter")
    static let pip_exit: SymbolExtension = SymbolExtension(rawValue: "pip_exit")
    static let pip_fill: SymbolExtension = SymbolExtension(rawValue: "pip_fill")
    static let pip_remove: SymbolExtension = SymbolExtension(rawValue: "pip_remove")
    static let pip_swap: SymbolExtension = SymbolExtension(rawValue: "pip_swap")
    static let placeholdertext_fill: SymbolExtension = SymbolExtension(rawValue: "placeholdertext_fill")
    static let play_slash: SymbolExtension = SymbolExtension(rawValue: "play_slash")
    static let play_slash_fill: SymbolExtension = SymbolExtension(rawValue: "play_slash_fill")
    static let plus_diamond: SymbolExtension = SymbolExtension(rawValue: "plus_diamond")
    static let plus_diamond_fill: SymbolExtension = SymbolExtension(rawValue: "plus_diamond_fill")
    static let plus_message: SymbolExtension = SymbolExtension(rawValue: "plus_message")
    static let plus_message_fill: SymbolExtension = SymbolExtension(rawValue: "plus_message_fill")
    static let plus_rectangle_on_folder: SymbolExtension = SymbolExtension(rawValue: "plus_rectangle_on_folder")
    static let plus_rectangle_portrait: SymbolExtension = SymbolExtension(rawValue: "plus_rectangle_portrait")
    static let plus_rectangle_portrait_fill: SymbolExtension = SymbolExtension(rawValue: "plus_rectangle_portrait_fill")
    static let plus_viewfinder: SymbolExtension = SymbolExtension(rawValue: "plus_viewfinder")
    static let poweroff: SymbolExtension = SymbolExtension(rawValue: "poweroff")
    static let poweron: SymbolExtension = SymbolExtension(rawValue: "poweron")
    static let powersleep: SymbolExtension = SymbolExtension(rawValue: "powersleep")
    static let printer_dotmatrix: SymbolExtension = SymbolExtension(rawValue: "printer_dotmatrix")
    static let printer_dotmatrix_fill: SymbolExtension = SymbolExtension(rawValue: "printer_dotmatrix_fill")
    static let puzzlepiece: SymbolExtension = SymbolExtension(rawValue: "puzzlepiece")
    static let puzzlepiece_fill: SymbolExtension = SymbolExtension(rawValue: "puzzlepiece_fill")
    static let pyramid: SymbolExtension = SymbolExtension(rawValue: "pyramid")
    static let pyramid_fill: SymbolExtension = SymbolExtension(rawValue: "pyramid_fill")
    static let questionmark_folder: SymbolExtension = SymbolExtension(rawValue: "questionmark_folder")
    static let questionmark_folder_fill: SymbolExtension = SymbolExtension(rawValue: "questionmark_folder_fill")
    static let questionmark_square_dashed: SymbolExtension = SymbolExtension(rawValue: "questionmark_square_dashed")
    static let r_joystick: SymbolExtension = SymbolExtension(rawValue: "r_joystick")
    static let r_joystick_fill: SymbolExtension = SymbolExtension(rawValue: "r_joystick_fill")
    static let r_square_on_square: SymbolExtension = SymbolExtension(rawValue: "r_square_on_square")
    static let radio: SymbolExtension = SymbolExtension(rawValue: "radio")
    static let radio_fill: SymbolExtension = SymbolExtension(rawValue: "radio_fill")
    static let record_circle: SymbolExtension = SymbolExtension(rawValue: "record_circle")
    static let record_circle_fill: SymbolExtension = SymbolExtension(rawValue: "record_circle_fill")
    static let rectangle_and_pencil_and_ellipsis: SymbolExtension = SymbolExtension(rawValue: "rectangle_and_pencil_and_ellipsis")
    static let rectangle_and_text_magnifyingglass: SymbolExtension = SymbolExtension(rawValue: "rectangle_and_text_magnifyingglass")
    static let rectangle_arrowtriangle_2_inward: SymbolExtension = SymbolExtension(rawValue: "rectangle_arrowtriangle_2_inward")
    static let rectangle_arrowtriangle_2_outward: SymbolExtension = SymbolExtension(rawValue: "rectangle_arrowtriangle_2_outward")
    static let rectangle_badge_minus: SymbolExtension = SymbolExtension(rawValue: "rectangle_badge_minus")
    static let rectangle_badge_plus: SymbolExtension = SymbolExtension(rawValue: "rectangle_badge_plus")
    static let rectangle_connected_to_line_below: SymbolExtension = SymbolExtension(rawValue: "rectangle_connected_to_line_below")
    static let rectangle_dashed: SymbolExtension = SymbolExtension(rawValue: "rectangle_dashed")
    static let rectangle_dashed_and_paperclip: SymbolExtension = SymbolExtension(rawValue: "rectangle_dashed_and_paperclip")
    static let rectangle_dashed_badge_record: SymbolExtension = SymbolExtension(rawValue: "rectangle_dashed_badge_record")
    static let rectangle_fill_badge_minus: SymbolExtension = SymbolExtension(rawValue: "rectangle_fill_badge_minus")
    static let rectangle_fill_badge_plus: SymbolExtension = SymbolExtension(rawValue: "rectangle_fill_badge_plus")
    static let rectangle_on_rectangle_slash: SymbolExtension = SymbolExtension(rawValue: "rectangle_on_rectangle_slash")
    static let rectangle_portrait: SymbolExtension = SymbolExtension(rawValue: "rectangle_portrait")
    static let rectangle_portrait_arrowtriangle_2_inward: SymbolExtension = SymbolExtension(rawValue: "rectangle_portrait_arrowtriangle_2_inward")
    static let rectangle_portrait_arrowtriangle_2_outward: SymbolExtension = SymbolExtension(rawValue: "rectangle_portrait_arrowtriangle_2_outward")
    static let rectangle_portrait_fill: SymbolExtension = SymbolExtension(rawValue: "rectangle_portrait_fill")
    static let rectangle_slash: SymbolExtension = SymbolExtension(rawValue: "rectangle_slash")
    static let rectangle_slash_fill: SymbolExtension = SymbolExtension(rawValue: "rectangle_slash_fill")
    static let rectangle_split_1x2: SymbolExtension = SymbolExtension(rawValue: "rectangle_split_1x2")
    static let rectangle_split_1x2_fill: SymbolExtension = SymbolExtension(rawValue: "rectangle_split_1x2_fill")
    static let rectangle_split_2x1: SymbolExtension = SymbolExtension(rawValue: "rectangle_split_2x1")
    static let rectangle_split_2x1_fill: SymbolExtension = SymbolExtension(rawValue: "rectangle_split_2x1_fill")
    static let rectangle_split_2x2: SymbolExtension = SymbolExtension(rawValue: "rectangle_split_2x2")
    static let rectangle_split_2x2_fill: SymbolExtension = SymbolExtension(rawValue: "rectangle_split_2x2_fill")
    static let restart: SymbolExtension = SymbolExtension(rawValue: "restart")
    static let restart_circle: SymbolExtension = SymbolExtension(rawValue: "restart_circle")
    static let rotate_3d: SymbolExtension = SymbolExtension(rawValue: "rotate_3d")
    static let ruler: SymbolExtension = SymbolExtension(rawValue: "ruler")
    static let ruler_fill: SymbolExtension = SymbolExtension(rawValue: "ruler_fill")
    static let scale_3d: SymbolExtension = SymbolExtension(rawValue: "scale_3d")
    static let scalemass: SymbolExtension = SymbolExtension(rawValue: "scalemass")
    static let scalemass_fill: SymbolExtension = SymbolExtension(rawValue: "scalemass_fill")
    static let scanner: SymbolExtension = SymbolExtension(rawValue: "scanner")
    static let scanner_fill: SymbolExtension = SymbolExtension(rawValue: "scanner_fill")
    static let scribble_variable: SymbolExtension = SymbolExtension(rawValue: "scribble_variable")
    static let scroll: SymbolExtension = SymbolExtension(rawValue: "scroll")
    static let scroll_fill: SymbolExtension = SymbolExtension(rawValue: "scroll_fill")
    static let sdcard: SymbolExtension = SymbolExtension(rawValue: "sdcard")
    static let sdcard_fill: SymbolExtension = SymbolExtension(rawValue: "sdcard_fill")
    static let seal: SymbolExtension = SymbolExtension(rawValue: "seal")
    static let seal_fill: SymbolExtension = SymbolExtension(rawValue: "seal_fill")
    static let server_rack: SymbolExtension = SymbolExtension(rawValue: "server_rack")
    static let shadow: SymbolExtension = SymbolExtension(rawValue: "shadow")
    static let shekelsign_circle: SymbolExtension = SymbolExtension(rawValue: "shekelsign_circle")
    static let shekelsign_circle_fill: SymbolExtension = SymbolExtension(rawValue: "shekelsign_circle_fill")
    static let shekelsign_square: SymbolExtension = SymbolExtension(rawValue: "shekelsign_square")
    static let shekelsign_square_fill: SymbolExtension = SymbolExtension(rawValue: "shekelsign_square_fill")
    static let shippingbox: SymbolExtension = SymbolExtension(rawValue: "shippingbox")
    static let shippingbox_fill: SymbolExtension = SymbolExtension(rawValue: "shippingbox_fill")
    static let sidebar_leading: SymbolExtension = SymbolExtension(rawValue: "sidebar_leading")
    static let sidebar_squares_leading: SymbolExtension = SymbolExtension(rawValue: "sidebar_squares_leading")
    static let sidebar_squares_left: SymbolExtension = SymbolExtension(rawValue: "sidebar_squares_left")
    static let sidebar_squares_right: SymbolExtension = SymbolExtension(rawValue: "sidebar_squares_right")
    static let sidebar_squares_trailing: SymbolExtension = SymbolExtension(rawValue: "sidebar_squares_trailing")
    static let sidebar_trailing: SymbolExtension = SymbolExtension(rawValue: "sidebar_trailing")
    static let signpost_left: SymbolExtension = SymbolExtension(rawValue: "signpost_left")
    static let signpost_left_fill: SymbolExtension = SymbolExtension(rawValue: "signpost_left_fill")
    static let signpost_right: SymbolExtension = SymbolExtension(rawValue: "signpost_right")
    static let signpost_right_fill: SymbolExtension = SymbolExtension(rawValue: "signpost_right_fill")
    static let simcard: SymbolExtension = SymbolExtension(rawValue: "simcard")
    static let simcard_2: SymbolExtension = SymbolExtension(rawValue: "simcard_2")
    static let simcard_2_fill: SymbolExtension = SymbolExtension(rawValue: "simcard_2_fill")
    static let simcard_fill: SymbolExtension = SymbolExtension(rawValue: "simcard_fill")
    static let sleep: SymbolExtension = SymbolExtension(rawValue: "sleep")
    static let slider_vertical_3: SymbolExtension = SymbolExtension(rawValue: "slider_vertical_3")
    static let sparkle: SymbolExtension = SymbolExtension(rawValue: "sparkle")
    static let sparkles_rectangle_stack: SymbolExtension = SymbolExtension(rawValue: "sparkles_rectangle_stack")
    static let sparkles_rectangle_stack_fill: SymbolExtension = SymbolExtension(rawValue: "sparkles_rectangle_stack_fill")
    static let speaker_slash_circle: SymbolExtension = SymbolExtension(rawValue: "speaker_slash_circle")
    static let speaker_slash_circle_fill: SymbolExtension = SymbolExtension(rawValue: "speaker_slash_circle_fill")
    static let speaker_wave_1: SymbolExtension = SymbolExtension(rawValue: "speaker_wave_1")
    static let speaker_wave_1_fill: SymbolExtension = SymbolExtension(rawValue: "speaker_wave_1_fill")
    static let speaker_wave_2: SymbolExtension = SymbolExtension(rawValue: "speaker_wave_2")
    static let speaker_wave_2_circle: SymbolExtension = SymbolExtension(rawValue: "speaker_wave_2_circle")
    static let speaker_wave_2_circle_fill: SymbolExtension = SymbolExtension(rawValue: "speaker_wave_2_circle_fill")
    static let speaker_wave_2_fill: SymbolExtension = SymbolExtension(rawValue: "speaker_wave_2_fill")
    static let speaker_wave_3: SymbolExtension = SymbolExtension(rawValue: "speaker_wave_3")
    static let speaker_wave_3_fill: SymbolExtension = SymbolExtension(rawValue: "speaker_wave_3_fill")
    static let square_and_at_rectangle: SymbolExtension = SymbolExtension(rawValue: "square_and_at_rectangle")
    static let square_circle: SymbolExtension = SymbolExtension(rawValue: "square_circle")
    static let square_circle_fill: SymbolExtension = SymbolExtension(rawValue: "square_circle_fill")
    static let square_dashed: SymbolExtension = SymbolExtension(rawValue: "square_dashed")
    static let square_fill_text_grid_1x2: SymbolExtension = SymbolExtension(rawValue: "square_fill_text_grid_1x2")
    static let square_grid_3x1_below_line_grid_1x2: SymbolExtension = SymbolExtension(rawValue: "square_grid_3x1_below_line_grid_1x2")
    static let square_grid_3x1_folder_badge_plus: SymbolExtension = SymbolExtension(rawValue: "square_grid_3x1_folder_badge_plus")
    static let square_grid_3x1_folder_fill_badge_plus: SymbolExtension = SymbolExtension(rawValue: "square_grid_3x1_folder_fill_badge_plus")
    static let square_grid_3x3: SymbolExtension = SymbolExtension(rawValue: "square_grid_3x3")
    static let square_grid_3x3_fill: SymbolExtension = SymbolExtension(rawValue: "square_grid_3x3_fill")
    static let square_on_square_dashed: SymbolExtension = SymbolExtension(rawValue: "square_on_square_dashed")
    static let square_on_square_squareshape_controlhandles: SymbolExtension = SymbolExtension(rawValue: "square_on_square_squareshape_controlhandles")
    static let square_slash: SymbolExtension = SymbolExtension(rawValue: "square_slash")
    static let square_slash_fill: SymbolExtension = SymbolExtension(rawValue: "square_slash_fill")
    static let square_split_bottomrightquarter: SymbolExtension = SymbolExtension(rawValue: "square_split_bottomrightquarter")
    static let square_split_bottomrightquarter_fill: SymbolExtension = SymbolExtension(rawValue: "square_split_bottomrightquarter_fill")
    static let square_split_diagonal: SymbolExtension = SymbolExtension(rawValue: "square_split_diagonal")
    static let square_split_diagonal_2x2: SymbolExtension = SymbolExtension(rawValue: "square_split_diagonal_2x2")
    static let square_split_diagonal_2x2_fill: SymbolExtension = SymbolExtension(rawValue: "square_split_diagonal_2x2_fill")
    static let square_split_diagonal_fill: SymbolExtension = SymbolExtension(rawValue: "square_split_diagonal_fill")
    static let square_stack_3d_down_forward: SymbolExtension = SymbolExtension(rawValue: "square_stack_3d_down_forward")
    static let square_stack_3d_down_forward_fill: SymbolExtension = SymbolExtension(rawValue: "square_stack_3d_down_forward_fill")
    static let square_stack_3d_forward_dottedline: SymbolExtension = SymbolExtension(rawValue: "square_stack_3d_forward_dottedline")
    static let square_stack_3d_forward_dottedline_fill: SymbolExtension = SymbolExtension(rawValue: "square_stack_3d_forward_dottedline_fill")
    static let squareshape: SymbolExtension = SymbolExtension(rawValue: "squareshape")
    static let squareshape_controlhandles_on_squareshape_controlhandles: SymbolExtension = SymbolExtension(rawValue: "squareshape_controlhandles_on_squareshape_controlhandles")
    static let squareshape_fill: SymbolExtension = SymbolExtension(rawValue: "squareshape_fill")
    static let squareshape_split_2x2: SymbolExtension = SymbolExtension(rawValue: "squareshape_split_2x2")
    static let squareshape_split_2x2_dotted: SymbolExtension = SymbolExtension(rawValue: "squareshape_split_2x2_dotted")
    static let squareshape_split_3x3: SymbolExtension = SymbolExtension(rawValue: "squareshape_split_3x3")
    static let star_square: SymbolExtension = SymbolExtension(rawValue: "star_square")
    static let star_square_fill: SymbolExtension = SymbolExtension(rawValue: "star_square_fill")
    static let staroflife_circle: SymbolExtension = SymbolExtension(rawValue: "staroflife_circle")
    static let staroflife_circle_fill: SymbolExtension = SymbolExtension(rawValue: "staroflife_circle_fill")
    static let stethoscope: SymbolExtension = SymbolExtension(rawValue: "stethoscope")
    static let swift: SymbolExtension = SymbolExtension(rawValue: "swift")
    static let switch_2: SymbolExtension = SymbolExtension(rawValue: "switch_2")
    static let tablecells: SymbolExtension = SymbolExtension(rawValue: "tablecells")
    static let tablecells_badge_ellipsis: SymbolExtension = SymbolExtension(rawValue: "tablecells_badge_ellipsis")
    static let tablecells_fill: SymbolExtension = SymbolExtension(rawValue: "tablecells_fill")
    static let tag_slash: SymbolExtension = SymbolExtension(rawValue: "tag_slash")
    static let tag_slash_fill: SymbolExtension = SymbolExtension(rawValue: "tag_slash_fill")
    static let target: SymbolExtension = SymbolExtension(rawValue: "target")
    static let teletype_circle: SymbolExtension = SymbolExtension(rawValue: "teletype_circle")
    static let teletype_circle_fill: SymbolExtension = SymbolExtension(rawValue: "teletype_circle_fill")
    static let text_and_command_macwindow: SymbolExtension = SymbolExtension(rawValue: "text_and_command_macwindow")
    static let text_below_photo: SymbolExtension = SymbolExtension(rawValue: "text_below_photo")
    static let text_below_photo_fill: SymbolExtension = SymbolExtension(rawValue: "text_below_photo_fill")
    static let text_book_closed: SymbolExtension = SymbolExtension(rawValue: "text_book_closed")
    static let text_book_closed_fill: SymbolExtension = SymbolExtension(rawValue: "text_book_closed_fill")
    static let text_magnifyingglass: SymbolExtension = SymbolExtension(rawValue: "text_magnifyingglass")
    static let text_redaction: SymbolExtension = SymbolExtension(rawValue: "text_redaction")
    static let thermometer_sun_fill: SymbolExtension = SymbolExtension(rawValue: "thermometer_sun_fill")
    static let ticket: SymbolExtension = SymbolExtension(rawValue: "ticket")
    static let ticket_fill: SymbolExtension = SymbolExtension(rawValue: "ticket_fill")
    static let timeline_selection: SymbolExtension = SymbolExtension(rawValue: "timeline_selection")
    static let timer_square: SymbolExtension = SymbolExtension(rawValue: "timer_square")
    static let togglepower: SymbolExtension = SymbolExtension(rawValue: "togglepower")
    static let touchid: SymbolExtension = SymbolExtension(rawValue: "touchid")
    static let tram: SymbolExtension = SymbolExtension(rawValue: "tram")
    static let tram_circle: SymbolExtension = SymbolExtension(rawValue: "tram_circle")
    static let tram_circle_fill: SymbolExtension = SymbolExtension(rawValue: "tram_circle_fill")
    static let tray_circle: SymbolExtension = SymbolExtension(rawValue: "tray_circle")
    static let tray_circle_fill: SymbolExtension = SymbolExtension(rawValue: "tray_circle_fill")
    static let triangle_circle: SymbolExtension = SymbolExtension(rawValue: "triangle_circle")
    static let triangle_circle_fill: SymbolExtension = SymbolExtension(rawValue: "triangle_circle_fill")
    static let tv_and_hifispeaker_fill: SymbolExtension = SymbolExtension(rawValue: "tv_and_hifispeaker_fill")
    static let video_badge_checkmark: SymbolExtension = SymbolExtension(rawValue: "video_badge_checkmark")
    static let video_fill_badge_checkmark: SymbolExtension = SymbolExtension(rawValue: "video_fill_badge_checkmark")
    static let video_fill_badge_plus: SymbolExtension = SymbolExtension(rawValue: "video_fill_badge_plus")
    static let wake: SymbolExtension = SymbolExtension(rawValue: "wake")
    static let wallet_pass: SymbolExtension = SymbolExtension(rawValue: "wallet_pass")
    static let wallet_pass_fill: SymbolExtension = SymbolExtension(rawValue: "wallet_pass_fill")
    static let wave_3_backward: SymbolExtension = SymbolExtension(rawValue: "wave_3_backward")
    static let wave_3_backward_circle: SymbolExtension = SymbolExtension(rawValue: "wave_3_backward_circle")
    static let wave_3_backward_circle_fill: SymbolExtension = SymbolExtension(rawValue: "wave_3_backward_circle_fill")
    static let wave_3_forward: SymbolExtension = SymbolExtension(rawValue: "wave_3_forward")
    static let wave_3_forward_circle: SymbolExtension = SymbolExtension(rawValue: "wave_3_forward_circle")
    static let wave_3_forward_circle_fill: SymbolExtension = SymbolExtension(rawValue: "wave_3_forward_circle_fill")
    static let wave_3_left: SymbolExtension = SymbolExtension(rawValue: "wave_3_left")
    static let wave_3_left_circle: SymbolExtension = SymbolExtension(rawValue: "wave_3_left_circle")
    static let wave_3_left_circle_fill: SymbolExtension = SymbolExtension(rawValue: "wave_3_left_circle_fill")
    static let wave_3_right: SymbolExtension = SymbolExtension(rawValue: "wave_3_right")
    static let wave_3_right_circle: SymbolExtension = SymbolExtension(rawValue: "wave_3_right_circle")
    static let wave_3_right_circle_fill: SymbolExtension = SymbolExtension(rawValue: "wave_3_right_circle_fill")
    static let waveform_path_ecg_rectangle: SymbolExtension = SymbolExtension(rawValue: "waveform_path_ecg_rectangle")
    static let waveform_path_ecg_rectangle_fill: SymbolExtension = SymbolExtension(rawValue: "waveform_path_ecg_rectangle_fill")
    static let wrench_and_screwdriver: SymbolExtension = SymbolExtension(rawValue: "wrench_and_screwdriver")
    static let wrench_and_screwdriver_fill: SymbolExtension = SymbolExtension(rawValue: "wrench_and_screwdriver_fill")
    static let xmark_bin: SymbolExtension = SymbolExtension(rawValue: "xmark_bin")
    static let xmark_bin_circle: SymbolExtension = SymbolExtension(rawValue: "xmark_bin_circle")
    static let xmark_bin_circle_fill: SymbolExtension = SymbolExtension(rawValue: "xmark_bin_circle_fill")
    static let xmark_bin_fill: SymbolExtension = SymbolExtension(rawValue: "xmark_bin_fill")
    static let xmark_diamond: SymbolExtension = SymbolExtension(rawValue: "xmark_diamond")
    static let xmark_diamond_fill: SymbolExtension = SymbolExtension(rawValue: "xmark_diamond_fill")
    static let xmark_rectangle_portrait: SymbolExtension = SymbolExtension(rawValue: "xmark_rectangle_portrait")
    static let xmark_rectangle_portrait_fill: SymbolExtension = SymbolExtension(rawValue: "xmark_rectangle_portrait_fill")
    static let xserve: SymbolExtension = SymbolExtension(rawValue: "xserve")
}
