//
//  SymbolExtension+16.0.swift
//  Symbol
//
//  Created by otake on 2025/05/05.
//

import Foundation

@available(iOS 16.0, macOS 13.0, *)
public extension SymbolExtension {
    static let abs_brakesignal: SymbolExtension = SymbolExtension(rawValue: "abs_brakesignal")
    static let air_conditioner_horizontal: SymbolExtension = SymbolExtension(rawValue: "air_conditioner_horizontal")
    static let air_conditioner_horizontal_fill: SymbolExtension = SymbolExtension(rawValue: "air_conditioner_horizontal_fill")
    static let air_conditioner_vertical: SymbolExtension = SymbolExtension(rawValue: "air_conditioner_vertical")
    static let air_conditioner_vertical_fill: SymbolExtension = SymbolExtension(rawValue: "air_conditioner_vertical_fill")
    static let air_purifier: SymbolExtension = SymbolExtension(rawValue: "air_purifier")
    static let air_purifier_fill: SymbolExtension = SymbolExtension(rawValue: "air_purifier_fill")
    static let alarm_waves_left_and_right: SymbolExtension = SymbolExtension(rawValue: "alarm_waves_left_and_right")
    static let alarm_waves_left_and_right_fill: SymbolExtension = SymbolExtension(rawValue: "alarm_waves_left_and_right_fill")
    static let allergens_fill: SymbolExtension = SymbolExtension(rawValue: "allergens_fill")
    static let angle: SymbolExtension = SymbolExtension(rawValue: "angle")
    static let apple_logo: SymbolExtension = SymbolExtension(rawValue: "apple_logo")
    static let arrow_down_and_line_horizontal_and_arrow_up: SymbolExtension = SymbolExtension(rawValue: "arrow_down_and_line_horizontal_and_arrow_up")
    static let arrow_down_message: SymbolExtension = SymbolExtension(rawValue: "arrow_down_message")
    static let arrow_down_message_fill: SymbolExtension = SymbolExtension(rawValue: "arrow_down_message_fill")
    static let arrow_left_and_line_vertical_and_arrow_right: SymbolExtension = SymbolExtension(rawValue: "arrow_left_and_line_vertical_and_arrow_right")
    static let arrow_left_and_right_text_vertical: SymbolExtension = SymbolExtension(rawValue: "arrow_left_and_right_text_vertical")
    static let arrow_right_and_line_vertical_and_arrow_left: SymbolExtension = SymbolExtension(rawValue: "arrow_right_and_line_vertical_and_arrow_left")
    static let arrow_up_and_down_and_sparkles: SymbolExtension = SymbolExtension(rawValue: "arrow_up_and_down_and_sparkles")
    static let arrow_up_and_down_text_horizontal: SymbolExtension = SymbolExtension(rawValue: "arrow_up_and_down_text_horizontal")
    static let arrow_up_and_line_horizontal_and_arrow_down: SymbolExtension = SymbolExtension(rawValue: "arrow_up_and_line_horizontal_and_arrow_down")
    static let arrow_up_circle_badge_clock: SymbolExtension = SymbolExtension(rawValue: "arrow_up_circle_badge_clock")
    static let arrowshape_backward: SymbolExtension = SymbolExtension(rawValue: "arrowshape_backward")
    static let arrowshape_backward_fill: SymbolExtension = SymbolExtension(rawValue: "arrowshape_backward_fill")
    static let arrowshape_forward: SymbolExtension = SymbolExtension(rawValue: "arrowshape_forward")
    static let arrowshape_forward_fill: SymbolExtension = SymbolExtension(rawValue: "arrowshape_forward_fill")
    static let arrowshape_left: SymbolExtension = SymbolExtension(rawValue: "arrowshape_left")
    static let arrowshape_left_fill: SymbolExtension = SymbolExtension(rawValue: "arrowshape_left_fill")
    static let arrowshape_right: SymbolExtension = SymbolExtension(rawValue: "arrowshape_right")
    static let arrowshape_right_fill: SymbolExtension = SymbolExtension(rawValue: "arrowshape_right_fill")
    static let arrowshape_turn_up_backward_badge_clock: SymbolExtension = SymbolExtension(rawValue: "arrowshape_turn_up_backward_badge_clock")
    static let arrowshape_turn_up_backward_badge_clock_fill: SymbolExtension = SymbolExtension(rawValue: "arrowshape_turn_up_backward_badge_clock_fill")
    static let australsign: SymbolExtension = SymbolExtension(rawValue: "australsign")
    static let av_remote: SymbolExtension = SymbolExtension(rawValue: "av_remote")
    static let av_remote_fill: SymbolExtension = SymbolExtension(rawValue: "av_remote_fill")
    static let backpack: SymbolExtension = SymbolExtension(rawValue: "backpack")
    static let backpack_fill: SymbolExtension = SymbolExtension(rawValue: "backpack_fill")
    static let backward_end_circle: SymbolExtension = SymbolExtension(rawValue: "backward_end_circle")
    static let backward_end_circle_fill: SymbolExtension = SymbolExtension(rawValue: "backward_end_circle_fill")
    static let bag_badge_questionmark: SymbolExtension = SymbolExtension(rawValue: "bag_badge_questionmark")
    static let bag_fill_badge_questionmark: SymbolExtension = SymbolExtension(rawValue: "bag_fill_badge_questionmark")
    static let bahtsign: SymbolExtension = SymbolExtension(rawValue: "bahtsign")
    static let balloon: SymbolExtension = SymbolExtension(rawValue: "balloon")
    static let balloon_2: SymbolExtension = SymbolExtension(rawValue: "balloon_2")
    static let balloon_2_fill: SymbolExtension = SymbolExtension(rawValue: "balloon_2_fill")
    static let balloon_fill: SymbolExtension = SymbolExtension(rawValue: "balloon_fill")
    static let baseball: SymbolExtension = SymbolExtension(rawValue: "baseball")
    static let baseball_circle: SymbolExtension = SymbolExtension(rawValue: "baseball_circle")
    static let baseball_circle_fill: SymbolExtension = SymbolExtension(rawValue: "baseball_circle_fill")
    static let baseball_diamond_bases: SymbolExtension = SymbolExtension(rawValue: "baseball_diamond_bases")
    static let baseball_fill: SymbolExtension = SymbolExtension(rawValue: "baseball_fill")
    static let basket: SymbolExtension = SymbolExtension(rawValue: "basket")
    static let basket_fill: SymbolExtension = SymbolExtension(rawValue: "basket_fill")
    static let basketball: SymbolExtension = SymbolExtension(rawValue: "basketball")
    static let basketball_circle: SymbolExtension = SymbolExtension(rawValue: "basketball_circle")
    static let basketball_circle_fill: SymbolExtension = SymbolExtension(rawValue: "basketball_circle_fill")
    static let basketball_fill: SymbolExtension = SymbolExtension(rawValue: "basketball_fill")
    static let bathtub: SymbolExtension = SymbolExtension(rawValue: "bathtub")
    static let bathtub_fill: SymbolExtension = SymbolExtension(rawValue: "bathtub_fill")
    static let beach_umbrella: SymbolExtension = SymbolExtension(rawValue: "beach_umbrella")
    static let beach_umbrella_fill: SymbolExtension = SymbolExtension(rawValue: "beach_umbrella_fill")
    static let bell_and_waves_left_and_right: SymbolExtension = SymbolExtension(rawValue: "bell_and_waves_left_and_right")
    static let bell_and_waves_left_and_right_fill: SymbolExtension = SymbolExtension(rawValue: "bell_and_waves_left_and_right_fill")
    static let bird: SymbolExtension = SymbolExtension(rawValue: "bird")
    static let bird_fill: SymbolExtension = SymbolExtension(rawValue: "bird_fill")
    static let birthday_cake: SymbolExtension = SymbolExtension(rawValue: "birthday_cake")
    static let birthday_cake_fill: SymbolExtension = SymbolExtension(rawValue: "birthday_cake_fill")
    static let bitcoinsign: SymbolExtension = SymbolExtension(rawValue: "bitcoinsign")
    static let blinds_horizontal_closed: SymbolExtension = SymbolExtension(rawValue: "blinds_horizontal_closed")
    static let blinds_horizontal_open: SymbolExtension = SymbolExtension(rawValue: "blinds_horizontal_open")
    static let blinds_vertical_closed: SymbolExtension = SymbolExtension(rawValue: "blinds_vertical_closed")
    static let blinds_vertical_open: SymbolExtension = SymbolExtension(rawValue: "blinds_vertical_open")
    static let bolt_badge_clock: SymbolExtension = SymbolExtension(rawValue: "bolt_badge_clock")
    static let bolt_badge_clock_fill: SymbolExtension = SymbolExtension(rawValue: "bolt_badge_clock_fill")
    static let bolt_brakesignal: SymbolExtension = SymbolExtension(rawValue: "bolt_brakesignal")
    static let brakesignal: SymbolExtension = SymbolExtension(rawValue: "brakesignal")
    static let brakesignal_dashed: SymbolExtension = SymbolExtension(rawValue: "brakesignal_dashed")
    static let brazilianrealsign: SymbolExtension = SymbolExtension(rawValue: "brazilianrealsign")
    static let bubbles_and_sparkles: SymbolExtension = SymbolExtension(rawValue: "bubbles_and_sparkles")
    static let bubbles_and_sparkles_fill: SymbolExtension = SymbolExtension(rawValue: "bubbles_and_sparkles_fill")
    static let button_programmable: SymbolExtension = SymbolExtension(rawValue: "button_programmable")
    static let button_programmable_square: SymbolExtension = SymbolExtension(rawValue: "button_programmable_square")
    static let button_programmable_square_fill: SymbolExtension = SymbolExtension(rawValue: "button_programmable_square_fill")
    static let cabinet: SymbolExtension = SymbolExtension(rawValue: "cabinet")
    static let cabinet_fill: SymbolExtension = SymbolExtension(rawValue: "cabinet_fill")
    static let carbon_dioxide_cloud: SymbolExtension = SymbolExtension(rawValue: "carbon_dioxide_cloud")
    static let carbon_dioxide_cloud_fill: SymbolExtension = SymbolExtension(rawValue: "carbon_dioxide_cloud_fill")
    static let carbon_monoxide_cloud: SymbolExtension = SymbolExtension(rawValue: "carbon_monoxide_cloud")
    static let carbon_monoxide_cloud_fill: SymbolExtension = SymbolExtension(rawValue: "carbon_monoxide_cloud_fill")
    static let carrot: SymbolExtension = SymbolExtension(rawValue: "carrot")
    static let carrot_fill: SymbolExtension = SymbolExtension(rawValue: "carrot_fill")
    static let cart_badge_questionmark: SymbolExtension = SymbolExtension(rawValue: "cart_badge_questionmark")
    static let cart_fill_badge_questionmark: SymbolExtension = SymbolExtension(rawValue: "cart_fill_badge_questionmark")
    static let cedisign: SymbolExtension = SymbolExtension(rawValue: "cedisign")
    static let cellularbars: SymbolExtension = SymbolExtension(rawValue: "cellularbars")
    static let centsign: SymbolExtension = SymbolExtension(rawValue: "centsign")
    static let chair: SymbolExtension = SymbolExtension(rawValue: "chair")
    static let chair_fill: SymbolExtension = SymbolExtension(rawValue: "chair_fill")
    static let chair_lounge: SymbolExtension = SymbolExtension(rawValue: "chair_lounge")
    static let chair_lounge_fill: SymbolExtension = SymbolExtension(rawValue: "chair_lounge_fill")
    static let chandelier: SymbolExtension = SymbolExtension(rawValue: "chandelier")
    static let chandelier_fill: SymbolExtension = SymbolExtension(rawValue: "chandelier_fill")
    static let character_duployan: SymbolExtension = SymbolExtension(rawValue: "character_duployan")
    static let character_phonetic: SymbolExtension = SymbolExtension(rawValue: "character_phonetic")
    static let character_sutton: SymbolExtension = SymbolExtension(rawValue: "character_sutton")
    static let chart_line_downtrend_xyaxis: SymbolExtension = SymbolExtension(rawValue: "chart_line_downtrend_xyaxis")
    static let chart_line_downtrend_xyaxis_circle: SymbolExtension = SymbolExtension(rawValue: "chart_line_downtrend_xyaxis_circle")
    static let chart_line_downtrend_xyaxis_circle_fill: SymbolExtension = SymbolExtension(rawValue: "chart_line_downtrend_xyaxis_circle_fill")
    static let chart_line_flattrend_xyaxis: SymbolExtension = SymbolExtension(rawValue: "chart_line_flattrend_xyaxis")
    static let chart_line_flattrend_xyaxis_circle: SymbolExtension = SymbolExtension(rawValue: "chart_line_flattrend_xyaxis_circle")
    static let chart_line_flattrend_xyaxis_circle_fill: SymbolExtension = SymbolExtension(rawValue: "chart_line_flattrend_xyaxis_circle_fill")
    static let checklist_checked: SymbolExtension = SymbolExtension(rawValue: "checklist_checked")
    static let checklist_unchecked: SymbolExtension = SymbolExtension(rawValue: "checklist_unchecked")
    static let checkmark_circle_badge_questionmark: SymbolExtension = SymbolExtension(rawValue: "checkmark_circle_badge_questionmark")
    static let checkmark_circle_badge_questionmark_fill: SymbolExtension = SymbolExtension(rawValue: "checkmark_circle_badge_questionmark_fill")
    static let checkmark_circle_badge_xmark: SymbolExtension = SymbolExtension(rawValue: "checkmark_circle_badge_xmark")
    static let checkmark_circle_badge_xmark_fill: SymbolExtension = SymbolExtension(rawValue: "checkmark_circle_badge_xmark_fill")
    static let checkmark_message: SymbolExtension = SymbolExtension(rawValue: "checkmark_message")
    static let checkmark_message_fill: SymbolExtension = SymbolExtension(rawValue: "checkmark_message_fill")
    static let chevron_backward_to_line: SymbolExtension = SymbolExtension(rawValue: "chevron_backward_to_line")
    static let chevron_forward_to_line: SymbolExtension = SymbolExtension(rawValue: "chevron_forward_to_line")
    static let chevron_left_to_line: SymbolExtension = SymbolExtension(rawValue: "chevron_left_to_line")
    static let chevron_right_to_line: SymbolExtension = SymbolExtension(rawValue: "chevron_right_to_line")
    static let circle_dashed_rectangle: SymbolExtension = SymbolExtension(rawValue: "circle_dashed_rectangle")
    static let circle_filled_pattern_diagonalline_rectangle: SymbolExtension = SymbolExtension(rawValue: "circle_filled_pattern_diagonalline_rectangle")
    static let circle_rectangle_dashed: SymbolExtension = SymbolExtension(rawValue: "circle_rectangle_dashed")
    static let circle_rectangle_filled_pattern_diagonalline: SymbolExtension = SymbolExtension(rawValue: "circle_rectangle_filled_pattern_diagonalline")
    static let clipboard: SymbolExtension = SymbolExtension(rawValue: "clipboard")
    static let clipboard_fill: SymbolExtension = SymbolExtension(rawValue: "clipboard_fill")
    static let clock_badge: SymbolExtension = SymbolExtension(rawValue: "clock_badge")
    static let clock_badge_fill: SymbolExtension = SymbolExtension(rawValue: "clock_badge_fill")
    static let clock_badge_questionmark: SymbolExtension = SymbolExtension(rawValue: "clock_badge_questionmark")
    static let clock_badge_questionmark_fill: SymbolExtension = SymbolExtension(rawValue: "clock_badge_questionmark_fill")
    static let clock_badge_xmark: SymbolExtension = SymbolExtension(rawValue: "clock_badge_xmark")
    static let clock_badge_xmark_fill: SymbolExtension = SymbolExtension(rawValue: "clock_badge_xmark_fill")
    static let cloud_bolt_circle: SymbolExtension = SymbolExtension(rawValue: "cloud_bolt_circle")
    static let cloud_bolt_circle_fill: SymbolExtension = SymbolExtension(rawValue: "cloud_bolt_circle_fill")
    static let cloud_bolt_rain_circle: SymbolExtension = SymbolExtension(rawValue: "cloud_bolt_rain_circle")
    static let cloud_bolt_rain_circle_fill: SymbolExtension = SymbolExtension(rawValue: "cloud_bolt_rain_circle_fill")
    static let cloud_circle: SymbolExtension = SymbolExtension(rawValue: "cloud_circle")
    static let cloud_circle_fill: SymbolExtension = SymbolExtension(rawValue: "cloud_circle_fill")
    static let cloud_drizzle_circle: SymbolExtension = SymbolExtension(rawValue: "cloud_drizzle_circle")
    static let cloud_drizzle_circle_fill: SymbolExtension = SymbolExtension(rawValue: "cloud_drizzle_circle_fill")
    static let cloud_fog_circle: SymbolExtension = SymbolExtension(rawValue: "cloud_fog_circle")
    static let cloud_fog_circle_fill: SymbolExtension = SymbolExtension(rawValue: "cloud_fog_circle_fill")
    static let cloud_hail_circle: SymbolExtension = SymbolExtension(rawValue: "cloud_hail_circle")
    static let cloud_hail_circle_fill: SymbolExtension = SymbolExtension(rawValue: "cloud_hail_circle_fill")
    static let cloud_heavyrain_circle: SymbolExtension = SymbolExtension(rawValue: "cloud_heavyrain_circle")
    static let cloud_heavyrain_circle_fill: SymbolExtension = SymbolExtension(rawValue: "cloud_heavyrain_circle_fill")
    static let cloud_moon_bolt_circle: SymbolExtension = SymbolExtension(rawValue: "cloud_moon_bolt_circle")
    static let cloud_moon_bolt_circle_fill: SymbolExtension = SymbolExtension(rawValue: "cloud_moon_bolt_circle_fill")
    static let cloud_moon_circle: SymbolExtension = SymbolExtension(rawValue: "cloud_moon_circle")
    static let cloud_moon_circle_fill: SymbolExtension = SymbolExtension(rawValue: "cloud_moon_circle_fill")
    static let cloud_moon_rain_circle: SymbolExtension = SymbolExtension(rawValue: "cloud_moon_rain_circle")
    static let cloud_moon_rain_circle_fill: SymbolExtension = SymbolExtension(rawValue: "cloud_moon_rain_circle_fill")
    static let cloud_rain_circle: SymbolExtension = SymbolExtension(rawValue: "cloud_rain_circle")
    static let cloud_rain_circle_fill: SymbolExtension = SymbolExtension(rawValue: "cloud_rain_circle_fill")
    static let cloud_sleet_circle: SymbolExtension = SymbolExtension(rawValue: "cloud_sleet_circle")
    static let cloud_sleet_circle_fill: SymbolExtension = SymbolExtension(rawValue: "cloud_sleet_circle_fill")
    static let cloud_snow_circle: SymbolExtension = SymbolExtension(rawValue: "cloud_snow_circle")
    static let cloud_snow_circle_fill: SymbolExtension = SymbolExtension(rawValue: "cloud_snow_circle_fill")
    static let cloud_sun_bolt_circle: SymbolExtension = SymbolExtension(rawValue: "cloud_sun_bolt_circle")
    static let cloud_sun_bolt_circle_fill: SymbolExtension = SymbolExtension(rawValue: "cloud_sun_bolt_circle_fill")
    static let cloud_sun_circle: SymbolExtension = SymbolExtension(rawValue: "cloud_sun_circle")
    static let cloud_sun_circle_fill: SymbolExtension = SymbolExtension(rawValue: "cloud_sun_circle_fill")
    static let cloud_sun_rain_circle: SymbolExtension = SymbolExtension(rawValue: "cloud_sun_rain_circle")
    static let cloud_sun_rain_circle_fill: SymbolExtension = SymbolExtension(rawValue: "cloud_sun_rain_circle_fill")
    static let coloncurrencysign: SymbolExtension = SymbolExtension(rawValue: "coloncurrencysign")
    static let compass_drawing: SymbolExtension = SymbolExtension(rawValue: "compass_drawing")
    static let contact_sensor: SymbolExtension = SymbolExtension(rawValue: "contact_sensor")
    static let contact_sensor_fill: SymbolExtension = SymbolExtension(rawValue: "contact_sensor_fill")
    static let cooktop: SymbolExtension = SymbolExtension(rawValue: "cooktop")
    static let cooktop_fill: SymbolExtension = SymbolExtension(rawValue: "cooktop_fill")
    static let creditcard_viewfinder: SymbolExtension = SymbolExtension(rawValue: "creditcard_viewfinder")
    static let cricket_ball: SymbolExtension = SymbolExtension(rawValue: "cricket_ball")
    static let cricket_ball_circle: SymbolExtension = SymbolExtension(rawValue: "cricket_ball_circle")
    static let cricket_ball_circle_fill: SymbolExtension = SymbolExtension(rawValue: "cricket_ball_circle_fill")
    static let cricket_ball_fill: SymbolExtension = SymbolExtension(rawValue: "cricket_ball_fill")
    static let cruzeirosign: SymbolExtension = SymbolExtension(rawValue: "cruzeirosign")
    static let cursorarrow_square_fill: SymbolExtension = SymbolExtension(rawValue: "cursorarrow_square_fill")
    static let curtains_closed: SymbolExtension = SymbolExtension(rawValue: "curtains_closed")
    static let curtains_open: SymbolExtension = SymbolExtension(rawValue: "curtains_open")
    static let dehumidifier: SymbolExtension = SymbolExtension(rawValue: "dehumidifier")
    static let dehumidifier_fill: SymbolExtension = SymbolExtension(rawValue: "dehumidifier_fill")
    static let deskview: SymbolExtension = SymbolExtension(rawValue: "deskview")
    static let deskview_fill: SymbolExtension = SymbolExtension(rawValue: "deskview_fill")
    static let dial_high: SymbolExtension = SymbolExtension(rawValue: "dial_high")
    static let dial_high_fill: SymbolExtension = SymbolExtension(rawValue: "dial_high_fill")
    static let dial_low: SymbolExtension = SymbolExtension(rawValue: "dial_low")
    static let dial_low_fill: SymbolExtension = SymbolExtension(rawValue: "dial_low_fill")
    static let dial_medium: SymbolExtension = SymbolExtension(rawValue: "dial_medium")
    static let dial_medium_fill: SymbolExtension = SymbolExtension(rawValue: "dial_medium_fill")
    static let dishwasher: SymbolExtension = SymbolExtension(rawValue: "dishwasher")
    static let dishwasher_fill: SymbolExtension = SymbolExtension(rawValue: "dishwasher_fill")
    static let distribute_horizontal_center: SymbolExtension = SymbolExtension(rawValue: "distribute_horizontal_center")
    static let distribute_horizontal_center_fill: SymbolExtension = SymbolExtension(rawValue: "distribute_horizontal_center_fill")
    static let distribute_horizontal_left: SymbolExtension = SymbolExtension(rawValue: "distribute_horizontal_left")
    static let distribute_horizontal_left_fill: SymbolExtension = SymbolExtension(rawValue: "distribute_horizontal_left_fill")
    static let distribute_horizontal_right: SymbolExtension = SymbolExtension(rawValue: "distribute_horizontal_right")
    static let distribute_horizontal_right_fill: SymbolExtension = SymbolExtension(rawValue: "distribute_horizontal_right_fill")
    static let distribute_vertical_bottom: SymbolExtension = SymbolExtension(rawValue: "distribute_vertical_bottom")
    static let distribute_vertical_bottom_fill: SymbolExtension = SymbolExtension(rawValue: "distribute_vertical_bottom_fill")
    static let distribute_vertical_center: SymbolExtension = SymbolExtension(rawValue: "distribute_vertical_center")
    static let distribute_vertical_center_fill: SymbolExtension = SymbolExtension(rawValue: "distribute_vertical_center_fill")
    static let distribute_vertical_top: SymbolExtension = SymbolExtension(rawValue: "distribute_vertical_top")
    static let distribute_vertical_top_fill: SymbolExtension = SymbolExtension(rawValue: "distribute_vertical_top_fill")
    static let doc_badge_arrow_up: SymbolExtension = SymbolExtension(rawValue: "doc_badge_arrow_up")
    static let doc_badge_arrow_up_fill: SymbolExtension = SymbolExtension(rawValue: "doc_badge_arrow_up_fill")
    static let dollarsign: SymbolExtension = SymbolExtension(rawValue: "dollarsign")
    static let dollarsign_arrow_circlepath: SymbolExtension = SymbolExtension(rawValue: "dollarsign_arrow_circlepath")
    static let dongsign: SymbolExtension = SymbolExtension(rawValue: "dongsign")
    static let door_french_closed: SymbolExtension = SymbolExtension(rawValue: "door_french_closed")
    static let door_french_open: SymbolExtension = SymbolExtension(rawValue: "door_french_open")
    static let door_garage_closed: SymbolExtension = SymbolExtension(rawValue: "door_garage_closed")
    static let door_garage_closed_trianglebadge_exclamationmark: SymbolExtension = SymbolExtension(rawValue: "door_garage_closed_trianglebadge_exclamationmark")
    static let door_garage_double_bay_closed: SymbolExtension = SymbolExtension(rawValue: "door_garage_double_bay_closed")
    static let door_garage_double_bay_closed_trianglebadge_exclamationmark: SymbolExtension = SymbolExtension(rawValue: "door_garage_double_bay_closed_trianglebadge_exclamationmark")
    static let door_garage_double_bay_open: SymbolExtension = SymbolExtension(rawValue: "door_garage_double_bay_open")
    static let door_garage_double_bay_open_trianglebadge_exclamationmark: SymbolExtension = SymbolExtension(rawValue: "door_garage_double_bay_open_trianglebadge_exclamationmark")
    static let door_garage_open: SymbolExtension = SymbolExtension(rawValue: "door_garage_open")
    static let door_garage_open_trianglebadge_exclamationmark: SymbolExtension = SymbolExtension(rawValue: "door_garage_open_trianglebadge_exclamationmark")
    static let door_left_hand_closed: SymbolExtension = SymbolExtension(rawValue: "door_left_hand_closed")
    static let door_left_hand_open: SymbolExtension = SymbolExtension(rawValue: "door_left_hand_open")
    static let door_right_hand_closed: SymbolExtension = SymbolExtension(rawValue: "door_right_hand_closed")
    static let door_right_hand_open: SymbolExtension = SymbolExtension(rawValue: "door_right_hand_open")
    static let door_sliding_left_hand_closed: SymbolExtension = SymbolExtension(rawValue: "door_sliding_left_hand_closed")
    static let door_sliding_left_hand_open: SymbolExtension = SymbolExtension(rawValue: "door_sliding_left_hand_open")
    static let door_sliding_right_hand_closed: SymbolExtension = SymbolExtension(rawValue: "door_sliding_right_hand_closed")
    static let door_sliding_right_hand_open: SymbolExtension = SymbolExtension(rawValue: "door_sliding_right_hand_open")
    static let drop_degreesign: SymbolExtension = SymbolExtension(rawValue: "drop_degreesign")
    static let drop_degreesign_fill: SymbolExtension = SymbolExtension(rawValue: "drop_degreesign_fill")
    static let drop_degreesign_slash: SymbolExtension = SymbolExtension(rawValue: "drop_degreesign_slash")
    static let drop_degreesign_slash_fill: SymbolExtension = SymbolExtension(rawValue: "drop_degreesign_slash_fill")
    static let drop_keypad_rectangle: SymbolExtension = SymbolExtension(rawValue: "drop_keypad_rectangle")
    static let drop_keypad_rectangle_fill: SymbolExtension = SymbolExtension(rawValue: "drop_keypad_rectangle_fill")
    static let dryer: SymbolExtension = SymbolExtension(rawValue: "dryer")
    static let dryer_fill: SymbolExtension = SymbolExtension(rawValue: "dryer_fill")
    static let dumbbell: SymbolExtension = SymbolExtension(rawValue: "dumbbell")
    static let dumbbell_fill: SymbolExtension = SymbolExtension(rawValue: "dumbbell_fill")
    static let ellipsis_message: SymbolExtension = SymbolExtension(rawValue: "ellipsis_message")
    static let ellipsis_message_fill: SymbolExtension = SymbolExtension(rawValue: "ellipsis_message_fill")
    static let entry_lever_keypad: SymbolExtension = SymbolExtension(rawValue: "entry_lever_keypad")
    static let entry_lever_keypad_fill: SymbolExtension = SymbolExtension(rawValue: "entry_lever_keypad_fill")
    static let entry_lever_keypad_trianglebadge_exclamationmark: SymbolExtension = SymbolExtension(rawValue: "entry_lever_keypad_trianglebadge_exclamationmark")
    static let entry_lever_keypad_trianglebadge_exclamationmark_fill: SymbolExtension = SymbolExtension(rawValue: "entry_lever_keypad_trianglebadge_exclamationmark_fill")
    static let envelope_open_badge_clock: SymbolExtension = SymbolExtension(rawValue: "envelope_open_badge_clock")
    static let eraser: SymbolExtension = SymbolExtension(rawValue: "eraser")
    static let eraser_fill: SymbolExtension = SymbolExtension(rawValue: "eraser_fill")
    static let eraser_line_dashed: SymbolExtension = SymbolExtension(rawValue: "eraser_line_dashed")
    static let eraser_line_dashed_fill: SymbolExtension = SymbolExtension(rawValue: "eraser_line_dashed_fill")
    static let eurosign: SymbolExtension = SymbolExtension(rawValue: "eurosign")
    static let exclamationmark_brakesignal: SymbolExtension = SymbolExtension(rawValue: "exclamationmark_brakesignal")
    static let exclamationmark_lock: SymbolExtension = SymbolExtension(rawValue: "exclamationmark_lock")
    static let exclamationmark_lock_fill: SymbolExtension = SymbolExtension(rawValue: "exclamationmark_lock_fill")
    static let exclamationmark_questionmark: SymbolExtension = SymbolExtension(rawValue: "exclamationmark_questionmark")
    static let externaldrive_badge_exclamationmark: SymbolExtension = SymbolExtension(rawValue: "externaldrive_badge_exclamationmark")
    static let externaldrive_badge_questionmark: SymbolExtension = SymbolExtension(rawValue: "externaldrive_badge_questionmark")
    static let externaldrive_fill_badge_exclamationmark: SymbolExtension = SymbolExtension(rawValue: "externaldrive_fill_badge_exclamationmark")
    static let externaldrive_fill_badge_questionmark: SymbolExtension = SymbolExtension(rawValue: "externaldrive_fill_badge_questionmark")
    static let externaldrive_fill_trianglebadge_exclamationmark: SymbolExtension = SymbolExtension(rawValue: "externaldrive_fill_trianglebadge_exclamationmark")
    static let externaldrive_trianglebadge_exclamationmark: SymbolExtension = SymbolExtension(rawValue: "externaldrive_trianglebadge_exclamationmark")
    static let face_smiling_inverse: SymbolExtension = SymbolExtension(rawValue: "face_smiling_inverse")
    static let fan_and_light_ceiling: SymbolExtension = SymbolExtension(rawValue: "fan_and_light_ceiling")
    static let fan_and_light_ceiling_fill: SymbolExtension = SymbolExtension(rawValue: "fan_and_light_ceiling_fill")
    static let fan_ceiling: SymbolExtension = SymbolExtension(rawValue: "fan_ceiling")
    static let fan_ceiling_fill: SymbolExtension = SymbolExtension(rawValue: "fan_ceiling_fill")
    static let fan_desk: SymbolExtension = SymbolExtension(rawValue: "fan_desk")
    static let fan_desk_fill: SymbolExtension = SymbolExtension(rawValue: "fan_desk_fill")
    static let fan_floor: SymbolExtension = SymbolExtension(rawValue: "fan_floor")
    static let fan_floor_fill: SymbolExtension = SymbolExtension(rawValue: "fan_floor_fill")
    static let fan_oscillation: SymbolExtension = SymbolExtension(rawValue: "fan_oscillation")
    static let fan_oscillation_fill: SymbolExtension = SymbolExtension(rawValue: "fan_oscillation_fill")
    static let faxmachine_fill: SymbolExtension = SymbolExtension(rawValue: "faxmachine_fill")
    static let figure_2_and_child_holdinghands: SymbolExtension = SymbolExtension(rawValue: "figure_2_and_child_holdinghands")
    static let figure_2_arms_open: SymbolExtension = SymbolExtension(rawValue: "figure_2_arms_open")
    static let figure_american_football: SymbolExtension = SymbolExtension(rawValue: "figure_american_football")
    static let figure_and_child_holdinghands: SymbolExtension = SymbolExtension(rawValue: "figure_and_child_holdinghands")
    static let figure_archery: SymbolExtension = SymbolExtension(rawValue: "figure_archery")
    static let figure_arms_open: SymbolExtension = SymbolExtension(rawValue: "figure_arms_open")
    static let figure_australian_football: SymbolExtension = SymbolExtension(rawValue: "figure_australian_football")
    static let figure_badminton: SymbolExtension = SymbolExtension(rawValue: "figure_badminton")
    static let figure_barre: SymbolExtension = SymbolExtension(rawValue: "figure_barre")
    static let figure_baseball: SymbolExtension = SymbolExtension(rawValue: "figure_baseball")
    static let figure_basketball: SymbolExtension = SymbolExtension(rawValue: "figure_basketball")
    static let figure_bowling: SymbolExtension = SymbolExtension(rawValue: "figure_bowling")
    static let figure_boxing: SymbolExtension = SymbolExtension(rawValue: "figure_boxing")
    static let figure_climbing: SymbolExtension = SymbolExtension(rawValue: "figure_climbing")
    static let figure_cooldown: SymbolExtension = SymbolExtension(rawValue: "figure_cooldown")
    static let figure_core_training: SymbolExtension = SymbolExtension(rawValue: "figure_core_training")
    static let figure_cricket: SymbolExtension = SymbolExtension(rawValue: "figure_cricket")
    static let figure_cross_training: SymbolExtension = SymbolExtension(rawValue: "figure_cross_training")
    static let figure_curling: SymbolExtension = SymbolExtension(rawValue: "figure_curling")
    static let figure_dance: SymbolExtension = SymbolExtension(rawValue: "figure_dance")
    static let figure_disc_sports: SymbolExtension = SymbolExtension(rawValue: "figure_disc_sports")
    static let figure_dress_line_vertical_figure: SymbolExtension = SymbolExtension(rawValue: "figure_dress_line_vertical_figure")
    static let figure_elliptical: SymbolExtension = SymbolExtension(rawValue: "figure_elliptical")
    static let figure_equestrian_sports: SymbolExtension = SymbolExtension(rawValue: "figure_equestrian_sports")
    static let figure_fall: SymbolExtension = SymbolExtension(rawValue: "figure_fall")
    static let figure_fall_circle: SymbolExtension = SymbolExtension(rawValue: "figure_fall_circle")
    static let figure_fall_circle_fill: SymbolExtension = SymbolExtension(rawValue: "figure_fall_circle_fill")
    static let figure_fencing: SymbolExtension = SymbolExtension(rawValue: "figure_fencing")
    static let figure_fishing: SymbolExtension = SymbolExtension(rawValue: "figure_fishing")
    static let figure_flexibility: SymbolExtension = SymbolExtension(rawValue: "figure_flexibility")
    static let figure_golf: SymbolExtension = SymbolExtension(rawValue: "figure_golf")
    static let figure_gymnastics: SymbolExtension = SymbolExtension(rawValue: "figure_gymnastics")
    static let figure_hand_cycling: SymbolExtension = SymbolExtension(rawValue: "figure_hand_cycling")
    static let figure_handball: SymbolExtension = SymbolExtension(rawValue: "figure_handball")
    static let figure_highintensity_intervaltraining: SymbolExtension = SymbolExtension(rawValue: "figure_highintensity_intervaltraining")
    static let figure_hiking: SymbolExtension = SymbolExtension(rawValue: "figure_hiking")
    static let figure_hockey: SymbolExtension = SymbolExtension(rawValue: "figure_hockey")
    static let figure_hunting: SymbolExtension = SymbolExtension(rawValue: "figure_hunting")
    static let figure_indoor_cycle: SymbolExtension = SymbolExtension(rawValue: "figure_indoor_cycle")
    static let figure_jumprope: SymbolExtension = SymbolExtension(rawValue: "figure_jumprope")
    static let figure_kickboxing: SymbolExtension = SymbolExtension(rawValue: "figure_kickboxing")
    static let figure_lacrosse: SymbolExtension = SymbolExtension(rawValue: "figure_lacrosse")
    static let figure_martial_arts: SymbolExtension = SymbolExtension(rawValue: "figure_martial_arts")
    static let figure_mind_and_body: SymbolExtension = SymbolExtension(rawValue: "figure_mind_and_body")
    static let figure_mixed_cardio: SymbolExtension = SymbolExtension(rawValue: "figure_mixed_cardio")
    static let figure_open_water_swim: SymbolExtension = SymbolExtension(rawValue: "figure_open_water_swim")
    static let figure_outdoor_cycle: SymbolExtension = SymbolExtension(rawValue: "figure_outdoor_cycle")
    static let figure_pickleball: SymbolExtension = SymbolExtension(rawValue: "figure_pickleball")
    static let figure_pilates: SymbolExtension = SymbolExtension(rawValue: "figure_pilates")
    static let figure_play: SymbolExtension = SymbolExtension(rawValue: "figure_play")
    static let figure_pool_swim: SymbolExtension = SymbolExtension(rawValue: "figure_pool_swim")
    static let figure_racquetball: SymbolExtension = SymbolExtension(rawValue: "figure_racquetball")
    static let figure_roll_runningpace: SymbolExtension = SymbolExtension(rawValue: "figure_roll_runningpace")
    static let figure_rolling: SymbolExtension = SymbolExtension(rawValue: "figure_rolling")
    static let figure_rower: SymbolExtension = SymbolExtension(rawValue: "figure_rower")
    static let figure_rugby: SymbolExtension = SymbolExtension(rawValue: "figure_rugby")
    static let figure_run: SymbolExtension = SymbolExtension(rawValue: "figure_run")
    static let figure_run_circle: SymbolExtension = SymbolExtension(rawValue: "figure_run_circle")
    static let figure_run_circle_fill: SymbolExtension = SymbolExtension(rawValue: "figure_run_circle_fill")
    static let figure_sailing: SymbolExtension = SymbolExtension(rawValue: "figure_sailing")
    static let figure_skating: SymbolExtension = SymbolExtension(rawValue: "figure_skating")
    static let figure_skiing_crosscountry: SymbolExtension = SymbolExtension(rawValue: "figure_skiing_crosscountry")
    static let figure_skiing_downhill: SymbolExtension = SymbolExtension(rawValue: "figure_skiing_downhill")
    static let figure_snowboarding: SymbolExtension = SymbolExtension(rawValue: "figure_snowboarding")
    static let figure_soccer: SymbolExtension = SymbolExtension(rawValue: "figure_soccer")
    static let figure_socialdance: SymbolExtension = SymbolExtension(rawValue: "figure_socialdance")
    static let figure_softball: SymbolExtension = SymbolExtension(rawValue: "figure_softball")
    static let figure_squash: SymbolExtension = SymbolExtension(rawValue: "figure_squash")
    static let figure_stair_stepper: SymbolExtension = SymbolExtension(rawValue: "figure_stair_stepper")
    static let figure_stairs: SymbolExtension = SymbolExtension(rawValue: "figure_stairs")
    static let figure_step_training: SymbolExtension = SymbolExtension(rawValue: "figure_step_training")
    static let figure_strengthtraining_functional: SymbolExtension = SymbolExtension(rawValue: "figure_strengthtraining_functional")
    static let figure_strengthtraining_traditional: SymbolExtension = SymbolExtension(rawValue: "figure_strengthtraining_traditional")
    static let figure_surfing: SymbolExtension = SymbolExtension(rawValue: "figure_surfing")
    static let figure_table_tennis: SymbolExtension = SymbolExtension(rawValue: "figure_table_tennis")
    static let figure_taichi: SymbolExtension = SymbolExtension(rawValue: "figure_taichi")
    static let figure_tennis: SymbolExtension = SymbolExtension(rawValue: "figure_tennis")
    static let figure_track_and_field: SymbolExtension = SymbolExtension(rawValue: "figure_track_and_field")
    static let figure_volleyball: SymbolExtension = SymbolExtension(rawValue: "figure_volleyball")
    static let figure_walk_arrival: SymbolExtension = SymbolExtension(rawValue: "figure_walk_arrival")
    static let figure_walk_departure: SymbolExtension = SymbolExtension(rawValue: "figure_walk_departure")
    static let figure_walk_motion: SymbolExtension = SymbolExtension(rawValue: "figure_walk_motion")
    static let figure_water_fitness: SymbolExtension = SymbolExtension(rawValue: "figure_water_fitness")
    static let figure_waterpolo: SymbolExtension = SymbolExtension(rawValue: "figure_waterpolo")
    static let figure_wrestling: SymbolExtension = SymbolExtension(rawValue: "figure_wrestling")
    static let figure_yoga: SymbolExtension = SymbolExtension(rawValue: "figure_yoga")
    static let film_stack: SymbolExtension = SymbolExtension(rawValue: "film_stack")
    static let film_stack_fill: SymbolExtension = SymbolExtension(rawValue: "film_stack_fill")
    static let fireplace: SymbolExtension = SymbolExtension(rawValue: "fireplace")
    static let fireplace_fill: SymbolExtension = SymbolExtension(rawValue: "fireplace_fill")
    static let firewall: SymbolExtension = SymbolExtension(rawValue: "firewall")
    static let firewall_fill: SymbolExtension = SymbolExtension(rawValue: "firewall_fill")
    static let fish: SymbolExtension = SymbolExtension(rawValue: "fish")
    static let fish_fill: SymbolExtension = SymbolExtension(rawValue: "fish_fill")
    static let flag_2_crossed_circle: SymbolExtension = SymbolExtension(rawValue: "flag_2_crossed_circle")
    static let flag_2_crossed_circle_fill: SymbolExtension = SymbolExtension(rawValue: "flag_2_crossed_circle_fill")
    static let flag_checkered: SymbolExtension = SymbolExtension(rawValue: "flag_checkered")
    static let flag_checkered_2_crossed: SymbolExtension = SymbolExtension(rawValue: "flag_checkered_2_crossed")
    static let fleuron: SymbolExtension = SymbolExtension(rawValue: "fleuron")
    static let fleuron_fill: SymbolExtension = SymbolExtension(rawValue: "fleuron_fill")
    static let florinsign: SymbolExtension = SymbolExtension(rawValue: "florinsign")
    static let fluid_brakesignal: SymbolExtension = SymbolExtension(rawValue: "fluid_brakesignal")
    static let football: SymbolExtension = SymbolExtension(rawValue: "football")
    static let football_circle: SymbolExtension = SymbolExtension(rawValue: "football_circle")
    static let football_circle_fill: SymbolExtension = SymbolExtension(rawValue: "football_circle_fill")
    static let football_fill: SymbolExtension = SymbolExtension(rawValue: "football_fill")
    static let forward_end_circle: SymbolExtension = SymbolExtension(rawValue: "forward_end_circle")
    static let forward_end_circle_fill: SymbolExtension = SymbolExtension(rawValue: "forward_end_circle_fill")
    static let fossil_shell: SymbolExtension = SymbolExtension(rawValue: "fossil_shell")
    static let fossil_shell_fill: SymbolExtension = SymbolExtension(rawValue: "fossil_shell_fill")
    static let francsign: SymbolExtension = SymbolExtension(rawValue: "francsign")
    static let frying_pan: SymbolExtension = SymbolExtension(rawValue: "frying_pan")
    static let frying_pan_fill: SymbolExtension = SymbolExtension(rawValue: "frying_pan_fill")
    static let gear_badge: SymbolExtension = SymbolExtension(rawValue: "gear_badge")
    static let gearshape_arrow_triangle_2_circlepath: SymbolExtension = SymbolExtension(rawValue: "gearshape_arrow_triangle_2_circlepath")
    static let globe_central_south_asia: SymbolExtension = SymbolExtension(rawValue: "globe_central_south_asia")
    static let globe_central_south_asia_fill: SymbolExtension = SymbolExtension(rawValue: "globe_central_south_asia_fill")
    static let globe_desk: SymbolExtension = SymbolExtension(rawValue: "globe_desk")
    static let globe_desk_fill: SymbolExtension = SymbolExtension(rawValue: "globe_desk_fill")
    static let guaranisign: SymbolExtension = SymbolExtension(rawValue: "guaranisign")
    static let hand_raised_fingers_spread: SymbolExtension = SymbolExtension(rawValue: "hand_raised_fingers_spread")
    static let hand_raised_fingers_spread_fill: SymbolExtension = SymbolExtension(rawValue: "hand_raised_fingers_spread_fill")
    static let headlight_high_beam: SymbolExtension = SymbolExtension(rawValue: "headlight_high_beam")
    static let headlight_high_beam_fill: SymbolExtension = SymbolExtension(rawValue: "headlight_high_beam_fill")
    static let headlight_low_beam: SymbolExtension = SymbolExtension(rawValue: "headlight_low_beam")
    static let headlight_low_beam_fill: SymbolExtension = SymbolExtension(rawValue: "headlight_low_beam_fill")
    static let hearingdevice_and_signal_meter: SymbolExtension = SymbolExtension(rawValue: "hearingdevice_and_signal_meter")
    static let hearingdevice_and_signal_meter_fill: SymbolExtension = SymbolExtension(rawValue: "hearingdevice_and_signal_meter_fill")
    static let hearingdevice_ear_fill: SymbolExtension = SymbolExtension(rawValue: "hearingdevice_ear_fill")
    static let heater_vertical: SymbolExtension = SymbolExtension(rawValue: "heater_vertical")
    static let heater_vertical_fill: SymbolExtension = SymbolExtension(rawValue: "heater_vertical_fill")
    static let hifireceiver: SymbolExtension = SymbolExtension(rawValue: "hifireceiver")
    static let hifireceiver_fill: SymbolExtension = SymbolExtension(rawValue: "hifireceiver_fill")
    static let hockey_puck: SymbolExtension = SymbolExtension(rawValue: "hockey_puck")
    static let hockey_puck_circle: SymbolExtension = SymbolExtension(rawValue: "hockey_puck_circle")
    static let hockey_puck_circle_fill: SymbolExtension = SymbolExtension(rawValue: "hockey_puck_circle_fill")
    static let hockey_puck_fill: SymbolExtension = SymbolExtension(rawValue: "hockey_puck_fill")
    static let hold_brakesignal: SymbolExtension = SymbolExtension(rawValue: "hold_brakesignal")
    static let hryvniasign: SymbolExtension = SymbolExtension(rawValue: "hryvniasign")
    static let humidifier: SymbolExtension = SymbolExtension(rawValue: "humidifier")
    static let humidifier_and_droplets: SymbolExtension = SymbolExtension(rawValue: "humidifier_and_droplets")
    static let humidifier_and_droplets_fill: SymbolExtension = SymbolExtension(rawValue: "humidifier_and_droplets_fill")
    static let humidifier_fill: SymbolExtension = SymbolExtension(rawValue: "humidifier_fill")
    static let hurricane_circle: SymbolExtension = SymbolExtension(rawValue: "hurricane_circle")
    static let hurricane_circle_fill: SymbolExtension = SymbolExtension(rawValue: "hurricane_circle_fill")
    static let indianrupeesign: SymbolExtension = SymbolExtension(rawValue: "indianrupeesign")
    static let info_bubble: SymbolExtension = SymbolExtension(rawValue: "info_bubble")
    static let info_bubble_fill: SymbolExtension = SymbolExtension(rawValue: "info_bubble_fill")
    static let info_square: SymbolExtension = SymbolExtension(rawValue: "info_square")
    static let info_square_fill: SymbolExtension = SymbolExtension(rawValue: "info_square_fill")
    static let keyboard_badge_ellipsis_fill: SymbolExtension = SymbolExtension(rawValue: "keyboard_badge_ellipsis_fill")
    static let keyboard_badge_eye: SymbolExtension = SymbolExtension(rawValue: "keyboard_badge_eye")
    static let keyboard_badge_eye_fill: SymbolExtension = SymbolExtension(rawValue: "keyboard_badge_eye_fill")
    static let keyboard_chevron_compact_down_fill: SymbolExtension = SymbolExtension(rawValue: "keyboard_chevron_compact_down_fill")
    static let keyboard_chevron_compact_left_fill: SymbolExtension = SymbolExtension(rawValue: "keyboard_chevron_compact_left_fill")
    static let keyboard_onehanded_left_fill: SymbolExtension = SymbolExtension(rawValue: "keyboard_onehanded_left_fill")
    static let keyboard_onehanded_right_fill: SymbolExtension = SymbolExtension(rawValue: "keyboard_onehanded_right_fill")
    static let kipsign: SymbolExtension = SymbolExtension(rawValue: "kipsign")
    static let lamp_ceiling: SymbolExtension = SymbolExtension(rawValue: "lamp_ceiling")
    static let lamp_ceiling_fill: SymbolExtension = SymbolExtension(rawValue: "lamp_ceiling_fill")
    static let lamp_ceiling_inverse: SymbolExtension = SymbolExtension(rawValue: "lamp_ceiling_inverse")
    static let lamp_desk: SymbolExtension = SymbolExtension(rawValue: "lamp_desk")
    static let lamp_desk_fill: SymbolExtension = SymbolExtension(rawValue: "lamp_desk_fill")
    static let lamp_floor: SymbolExtension = SymbolExtension(rawValue: "lamp_floor")
    static let lamp_floor_fill: SymbolExtension = SymbolExtension(rawValue: "lamp_floor_fill")
    static let lamp_table: SymbolExtension = SymbolExtension(rawValue: "lamp_table")
    static let lamp_table_fill: SymbolExtension = SymbolExtension(rawValue: "lamp_table_fill")
    static let larisign: SymbolExtension = SymbolExtension(rawValue: "larisign")
    static let laurel_leading: SymbolExtension = SymbolExtension(rawValue: "laurel_leading")
    static let laurel_trailing: SymbolExtension = SymbolExtension(rawValue: "laurel_trailing")
    static let light_beacon_max: SymbolExtension = SymbolExtension(rawValue: "light_beacon_max")
    static let light_beacon_max_fill: SymbolExtension = SymbolExtension(rawValue: "light_beacon_max_fill")
    static let light_beacon_min: SymbolExtension = SymbolExtension(rawValue: "light_beacon_min")
    static let light_beacon_min_fill: SymbolExtension = SymbolExtension(rawValue: "light_beacon_min_fill")
    static let light_cylindrical_ceiling: SymbolExtension = SymbolExtension(rawValue: "light_cylindrical_ceiling")
    static let light_cylindrical_ceiling_fill: SymbolExtension = SymbolExtension(rawValue: "light_cylindrical_ceiling_fill")
    static let light_cylindrical_ceiling_inverse: SymbolExtension = SymbolExtension(rawValue: "light_cylindrical_ceiling_inverse")
    static let light_panel: SymbolExtension = SymbolExtension(rawValue: "light_panel")
    static let light_panel_fill: SymbolExtension = SymbolExtension(rawValue: "light_panel_fill")
    static let light_recessed: SymbolExtension = SymbolExtension(rawValue: "light_recessed")
    static let light_recessed_3: SymbolExtension = SymbolExtension(rawValue: "light_recessed_3")
    static let light_recessed_3_fill: SymbolExtension = SymbolExtension(rawValue: "light_recessed_3_fill")
    static let light_recessed_3_inverse: SymbolExtension = SymbolExtension(rawValue: "light_recessed_3_inverse")
    static let light_recessed_fill: SymbolExtension = SymbolExtension(rawValue: "light_recessed_fill")
    static let light_recessed_inverse: SymbolExtension = SymbolExtension(rawValue: "light_recessed_inverse")
    static let light_ribbon: SymbolExtension = SymbolExtension(rawValue: "light_ribbon")
    static let light_ribbon_fill: SymbolExtension = SymbolExtension(rawValue: "light_ribbon_fill")
    static let light_strip_2: SymbolExtension = SymbolExtension(rawValue: "light_strip_2")
    static let light_strip_2_fill: SymbolExtension = SymbolExtension(rawValue: "light_strip_2_fill")
    static let lightbulb_2: SymbolExtension = SymbolExtension(rawValue: "lightbulb_2")
    static let lightbulb_2_fill: SymbolExtension = SymbolExtension(rawValue: "lightbulb_2_fill")
    static let lightbulb_led: SymbolExtension = SymbolExtension(rawValue: "lightbulb_led")
    static let lightbulb_led_fill: SymbolExtension = SymbolExtension(rawValue: "lightbulb_led_fill")
    static let lightbulb_led_wide: SymbolExtension = SymbolExtension(rawValue: "lightbulb_led_wide")
    static let lightbulb_led_wide_fill: SymbolExtension = SymbolExtension(rawValue: "lightbulb_led_wide_fill")
    static let lightswitch_off: SymbolExtension = SymbolExtension(rawValue: "lightswitch_off")
    static let lightswitch_off_fill: SymbolExtension = SymbolExtension(rawValue: "lightswitch_off_fill")
    static let lightswitch_off_square: SymbolExtension = SymbolExtension(rawValue: "lightswitch_off_square")
    static let lightswitch_off_square_fill: SymbolExtension = SymbolExtension(rawValue: "lightswitch_off_square_fill")
    static let lightswitch_on: SymbolExtension = SymbolExtension(rawValue: "lightswitch_on")
    static let lightswitch_on_fill: SymbolExtension = SymbolExtension(rawValue: "lightswitch_on_fill")
    static let lightswitch_on_square: SymbolExtension = SymbolExtension(rawValue: "lightswitch_on_square")
    static let lightswitch_on_square_fill: SymbolExtension = SymbolExtension(rawValue: "lightswitch_on_square_fill")
    static let lirasign: SymbolExtension = SymbolExtension(rawValue: "lirasign")
    static let list_bullet_clipboard: SymbolExtension = SymbolExtension(rawValue: "list_bullet_clipboard")
    static let list_bullet_clipboard_fill: SymbolExtension = SymbolExtension(rawValue: "list_bullet_clipboard_fill")
    static let list_clipboard: SymbolExtension = SymbolExtension(rawValue: "list_clipboard")
    static let list_clipboard_fill: SymbolExtension = SymbolExtension(rawValue: "list_clipboard_fill")
    static let lizard: SymbolExtension = SymbolExtension(rawValue: "lizard")
    static let lizard_fill: SymbolExtension = SymbolExtension(rawValue: "lizard_fill")
    static let location_slash_circle: SymbolExtension = SymbolExtension(rawValue: "location_slash_circle")
    static let location_slash_circle_fill: SymbolExtension = SymbolExtension(rawValue: "location_slash_circle_fill")
    static let lock_open_trianglebadge_exclamationmark: SymbolExtension = SymbolExtension(rawValue: "lock_open_trianglebadge_exclamationmark")
    static let lock_open_trianglebadge_exclamationmark_fill: SymbolExtension = SymbolExtension(rawValue: "lock_open_trianglebadge_exclamationmark_fill")
    static let lock_trianglebadge_exclamationmark: SymbolExtension = SymbolExtension(rawValue: "lock_trianglebadge_exclamationmark")
    static let lock_trianglebadge_exclamationmark_fill: SymbolExtension = SymbolExtension(rawValue: "lock_trianglebadge_exclamationmark_fill")
    static let macstudio: SymbolExtension = SymbolExtension(rawValue: "macstudio")
    static let macstudio_fill: SymbolExtension = SymbolExtension(rawValue: "macstudio_fill")
    static let manatsign: SymbolExtension = SymbolExtension(rawValue: "manatsign")
    static let medal: SymbolExtension = SymbolExtension(rawValue: "medal")
    static let medal_fill: SymbolExtension = SymbolExtension(rawValue: "medal_fill")
    static let medical_thermometer: SymbolExtension = SymbolExtension(rawValue: "medical_thermometer")
    static let medical_thermometer_fill: SymbolExtension = SymbolExtension(rawValue: "medical_thermometer_fill")
    static let message_badge: SymbolExtension = SymbolExtension(rawValue: "message_badge")
    static let message_badge_circle: SymbolExtension = SymbolExtension(rawValue: "message_badge_circle")
    static let message_badge_circle_fill: SymbolExtension = SymbolExtension(rawValue: "message_badge_circle_fill")
    static let message_badge_fill: SymbolExtension = SymbolExtension(rawValue: "message_badge_fill")
    static let message_badge_filled_fill: SymbolExtension = SymbolExtension(rawValue: "message_badge_filled_fill")
    static let mic_and_signal_meter: SymbolExtension = SymbolExtension(rawValue: "mic_and_signal_meter")
    static let mic_and_signal_meter_fill: SymbolExtension = SymbolExtension(rawValue: "mic_and_signal_meter_fill")
    static let mic_badge_xmark: SymbolExtension = SymbolExtension(rawValue: "mic_badge_xmark")
    static let mic_fill_badge_xmark: SymbolExtension = SymbolExtension(rawValue: "mic_fill_badge_xmark")
    static let microbe: SymbolExtension = SymbolExtension(rawValue: "microbe")
    static let microbe_circle: SymbolExtension = SymbolExtension(rawValue: "microbe_circle")
    static let microbe_circle_fill: SymbolExtension = SymbolExtension(rawValue: "microbe_circle_fill")
    static let microbe_fill: SymbolExtension = SymbolExtension(rawValue: "microbe_fill")
    static let microwave: SymbolExtension = SymbolExtension(rawValue: "microwave")
    static let microwave_fill: SymbolExtension = SymbolExtension(rawValue: "microwave_fill")
    static let millsign: SymbolExtension = SymbolExtension(rawValue: "millsign")
    static let mirror_side_left: SymbolExtension = SymbolExtension(rawValue: "mirror_side_left")
    static let mirror_side_right: SymbolExtension = SymbolExtension(rawValue: "mirror_side_right")
    static let moon_haze: SymbolExtension = SymbolExtension(rawValue: "moon_haze")
    static let moon_haze_circle: SymbolExtension = SymbolExtension(rawValue: "moon_haze_circle")
    static let moon_haze_circle_fill: SymbolExtension = SymbolExtension(rawValue: "moon_haze_circle_fill")
    static let moon_haze_fill: SymbolExtension = SymbolExtension(rawValue: "moon_haze_fill")
    static let moon_stars_circle: SymbolExtension = SymbolExtension(rawValue: "moon_stars_circle")
    static let moon_stars_circle_fill: SymbolExtension = SymbolExtension(rawValue: "moon_stars_circle_fill")
    static let moonphase_first_quarter: SymbolExtension = SymbolExtension(rawValue: "moonphase_first_quarter")
    static let moonphase_first_quarter_inverse: SymbolExtension = SymbolExtension(rawValue: "moonphase_first_quarter_inverse")
    static let moonphase_full_moon: SymbolExtension = SymbolExtension(rawValue: "moonphase_full_moon")
    static let moonphase_full_moon_inverse: SymbolExtension = SymbolExtension(rawValue: "moonphase_full_moon_inverse")
    static let moonphase_last_quarter: SymbolExtension = SymbolExtension(rawValue: "moonphase_last_quarter")
    static let moonphase_last_quarter_inverse: SymbolExtension = SymbolExtension(rawValue: "moonphase_last_quarter_inverse")
    static let moonphase_new_moon: SymbolExtension = SymbolExtension(rawValue: "moonphase_new_moon")
    static let moonphase_new_moon_inverse: SymbolExtension = SymbolExtension(rawValue: "moonphase_new_moon_inverse")
    static let moonphase_waning_crescent: SymbolExtension = SymbolExtension(rawValue: "moonphase_waning_crescent")
    static let moonphase_waning_crescent_inverse: SymbolExtension = SymbolExtension(rawValue: "moonphase_waning_crescent_inverse")
    static let moonphase_waning_gibbous: SymbolExtension = SymbolExtension(rawValue: "moonphase_waning_gibbous")
    static let moonphase_waning_gibbous_inverse: SymbolExtension = SymbolExtension(rawValue: "moonphase_waning_gibbous_inverse")
    static let moonphase_waxing_crescent: SymbolExtension = SymbolExtension(rawValue: "moonphase_waxing_crescent")
    static let moonphase_waxing_crescent_inverse: SymbolExtension = SymbolExtension(rawValue: "moonphase_waxing_crescent_inverse")
    static let moonphase_waxing_gibbous: SymbolExtension = SymbolExtension(rawValue: "moonphase_waxing_gibbous")
    static let moonphase_waxing_gibbous_inverse: SymbolExtension = SymbolExtension(rawValue: "moonphase_waxing_gibbous_inverse")
    static let nairasign: SymbolExtension = SymbolExtension(rawValue: "nairasign")
    static let nosign_app: SymbolExtension = SymbolExtension(rawValue: "nosign_app")
    static let nosign_app_fill: SymbolExtension = SymbolExtension(rawValue: "nosign_app_fill")
    static let numbersign: SymbolExtension = SymbolExtension(rawValue: "numbersign")
    static let oar_2_crossed: SymbolExtension = SymbolExtension(rawValue: "oar_2_crossed")
    static let opticaldisc_fill: SymbolExtension = SymbolExtension(rawValue: "opticaldisc_fill")
    static let oven: SymbolExtension = SymbolExtension(rawValue: "oven")
    static let oven_fill: SymbolExtension = SymbolExtension(rawValue: "oven_fill")
    static let parkinglight: SymbolExtension = SymbolExtension(rawValue: "parkinglight")
    static let parkinglight_fill: SymbolExtension = SymbolExtension(rawValue: "parkinglight_fill")
    static let parkingsign_brakesignal: SymbolExtension = SymbolExtension(rawValue: "parkingsign_brakesignal")
    static let parkingsign_brakesignal_slash: SymbolExtension = SymbolExtension(rawValue: "parkingsign_brakesignal_slash")
    static let party_popper: SymbolExtension = SymbolExtension(rawValue: "party_popper")
    static let party_popper_fill: SymbolExtension = SymbolExtension(rawValue: "party_popper_fill")
    static let pedestrian_gate_closed: SymbolExtension = SymbolExtension(rawValue: "pedestrian_gate_closed")
    static let pedestrian_gate_open: SymbolExtension = SymbolExtension(rawValue: "pedestrian_gate_open")
    static let pencil_and_ruler: SymbolExtension = SymbolExtension(rawValue: "pencil_and_ruler")
    static let pencil_and_ruler_fill: SymbolExtension = SymbolExtension(rawValue: "pencil_and_ruler_fill")
    static let pencil_line: SymbolExtension = SymbolExtension(rawValue: "pencil_line")
    static let person_2_badge_gearshape: SymbolExtension = SymbolExtension(rawValue: "person_2_badge_gearshape")
    static let person_2_badge_gearshape_fill: SymbolExtension = SymbolExtension(rawValue: "person_2_badge_gearshape_fill")
    static let person_2_gobackward: SymbolExtension = SymbolExtension(rawValue: "person_2_gobackward")
    static let person_2_slash: SymbolExtension = SymbolExtension(rawValue: "person_2_slash")
    static let person_2_slash_fill: SymbolExtension = SymbolExtension(rawValue: "person_2_slash_fill")
    static let person_and_background_dotted: SymbolExtension = SymbolExtension(rawValue: "person_and_background_dotted")
    static let person_badge_shield_checkmark: SymbolExtension = SymbolExtension(rawValue: "person_badge_shield_checkmark")
    static let person_badge_shield_checkmark_fill: SymbolExtension = SymbolExtension(rawValue: "person_badge_shield_checkmark_fill")
    static let person_bust: SymbolExtension = SymbolExtension(rawValue: "person_bust")
    static let person_bust_fill: SymbolExtension = SymbolExtension(rawValue: "person_bust_fill")
    static let person_crop_rectangle_badge_plus: SymbolExtension = SymbolExtension(rawValue: "person_crop_rectangle_badge_plus")
    static let person_crop_rectangle_badge_plus_fill: SymbolExtension = SymbolExtension(rawValue: "person_crop_rectangle_badge_plus_fill")
    static let person_line_dotted_person: SymbolExtension = SymbolExtension(rawValue: "person_line_dotted_person")
    static let person_line_dotted_person_fill: SymbolExtension = SymbolExtension(rawValue: "person_line_dotted_person_fill")
    static let pesetasign: SymbolExtension = SymbolExtension(rawValue: "pesetasign")
    static let pesosign: SymbolExtension = SymbolExtension(rawValue: "pesosign")
    static let phone_arrow_down_left_fill: SymbolExtension = SymbolExtension(rawValue: "phone_arrow_down_left_fill")
    static let phone_arrow_right_fill: SymbolExtension = SymbolExtension(rawValue: "phone_arrow_right_fill")
    static let phone_arrow_up_right_circle: SymbolExtension = SymbolExtension(rawValue: "phone_arrow_up_right_circle")
    static let phone_arrow_up_right_circle_fill: SymbolExtension = SymbolExtension(rawValue: "phone_arrow_up_right_circle_fill")
    static let phone_arrow_up_right_fill: SymbolExtension = SymbolExtension(rawValue: "phone_arrow_up_right_fill")
    static let phone_badge_checkmark: SymbolExtension = SymbolExtension(rawValue: "phone_badge_checkmark")
    static let phone_connection_fill: SymbolExtension = SymbolExtension(rawValue: "phone_connection_fill")
    static let phone_down_waves_left_and_right: SymbolExtension = SymbolExtension(rawValue: "phone_down_waves_left_and_right")
    static let phone_fill_badge_checkmark: SymbolExtension = SymbolExtension(rawValue: "phone_fill_badge_checkmark")
    static let photo_stack: SymbolExtension = SymbolExtension(rawValue: "photo_stack")
    static let photo_stack_fill: SymbolExtension = SymbolExtension(rawValue: "photo_stack_fill")
    static let pill: SymbolExtension = SymbolExtension(rawValue: "pill")
    static let pill_circle: SymbolExtension = SymbolExtension(rawValue: "pill_circle")
    static let pill_circle_fill: SymbolExtension = SymbolExtension(rawValue: "pill_circle_fill")
    static let pill_fill: SymbolExtension = SymbolExtension(rawValue: "pill_fill")
    static let pipe_and_drop: SymbolExtension = SymbolExtension(rawValue: "pipe_and_drop")
    static let pipe_and_drop_fill: SymbolExtension = SymbolExtension(rawValue: "pipe_and_drop_fill")
    static let play_desktopcomputer: SymbolExtension = SymbolExtension(rawValue: "play_desktopcomputer")
    static let play_display: SymbolExtension = SymbolExtension(rawValue: "play_display")
    static let play_laptopcomputer: SymbolExtension = SymbolExtension(rawValue: "play_laptopcomputer")
    static let playpause_circle: SymbolExtension = SymbolExtension(rawValue: "playpause_circle")
    static let playpause_circle_fill: SymbolExtension = SymbolExtension(rawValue: "playpause_circle_fill")
    static let playstation_logo: SymbolExtension = SymbolExtension(rawValue: "playstation_logo")
    static let popcorn: SymbolExtension = SymbolExtension(rawValue: "popcorn")
    static let popcorn_circle: SymbolExtension = SymbolExtension(rawValue: "popcorn_circle")
    static let popcorn_circle_fill: SymbolExtension = SymbolExtension(rawValue: "popcorn_circle_fill")
    static let popcorn_fill: SymbolExtension = SymbolExtension(rawValue: "popcorn_fill")
    static let poweroutlet_strip: SymbolExtension = SymbolExtension(rawValue: "poweroutlet_strip")
    static let poweroutlet_strip_fill: SymbolExtension = SymbolExtension(rawValue: "poweroutlet_strip_fill")
    static let poweroutlet_type_a: SymbolExtension = SymbolExtension(rawValue: "poweroutlet_type_a")
    static let poweroutlet_type_a_fill: SymbolExtension = SymbolExtension(rawValue: "poweroutlet_type_a_fill")
    static let poweroutlet_type_a_square: SymbolExtension = SymbolExtension(rawValue: "poweroutlet_type_a_square")
    static let poweroutlet_type_a_square_fill: SymbolExtension = SymbolExtension(rawValue: "poweroutlet_type_a_square_fill")
    static let poweroutlet_type_b: SymbolExtension = SymbolExtension(rawValue: "poweroutlet_type_b")
    static let poweroutlet_type_b_fill: SymbolExtension = SymbolExtension(rawValue: "poweroutlet_type_b_fill")
    static let poweroutlet_type_b_square: SymbolExtension = SymbolExtension(rawValue: "poweroutlet_type_b_square")
    static let poweroutlet_type_b_square_fill: SymbolExtension = SymbolExtension(rawValue: "poweroutlet_type_b_square_fill")
    static let poweroutlet_type_c: SymbolExtension = SymbolExtension(rawValue: "poweroutlet_type_c")
    static let poweroutlet_type_c_fill: SymbolExtension = SymbolExtension(rawValue: "poweroutlet_type_c_fill")
    static let poweroutlet_type_c_square: SymbolExtension = SymbolExtension(rawValue: "poweroutlet_type_c_square")
    static let poweroutlet_type_c_square_fill: SymbolExtension = SymbolExtension(rawValue: "poweroutlet_type_c_square_fill")
    static let poweroutlet_type_d: SymbolExtension = SymbolExtension(rawValue: "poweroutlet_type_d")
    static let poweroutlet_type_d_fill: SymbolExtension = SymbolExtension(rawValue: "poweroutlet_type_d_fill")
    static let poweroutlet_type_d_square: SymbolExtension = SymbolExtension(rawValue: "poweroutlet_type_d_square")
    static let poweroutlet_type_d_square_fill: SymbolExtension = SymbolExtension(rawValue: "poweroutlet_type_d_square_fill")
    static let poweroutlet_type_e: SymbolExtension = SymbolExtension(rawValue: "poweroutlet_type_e")
    static let poweroutlet_type_e_fill: SymbolExtension = SymbolExtension(rawValue: "poweroutlet_type_e_fill")
    static let poweroutlet_type_e_square: SymbolExtension = SymbolExtension(rawValue: "poweroutlet_type_e_square")
    static let poweroutlet_type_e_square_fill: SymbolExtension = SymbolExtension(rawValue: "poweroutlet_type_e_square_fill")
    static let poweroutlet_type_f: SymbolExtension = SymbolExtension(rawValue: "poweroutlet_type_f")
    static let poweroutlet_type_f_fill: SymbolExtension = SymbolExtension(rawValue: "poweroutlet_type_f_fill")
    static let poweroutlet_type_f_square: SymbolExtension = SymbolExtension(rawValue: "poweroutlet_type_f_square")
    static let poweroutlet_type_f_square_fill: SymbolExtension = SymbolExtension(rawValue: "poweroutlet_type_f_square_fill")
    static let poweroutlet_type_g: SymbolExtension = SymbolExtension(rawValue: "poweroutlet_type_g")
    static let poweroutlet_type_g_fill: SymbolExtension = SymbolExtension(rawValue: "poweroutlet_type_g_fill")
    static let poweroutlet_type_g_square: SymbolExtension = SymbolExtension(rawValue: "poweroutlet_type_g_square")
    static let poweroutlet_type_g_square_fill: SymbolExtension = SymbolExtension(rawValue: "poweroutlet_type_g_square_fill")
    static let poweroutlet_type_h: SymbolExtension = SymbolExtension(rawValue: "poweroutlet_type_h")
    static let poweroutlet_type_h_fill: SymbolExtension = SymbolExtension(rawValue: "poweroutlet_type_h_fill")
    static let poweroutlet_type_h_square: SymbolExtension = SymbolExtension(rawValue: "poweroutlet_type_h_square")
    static let poweroutlet_type_h_square_fill: SymbolExtension = SymbolExtension(rawValue: "poweroutlet_type_h_square_fill")
    static let poweroutlet_type_i: SymbolExtension = SymbolExtension(rawValue: "poweroutlet_type_i")
    static let poweroutlet_type_i_fill: SymbolExtension = SymbolExtension(rawValue: "poweroutlet_type_i_fill")
    static let poweroutlet_type_i_square: SymbolExtension = SymbolExtension(rawValue: "poweroutlet_type_i_square")
    static let poweroutlet_type_i_square_fill: SymbolExtension = SymbolExtension(rawValue: "poweroutlet_type_i_square_fill")
    static let poweroutlet_type_j: SymbolExtension = SymbolExtension(rawValue: "poweroutlet_type_j")
    static let poweroutlet_type_j_fill: SymbolExtension = SymbolExtension(rawValue: "poweroutlet_type_j_fill")
    static let poweroutlet_type_j_square: SymbolExtension = SymbolExtension(rawValue: "poweroutlet_type_j_square")
    static let poweroutlet_type_j_square_fill: SymbolExtension = SymbolExtension(rawValue: "poweroutlet_type_j_square_fill")
    static let poweroutlet_type_k: SymbolExtension = SymbolExtension(rawValue: "poweroutlet_type_k")
    static let poweroutlet_type_k_fill: SymbolExtension = SymbolExtension(rawValue: "poweroutlet_type_k_fill")
    static let poweroutlet_type_k_square: SymbolExtension = SymbolExtension(rawValue: "poweroutlet_type_k_square")
    static let poweroutlet_type_k_square_fill: SymbolExtension = SymbolExtension(rawValue: "poweroutlet_type_k_square_fill")
    static let poweroutlet_type_l: SymbolExtension = SymbolExtension(rawValue: "poweroutlet_type_l")
    static let poweroutlet_type_l_fill: SymbolExtension = SymbolExtension(rawValue: "poweroutlet_type_l_fill")
    static let poweroutlet_type_l_square: SymbolExtension = SymbolExtension(rawValue: "poweroutlet_type_l_square")
    static let poweroutlet_type_l_square_fill: SymbolExtension = SymbolExtension(rawValue: "poweroutlet_type_l_square_fill")
    static let poweroutlet_type_m: SymbolExtension = SymbolExtension(rawValue: "poweroutlet_type_m")
    static let poweroutlet_type_m_fill: SymbolExtension = SymbolExtension(rawValue: "poweroutlet_type_m_fill")
    static let poweroutlet_type_m_square: SymbolExtension = SymbolExtension(rawValue: "poweroutlet_type_m_square")
    static let poweroutlet_type_m_square_fill: SymbolExtension = SymbolExtension(rawValue: "poweroutlet_type_m_square_fill")
    static let poweroutlet_type_n: SymbolExtension = SymbolExtension(rawValue: "poweroutlet_type_n")
    static let poweroutlet_type_n_fill: SymbolExtension = SymbolExtension(rawValue: "poweroutlet_type_n_fill")
    static let poweroutlet_type_n_square: SymbolExtension = SymbolExtension(rawValue: "poweroutlet_type_n_square")
    static let poweroutlet_type_n_square_fill: SymbolExtension = SymbolExtension(rawValue: "poweroutlet_type_n_square_fill")
    static let poweroutlet_type_o: SymbolExtension = SymbolExtension(rawValue: "poweroutlet_type_o")
    static let poweroutlet_type_o_fill: SymbolExtension = SymbolExtension(rawValue: "poweroutlet_type_o_fill")
    static let poweroutlet_type_o_square: SymbolExtension = SymbolExtension(rawValue: "poweroutlet_type_o_square")
    static let poweroutlet_type_o_square_fill: SymbolExtension = SymbolExtension(rawValue: "poweroutlet_type_o_square_fill")
    static let questionmark_bubble: SymbolExtension = SymbolExtension(rawValue: "questionmark_bubble")
    static let questionmark_bubble_fill: SymbolExtension = SymbolExtension(rawValue: "questionmark_bubble_fill")
    static let quotelevel: SymbolExtension = SymbolExtension(rawValue: "quotelevel")
    static let recordingtape_circle: SymbolExtension = SymbolExtension(rawValue: "recordingtape_circle")
    static let recordingtape_circle_fill: SymbolExtension = SymbolExtension(rawValue: "recordingtape_circle_fill")
    static let rectangle_portrait_and_arrow_forward: SymbolExtension = SymbolExtension(rawValue: "rectangle_portrait_and_arrow_forward")
    static let rectangle_portrait_and_arrow_forward_fill: SymbolExtension = SymbolExtension(rawValue: "rectangle_portrait_and_arrow_forward_fill")
    static let rectangle_portrait_on_rectangle_portrait_angled: SymbolExtension = SymbolExtension(rawValue: "rectangle_portrait_on_rectangle_portrait_angled")
    static let rectangle_portrait_on_rectangle_portrait_angled_fill: SymbolExtension = SymbolExtension(rawValue: "rectangle_portrait_on_rectangle_portrait_angled_fill")
    static let refrigerator: SymbolExtension = SymbolExtension(rawValue: "refrigerator")
    static let refrigerator_fill: SymbolExtension = SymbolExtension(rawValue: "refrigerator_fill")
    static let road_lanes: SymbolExtension = SymbolExtension(rawValue: "road_lanes")
    static let road_lanes_curved_left: SymbolExtension = SymbolExtension(rawValue: "road_lanes_curved_left")
    static let road_lanes_curved_right: SymbolExtension = SymbolExtension(rawValue: "road_lanes_curved_right")
    static let roller_shade_closed: SymbolExtension = SymbolExtension(rawValue: "roller_shade_closed")
    static let roller_shade_open: SymbolExtension = SymbolExtension(rawValue: "roller_shade_open")
    static let roman_shade_closed: SymbolExtension = SymbolExtension(rawValue: "roman_shade_closed")
    static let roman_shade_open: SymbolExtension = SymbolExtension(rawValue: "roman_shade_open")
    static let rublesign: SymbolExtension = SymbolExtension(rawValue: "rublesign")
    static let rupeesign: SymbolExtension = SymbolExtension(rawValue: "rupeesign")
    static let sailboat: SymbolExtension = SymbolExtension(rawValue: "sailboat")
    static let sailboat_fill: SymbolExtension = SymbolExtension(rawValue: "sailboat_fill")
    static let sensor: SymbolExtension = SymbolExtension(rawValue: "sensor")
    static let sensor_fill: SymbolExtension = SymbolExtension(rawValue: "sensor_fill")
    static let shared_with_you: SymbolExtension = SymbolExtension(rawValue: "shared_with_you")
    static let shared_with_you_slash: SymbolExtension = SymbolExtension(rawValue: "shared_with_you_slash")
    static let shazam_logo: SymbolExtension = SymbolExtension(rawValue: "shazam_logo")
    static let shazam_logo_fill: SymbolExtension = SymbolExtension(rawValue: "shazam_logo_fill")
    static let shekelsign: SymbolExtension = SymbolExtension(rawValue: "shekelsign")
    static let shippingbox_and_arrow_backward: SymbolExtension = SymbolExtension(rawValue: "shippingbox_and_arrow_backward")
    static let shippingbox_and_arrow_backward_fill: SymbolExtension = SymbolExtension(rawValue: "shippingbox_and_arrow_backward_fill")
    static let shoeprints_fill: SymbolExtension = SymbolExtension(rawValue: "shoeprints_fill")
    static let shower: SymbolExtension = SymbolExtension(rawValue: "shower")
    static let shower_fill: SymbolExtension = SymbolExtension(rawValue: "shower_fill")
    static let shower_handheld: SymbolExtension = SymbolExtension(rawValue: "shower_handheld")
    static let shower_handheld_fill: SymbolExtension = SymbolExtension(rawValue: "shower_handheld_fill")
    static let shower_sidejet: SymbolExtension = SymbolExtension(rawValue: "shower_sidejet")
    static let shower_sidejet_fill: SymbolExtension = SymbolExtension(rawValue: "shower_sidejet_fill")
    static let sink: SymbolExtension = SymbolExtension(rawValue: "sink")
    static let sink_fill: SymbolExtension = SymbolExtension(rawValue: "sink_fill")
    static let slider_horizontal_2_gobackward: SymbolExtension = SymbolExtension(rawValue: "slider_horizontal_2_gobackward")
    static let slider_horizontal_2_square_badge_arrow_down: SymbolExtension = SymbolExtension(rawValue: "slider_horizontal_2_square_badge_arrow_down")
    static let slider_horizontal_2_square_on_square: SymbolExtension = SymbolExtension(rawValue: "slider_horizontal_2_square_on_square")
    static let slider_horizontal_below_square_and_square_filled: SymbolExtension = SymbolExtension(rawValue: "slider_horizontal_below_square_and_square_filled")
    static let smoke_circle: SymbolExtension = SymbolExtension(rawValue: "smoke_circle")
    static let smoke_circle_fill: SymbolExtension = SymbolExtension(rawValue: "smoke_circle_fill")
    static let soccerball: SymbolExtension = SymbolExtension(rawValue: "soccerball")
    static let soccerball_circle: SymbolExtension = SymbolExtension(rawValue: "soccerball_circle")
    static let soccerball_circle_fill: SymbolExtension = SymbolExtension(rawValue: "soccerball_circle_fill")
    static let soccerball_circle_fill_inverse: SymbolExtension = SymbolExtension(rawValue: "soccerball_circle_fill_inverse")
    static let soccerball_circle_inverse: SymbolExtension = SymbolExtension(rawValue: "soccerball_circle_inverse")
    static let soccerball_inverse: SymbolExtension = SymbolExtension(rawValue: "soccerball_inverse")
    static let sofa: SymbolExtension = SymbolExtension(rawValue: "sofa")
    static let sofa_fill: SymbolExtension = SymbolExtension(rawValue: "sofa_fill")
    static let space: SymbolExtension = SymbolExtension(rawValue: "space")
    static let speaker_minus: SymbolExtension = SymbolExtension(rawValue: "speaker_minus")
    static let speaker_minus_fill: SymbolExtension = SymbolExtension(rawValue: "speaker_minus_fill")
    static let speaker_plus: SymbolExtension = SymbolExtension(rawValue: "speaker_plus")
    static let speaker_plus_fill: SymbolExtension = SymbolExtension(rawValue: "speaker_plus_fill")
    static let speaker_square: SymbolExtension = SymbolExtension(rawValue: "speaker_square")
    static let speaker_square_fill: SymbolExtension = SymbolExtension(rawValue: "speaker_square_fill")
    static let spigot: SymbolExtension = SymbolExtension(rawValue: "spigot")
    static let spigot_fill: SymbolExtension = SymbolExtension(rawValue: "spigot_fill")
    static let sportscourt_circle: SymbolExtension = SymbolExtension(rawValue: "sportscourt_circle")
    static let sportscourt_circle_fill: SymbolExtension = SymbolExtension(rawValue: "sportscourt_circle_fill")
    static let sprinkler: SymbolExtension = SymbolExtension(rawValue: "sprinkler")
    static let sprinkler_and_droplets: SymbolExtension = SymbolExtension(rawValue: "sprinkler_and_droplets")
    static let sprinkler_and_droplets_fill: SymbolExtension = SymbolExtension(rawValue: "sprinkler_and_droplets_fill")
    static let sprinkler_fill: SymbolExtension = SymbolExtension(rawValue: "sprinkler_fill")
    static let square_2_layers_3d: SymbolExtension = SymbolExtension(rawValue: "square_2_layers_3d")
    static let square_2_layers_3d_bottom_filled: SymbolExtension = SymbolExtension(rawValue: "square_2_layers_3d_bottom_filled")
    static let square_2_layers_3d_top_filled: SymbolExtension = SymbolExtension(rawValue: "square_2_layers_3d_top_filled")
    static let square_3_layers_3d: SymbolExtension = SymbolExtension(rawValue: "square_3_layers_3d")
    static let square_3_layers_3d_bottom_filled: SymbolExtension = SymbolExtension(rawValue: "square_3_layers_3d_bottom_filled")
    static let square_3_layers_3d_middle_filled: SymbolExtension = SymbolExtension(rawValue: "square_3_layers_3d_middle_filled")
    static let square_3_layers_3d_slash: SymbolExtension = SymbolExtension(rawValue: "square_3_layers_3d_slash")
    static let square_3_layers_3d_top_filled: SymbolExtension = SymbolExtension(rawValue: "square_3_layers_3d_top_filled")
    static let square_and_pencil_circle: SymbolExtension = SymbolExtension(rawValue: "square_and_pencil_circle")
    static let square_and_pencil_circle_fill: SymbolExtension = SymbolExtension(rawValue: "square_and_pencil_circle_fill")
    static let square_bottomthird_inset_filled: SymbolExtension = SymbolExtension(rawValue: "square_bottomthird_inset_filled")
    static let square_dotted: SymbolExtension = SymbolExtension(rawValue: "square_dotted")
    static let square_leadingthird_inset_filled: SymbolExtension = SymbolExtension(rawValue: "square_leadingthird_inset_filled")
    static let square_leftthird_inset_filled: SymbolExtension = SymbolExtension(rawValue: "square_leftthird_inset_filled")
    static let square_on_square_badge_person_crop: SymbolExtension = SymbolExtension(rawValue: "square_on_square_badge_person_crop")
    static let square_on_square_badge_person_crop_fill: SymbolExtension = SymbolExtension(rawValue: "square_on_square_badge_person_crop_fill")
    static let square_on_square_intersection_dashed: SymbolExtension = SymbolExtension(rawValue: "square_on_square_intersection_dashed")
    static let square_rightthird_inset_filled: SymbolExtension = SymbolExtension(rawValue: "square_rightthird_inset_filled")
    static let square_topthird_inset_filled: SymbolExtension = SymbolExtension(rawValue: "square_topthird_inset_filled")
    static let square_trailingthird_inset_filled: SymbolExtension = SymbolExtension(rawValue: "square_trailingthird_inset_filled")
    static let squares_leading_rectangle: SymbolExtension = SymbolExtension(rawValue: "squares_leading_rectangle")
    static let squareshape_dotted_split_2x2: SymbolExtension = SymbolExtension(rawValue: "squareshape_dotted_split_2x2")
    static let stairs: SymbolExtension = SymbolExtension(rawValue: "stairs")
    static let star_square_on_square: SymbolExtension = SymbolExtension(rawValue: "star_square_on_square")
    static let star_square_on_square_fill: SymbolExtension = SymbolExtension(rawValue: "star_square_on_square_fill")
    static let sterlingsign: SymbolExtension = SymbolExtension(rawValue: "sterlingsign")
    static let stove: SymbolExtension = SymbolExtension(rawValue: "stove")
    static let stove_fill: SymbolExtension = SymbolExtension(rawValue: "stove_fill")
    static let sun_dust_circle: SymbolExtension = SymbolExtension(rawValue: "sun_dust_circle")
    static let sun_dust_circle_fill: SymbolExtension = SymbolExtension(rawValue: "sun_dust_circle_fill")
    static let sun_haze_circle: SymbolExtension = SymbolExtension(rawValue: "sun_haze_circle")
    static let sun_haze_circle_fill: SymbolExtension = SymbolExtension(rawValue: "sun_haze_circle_fill")
    static let sun_max_trianglebadge_exclamationmark: SymbolExtension = SymbolExtension(rawValue: "sun_max_trianglebadge_exclamationmark")
    static let sun_max_trianglebadge_exclamationmark_fill: SymbolExtension = SymbolExtension(rawValue: "sun_max_trianglebadge_exclamationmark_fill")
    static let sunrise_circle: SymbolExtension = SymbolExtension(rawValue: "sunrise_circle")
    static let sunrise_circle_fill: SymbolExtension = SymbolExtension(rawValue: "sunrise_circle_fill")
    static let sunset_circle: SymbolExtension = SymbolExtension(rawValue: "sunset_circle")
    static let sunset_circle_fill: SymbolExtension = SymbolExtension(rawValue: "sunset_circle_fill")
    static let swatchpalette: SymbolExtension = SymbolExtension(rawValue: "swatchpalette")
    static let swatchpalette_fill: SymbolExtension = SymbolExtension(rawValue: "swatchpalette_fill")
    static let switch_programmable: SymbolExtension = SymbolExtension(rawValue: "switch_programmable")
    static let switch_programmable_fill: SymbolExtension = SymbolExtension(rawValue: "switch_programmable_fill")
    static let switch_programmable_square: SymbolExtension = SymbolExtension(rawValue: "switch_programmable_square")
    static let switch_programmable_square_fill: SymbolExtension = SymbolExtension(rawValue: "switch_programmable_square_fill")
    static let syringe: SymbolExtension = SymbolExtension(rawValue: "syringe")
    static let syringe_fill: SymbolExtension = SymbolExtension(rawValue: "syringe_fill")
    static let table_furniture: SymbolExtension = SymbolExtension(rawValue: "table_furniture")
    static let table_furniture_fill: SymbolExtension = SymbolExtension(rawValue: "table_furniture_fill")
    static let teddybear: SymbolExtension = SymbolExtension(rawValue: "teddybear")
    static let teddybear_fill: SymbolExtension = SymbolExtension(rawValue: "teddybear_fill")
    static let tengesign: SymbolExtension = SymbolExtension(rawValue: "tengesign")
    static let tennis_racket: SymbolExtension = SymbolExtension(rawValue: "tennis_racket")
    static let tennis_racket_circle: SymbolExtension = SymbolExtension(rawValue: "tennis_racket_circle")
    static let tennis_racket_circle_fill: SymbolExtension = SymbolExtension(rawValue: "tennis_racket_circle_fill")
    static let tennisball: SymbolExtension = SymbolExtension(rawValue: "tennisball")
    static let tennisball_circle: SymbolExtension = SymbolExtension(rawValue: "tennisball_circle")
    static let tennisball_circle_fill: SymbolExtension = SymbolExtension(rawValue: "tennisball_circle_fill")
    static let tennisball_fill: SymbolExtension = SymbolExtension(rawValue: "tennisball_fill")
    static let tent: SymbolExtension = SymbolExtension(rawValue: "tent")
    static let tent_fill: SymbolExtension = SymbolExtension(rawValue: "tent_fill")
    static let text_line_first_and_arrowtriangle_forward: SymbolExtension = SymbolExtension(rawValue: "text_line_first_and_arrowtriangle_forward")
    static let text_line_last_and_arrowtriangle_forward: SymbolExtension = SymbolExtension(rawValue: "text_line_last_and_arrowtriangle_forward")
    static let text_word_spacing: SymbolExtension = SymbolExtension(rawValue: "text_word_spacing")
    static let textformat_12: SymbolExtension = SymbolExtension(rawValue: "textformat_12")
    static let theatermask_and_paintbrush: SymbolExtension = SymbolExtension(rawValue: "theatermask_and_paintbrush")
    static let theatermask_and_paintbrush_fill: SymbolExtension = SymbolExtension(rawValue: "theatermask_and_paintbrush_fill")
    static let thermometer_brakesignal: SymbolExtension = SymbolExtension(rawValue: "thermometer_brakesignal")
    static let thermometer_high: SymbolExtension = SymbolExtension(rawValue: "thermometer_high")
    static let thermometer_low: SymbolExtension = SymbolExtension(rawValue: "thermometer_low")
    static let thermometer_medium: SymbolExtension = SymbolExtension(rawValue: "thermometer_medium")
    static let thermometer_medium_slash: SymbolExtension = SymbolExtension(rawValue: "thermometer_medium_slash")
    static let thermometer_snowflake_circle: SymbolExtension = SymbolExtension(rawValue: "thermometer_snowflake_circle")
    static let thermometer_snowflake_circle_fill: SymbolExtension = SymbolExtension(rawValue: "thermometer_snowflake_circle_fill")
    static let thermometer_sun_circle: SymbolExtension = SymbolExtension(rawValue: "thermometer_sun_circle")
    static let thermometer_sun_circle_fill: SymbolExtension = SymbolExtension(rawValue: "thermometer_sun_circle_fill")
    static let timer_circle: SymbolExtension = SymbolExtension(rawValue: "timer_circle")
    static let timer_circle_fill: SymbolExtension = SymbolExtension(rawValue: "timer_circle_fill")
    static let toilet: SymbolExtension = SymbolExtension(rawValue: "toilet")
    static let toilet_fill: SymbolExtension = SymbolExtension(rawValue: "toilet_fill")
    static let tornado_circle: SymbolExtension = SymbolExtension(rawValue: "tornado_circle")
    static let tornado_circle_fill: SymbolExtension = SymbolExtension(rawValue: "tornado_circle_fill")
    static let trophy: SymbolExtension = SymbolExtension(rawValue: "trophy")
    static let trophy_circle: SymbolExtension = SymbolExtension(rawValue: "trophy_circle")
    static let trophy_circle_fill: SymbolExtension = SymbolExtension(rawValue: "trophy_circle_fill")
    static let trophy_fill: SymbolExtension = SymbolExtension(rawValue: "trophy_fill")
    static let tropicalstorm_circle: SymbolExtension = SymbolExtension(rawValue: "tropicalstorm_circle")
    static let tropicalstorm_circle_fill: SymbolExtension = SymbolExtension(rawValue: "tropicalstorm_circle_fill")
    static let tugriksign: SymbolExtension = SymbolExtension(rawValue: "tugriksign")
    static let turkishlirasign: SymbolExtension = SymbolExtension(rawValue: "turkishlirasign")
    static let tv_and_mediabox_fill: SymbolExtension = SymbolExtension(rawValue: "tv_and_mediabox_fill")
    static let umbrella_percent: SymbolExtension = SymbolExtension(rawValue: "umbrella_percent")
    static let umbrella_percent_fill: SymbolExtension = SymbolExtension(rawValue: "umbrella_percent_fill")
    static let vial_viewfinder: SymbolExtension = SymbolExtension(rawValue: "vial_viewfinder")
    static let video_doorbell: SymbolExtension = SymbolExtension(rawValue: "video_doorbell")
    static let video_doorbell_fill: SymbolExtension = SymbolExtension(rawValue: "video_doorbell_fill")
    static let videoprojector: SymbolExtension = SymbolExtension(rawValue: "videoprojector")
    static let videoprojector_fill: SymbolExtension = SymbolExtension(rawValue: "videoprojector_fill")
    static let volleyball: SymbolExtension = SymbolExtension(rawValue: "volleyball")
    static let volleyball_circle: SymbolExtension = SymbolExtension(rawValue: "volleyball_circle")
    static let volleyball_circle_fill: SymbolExtension = SymbolExtension(rawValue: "volleyball_circle_fill")
    static let volleyball_fill: SymbolExtension = SymbolExtension(rawValue: "volleyball_fill")
    static let washer: SymbolExtension = SymbolExtension(rawValue: "washer")
    static let washer_fill: SymbolExtension = SymbolExtension(rawValue: "washer_fill")
    static let water_waves: SymbolExtension = SymbolExtension(rawValue: "water_waves")
    static let water_waves_and_arrow_down: SymbolExtension = SymbolExtension(rawValue: "water_waves_and_arrow_down")
    static let water_waves_and_arrow_down_trianglebadge_exclamationmark: SymbolExtension = SymbolExtension(rawValue: "water_waves_and_arrow_down_trianglebadge_exclamationmark")
    static let water_waves_and_arrow_up: SymbolExtension = SymbolExtension(rawValue: "water_waves_and_arrow_up")
    static let water_waves_slash: SymbolExtension = SymbolExtension(rawValue: "water_waves_slash")
    static let waveform_slash: SymbolExtension = SymbolExtension(rawValue: "waveform_slash")
    static let web_camera: SymbolExtension = SymbolExtension(rawValue: "web_camera")
    static let web_camera_fill: SymbolExtension = SymbolExtension(rawValue: "web_camera_fill")
    static let wifi_router: SymbolExtension = SymbolExtension(rawValue: "wifi_router")
    static let wifi_router_fill: SymbolExtension = SymbolExtension(rawValue: "wifi_router_fill")
    static let wind_circle: SymbolExtension = SymbolExtension(rawValue: "wind_circle")
    static let wind_circle_fill: SymbolExtension = SymbolExtension(rawValue: "wind_circle_fill")
    static let wind_snow_circle: SymbolExtension = SymbolExtension(rawValue: "wind_snow_circle")
    static let wind_snow_circle_fill: SymbolExtension = SymbolExtension(rawValue: "wind_snow_circle_fill")
    static let window_awning: SymbolExtension = SymbolExtension(rawValue: "window_awning")
    static let window_awning_closed: SymbolExtension = SymbolExtension(rawValue: "window_awning_closed")
    static let window_casement: SymbolExtension = SymbolExtension(rawValue: "window_casement")
    static let window_casement_closed: SymbolExtension = SymbolExtension(rawValue: "window_casement_closed")
    static let window_ceiling: SymbolExtension = SymbolExtension(rawValue: "window_ceiling")
    static let window_ceiling_closed: SymbolExtension = SymbolExtension(rawValue: "window_ceiling_closed")
    static let window_horizontal: SymbolExtension = SymbolExtension(rawValue: "window_horizontal")
    static let window_horizontal_closed: SymbolExtension = SymbolExtension(rawValue: "window_horizontal_closed")
    static let window_shade_closed: SymbolExtension = SymbolExtension(rawValue: "window_shade_closed")
    static let window_shade_open: SymbolExtension = SymbolExtension(rawValue: "window_shade_open")
    static let window_vertical_closed: SymbolExtension = SymbolExtension(rawValue: "window_vertical_closed")
    static let window_vertical_open: SymbolExtension = SymbolExtension(rawValue: "window_vertical_open")
    static let windshield_front_and_wiper: SymbolExtension = SymbolExtension(rawValue: "windshield_front_and_wiper")
    static let windshield_front_and_wiper_and_drop: SymbolExtension = SymbolExtension(rawValue: "windshield_front_and_wiper_and_drop")
    static let windshield_rear_and_wiper: SymbolExtension = SymbolExtension(rawValue: "windshield_rear_and_wiper")
    static let wineglass: SymbolExtension = SymbolExtension(rawValue: "wineglass")
    static let wineglass_fill: SymbolExtension = SymbolExtension(rawValue: "wineglass_fill")
    static let wonsign: SymbolExtension = SymbolExtension(rawValue: "wonsign")
    static let wrench_adjustable: SymbolExtension = SymbolExtension(rawValue: "wrench_adjustable")
    static let wrench_adjustable_fill: SymbolExtension = SymbolExtension(rawValue: "wrench_adjustable_fill")
    static let xbox_logo: SymbolExtension = SymbolExtension(rawValue: "xbox_logo")
    static let yensign: SymbolExtension = SymbolExtension(rawValue: "yensign")
}
