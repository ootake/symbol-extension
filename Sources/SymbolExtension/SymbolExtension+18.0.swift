//
//  SymbolExtension+18.0.swift
//  Symbol
//
//  Created by otake on 2025/05/05.
//

import Foundation

@available(iOS 18.0, macOS 15.0, *)
@MainActor
public extension SymbolExtension {
    static let _5_arrow_trianglehead_clockwise: SymbolExtension = SymbolExtension(rawValue: "5.arrow.trianglehead.clockwise")
    static let _5_arrow_trianglehead_counterclockwise: SymbolExtension = SymbolExtension(rawValue: "5.arrow.trianglehead.counterclockwise")
    static let _10_arrow_trianglehead_clockwise: SymbolExtension = SymbolExtension(rawValue: "10.arrow.trianglehead.clockwise")
    static let _10_arrow_trianglehead_counterclockwise: SymbolExtension = SymbolExtension(rawValue: "10.arrow.trianglehead.counterclockwise")
    static let _15_arrow_trianglehead_clockwise: SymbolExtension = SymbolExtension(rawValue: "15.arrow.trianglehead.clockwise")
    static let _15_arrow_trianglehead_counterclockwise: SymbolExtension = SymbolExtension(rawValue: "15.arrow.trianglehead.counterclockwise")
    static let _30_arrow_trianglehead_clockwise: SymbolExtension = SymbolExtension(rawValue: "30.arrow.trianglehead.clockwise")
    static let _30_arrow_trianglehead_counterclockwise: SymbolExtension = SymbolExtension(rawValue: "30.arrow.trianglehead.counterclockwise")
    static let _45_arrow_trianglehead_clockwise: SymbolExtension = SymbolExtension(rawValue: "45.arrow.trianglehead.clockwise")
    static let _45_arrow_trianglehead_counterclockwise: SymbolExtension = SymbolExtension(rawValue: "45.arrow.trianglehead.counterclockwise")
    static let _60_arrow_trianglehead_clockwise: SymbolExtension = SymbolExtension(rawValue: "60.arrow.trianglehead.clockwise")
    static let _60_arrow_trianglehead_counterclockwise: SymbolExtension = SymbolExtension(rawValue: "60.arrow.trianglehead.counterclockwise")
    static let _75_arrow_trianglehead_clockwise: SymbolExtension = SymbolExtension(rawValue: "75.arrow.trianglehead.clockwise")
    static let _75_arrow_trianglehead_counterclockwise: SymbolExtension = SymbolExtension(rawValue: "75.arrow.trianglehead.counterclockwise")
    static let _90_arrow_trianglehead_clockwise: SymbolExtension = SymbolExtension(rawValue: "90.arrow.trianglehead.clockwise")
    static let _90_arrow_trianglehead_counterclockwise: SymbolExtension = SymbolExtension(rawValue: "90.arrow.trianglehead.counterclockwise")
    static let air_car_side: SymbolExtension = SymbolExtension(rawValue: "air.car.side")
    static let air_car_side_fill: SymbolExtension = SymbolExtension(rawValue: "air.car.side.fill")
    static let air_convertible_side: SymbolExtension = SymbolExtension(rawValue: "air.convertible.side")
    static let air_convertible_side_fill: SymbolExtension = SymbolExtension(rawValue: "air.convertible.side.fill")
    static let air_pickup_side: SymbolExtension = SymbolExtension(rawValue: "air.pickup.side")
    static let air_pickup_side_fill: SymbolExtension = SymbolExtension(rawValue: "air.pickup.side.fill")
    static let air_suv_side: SymbolExtension = SymbolExtension(rawValue: "air.suv.side")
    static let air_suv_side_fill: SymbolExtension = SymbolExtension(rawValue: "air.suv.side.fill")
    static let airplay_audio: SymbolExtension = SymbolExtension(rawValue: "airplay.audio")
    static let airplay_audio_badge_exclamationmark: SymbolExtension = SymbolExtension(rawValue: "airplay.audio.badge.exclamationmark")
    static let airplay_audio_circle: SymbolExtension = SymbolExtension(rawValue: "airplay.audio.circle")
    static let airplay_audio_circle_fill: SymbolExtension = SymbolExtension(rawValue: "airplay.audio.circle.fill")
    static let airplay_video: SymbolExtension = SymbolExtension(rawValue: "airplay.video")
    static let airplay_video_badge_exclamationmark: SymbolExtension = SymbolExtension(rawValue: "airplay.video.badge.exclamationmark")
    static let airplay_video_circle: SymbolExtension = SymbolExtension(rawValue: "airplay.video.circle")
    static let airplay_video_circle_fill: SymbolExtension = SymbolExtension(rawValue: "airplay.video.circle.fill")
    static let airpods_max: SymbolExtension = SymbolExtension(rawValue: "airpods.max")
    static let airpods_pro: SymbolExtension = SymbolExtension(rawValue: "airpods.pro")
    static let airpods_pro_chargingcase_wireless: SymbolExtension = SymbolExtension(rawValue: "airpods.pro.chargingcase.wireless")
    static let airpods_pro_chargingcase_wireless_fill: SymbolExtension = SymbolExtension(rawValue: "airpods.pro.chargingcase.wireless.fill")
    static let airpods_pro_chargingcase_wireless_radiowaves_left_and_right: SymbolExtension = SymbolExtension(rawValue: "airpods.pro.chargingcase.wireless.radiowaves.left.and.right")
    static let airpods_pro_chargingcase_wireless_radiowaves_left_and_right_fill: SymbolExtension = SymbolExtension(rawValue: "airpods.pro.chargingcase.wireless.radiowaves.left.and.right.fill")
    static let airpods_pro_left: SymbolExtension = SymbolExtension(rawValue: "airpods.pro.left")
    static let airpods_pro_right: SymbolExtension = SymbolExtension(rawValue: "airpods.pro.right")
    static let american_football: SymbolExtension = SymbolExtension(rawValue: "american.football")
    static let american_football_circle: SymbolExtension = SymbolExtension(rawValue: "american.football.circle")
    static let american_football_circle_fill: SymbolExtension = SymbolExtension(rawValue: "american.football.circle.fill")
    static let american_football_fill: SymbolExtension = SymbolExtension(rawValue: "american.football.fill")
    static let american_football_professional: SymbolExtension = SymbolExtension(rawValue: "american.football.professional")
    static let american_football_professional_circle: SymbolExtension = SymbolExtension(rawValue: "american.football.professional.circle")
    static let american_football_professional_circle_fill: SymbolExtension = SymbolExtension(rawValue: "american.football.professional.circle.fill")
    static let american_football_professional_fill: SymbolExtension = SymbolExtension(rawValue: "american.football.professional.fill")
    static let antenna_radiowaves_left_and_right_slash_circle: SymbolExtension = SymbolExtension(rawValue: "antenna.radiowaves.left.and.right.slash.circle")
    static let antenna_radiowaves_left_and_right_slash_circle_fill: SymbolExtension = SymbolExtension(rawValue: "antenna.radiowaves.left.and.right.slash.circle.fill")
    static let app_badge_clock: SymbolExtension = SymbolExtension(rawValue: "app.badge.clock")
    static let app_badge_clock_fill: SymbolExtension = SymbolExtension(rawValue: "app.badge.clock.fill")
    static let append_page: SymbolExtension = SymbolExtension(rawValue: "append.page")
    static let append_page_fill: SymbolExtension = SymbolExtension(rawValue: "append.page.fill")
    static let apple_haptics_and_exclamationmark_triangle: SymbolExtension = SymbolExtension(rawValue: "apple.haptics.and.exclamationmark.triangle")
    static let apple_haptics_and_music_note: SymbolExtension = SymbolExtension(rawValue: "apple.haptics.and.music.note")
    static let apple_haptics_and_music_note_slash: SymbolExtension = SymbolExtension(rawValue: "apple.haptics.and.music.note.slash")
    static let apple_image_playground: SymbolExtension = SymbolExtension(rawValue: "apple.image.playground")
    static let apple_image_playground_fill: SymbolExtension = SymbolExtension(rawValue: "apple.image.playground.fill")
    static let apple_intelligence: SymbolExtension = SymbolExtension(rawValue: "apple.intelligence")
    static let apple_meditate_circle: SymbolExtension = SymbolExtension(rawValue: "apple.meditate.circle")
    static let apple_meditate_circle_fill: SymbolExtension = SymbolExtension(rawValue: "apple.meditate.circle.fill")
    static let applepencil_doubletap: SymbolExtension = SymbolExtension(rawValue: "applepencil.doubletap")
    static let applepencil_hover: SymbolExtension = SymbolExtension(rawValue: "applepencil.hover")
    static let applepencil_squeeze: SymbolExtension = SymbolExtension(rawValue: "applepencil.squeeze")
    static let applewatch_case_sizes: SymbolExtension = SymbolExtension(rawValue: "applewatch.case.sizes")
    static let arcade_stick_and_arrow_left_and_arrow_right_outward: SymbolExtension = SymbolExtension(rawValue: "arcade.stick.and.arrow.left.and.arrow.right.outward")
    static let arrow_backward_circle_dotted: SymbolExtension = SymbolExtension(rawValue: "arrow.backward.circle.dotted")
    static let arrow_down_backward_and_arrow_up_forward_rectangle: SymbolExtension = SymbolExtension(rawValue: "arrow.down.backward.and.arrow.up.forward.rectangle")
    static let arrow_down_backward_and_arrow_up_forward_rectangle_fill: SymbolExtension = SymbolExtension(rawValue: "arrow.down.backward.and.arrow.up.forward.rectangle.fill")
    static let arrow_down_backward_circle_dotted: SymbolExtension = SymbolExtension(rawValue: "arrow.down.backward.circle.dotted")
    static let arrow_down_document: SymbolExtension = SymbolExtension(rawValue: "arrow.down.document")
    static let arrow_down_document_fill: SymbolExtension = SymbolExtension(rawValue: "arrow.down.document.fill")
    static let arrow_down_forward_and_arrow_up_backward_rectangle: SymbolExtension = SymbolExtension(rawValue: "arrow.down.forward.and.arrow.up.backward.rectangle")
    static let arrow_down_forward_and_arrow_up_backward_rectangle_fill: SymbolExtension = SymbolExtension(rawValue: "arrow.down.forward.and.arrow.up.backward.rectangle.fill")
    static let arrow_down_forward_circle_dotted: SymbolExtension = SymbolExtension(rawValue: "arrow.down.forward.circle.dotted")
    static let arrow_down_left_and_arrow_up_right_rectangle: SymbolExtension = SymbolExtension(rawValue: "arrow.down.left.and.arrow.up.right.rectangle")
    static let arrow_down_left_and_arrow_up_right_rectangle_fill: SymbolExtension = SymbolExtension(rawValue: "arrow.down.left.and.arrow.up.right.rectangle.fill")
    static let arrow_down_left_circle_dotted: SymbolExtension = SymbolExtension(rawValue: "arrow.down.left.circle.dotted")
    static let arrow_down_right_and_arrow_up_left_rectangle: SymbolExtension = SymbolExtension(rawValue: "arrow.down.right.and.arrow.up.left.rectangle")
    static let arrow_down_right_and_arrow_up_left_rectangle_fill: SymbolExtension = SymbolExtension(rawValue: "arrow.down.right.and.arrow.up.left.rectangle.fill")
    static let arrow_down_right_circle_dotted: SymbolExtension = SymbolExtension(rawValue: "arrow.down.right.circle.dotted")
    static let arrow_forward_circle_dotted: SymbolExtension = SymbolExtension(rawValue: "arrow.forward.circle.dotted")
    static let arrow_left_circle_dotted: SymbolExtension = SymbolExtension(rawValue: "arrow.left.circle.dotted")
    static let arrow_right_circle_dotted: SymbolExtension = SymbolExtension(rawValue: "arrow.right.circle.dotted")
    static let arrow_right_filled_filter_arrow_right: SymbolExtension = SymbolExtension(rawValue: "arrow.right.filled.filter.arrow.right")
    static let arrow_right_page_on_clipboard: SymbolExtension = SymbolExtension(rawValue: "arrow.right.page.on.clipboard")
    static let arrow_trianglehead_2_clockwise: SymbolExtension = SymbolExtension(rawValue: "arrow.trianglehead.2.clockwise")
    static let arrow_trianglehead_2_clockwise_rotate_90: SymbolExtension = SymbolExtension(rawValue: "arrow.trianglehead.2.clockwise.rotate.90")
    static let arrow_trianglehead_2_clockwise_rotate_90_camera: SymbolExtension = SymbolExtension(rawValue: "arrow.trianglehead.2.clockwise.rotate.90.camera")
    static let arrow_trianglehead_2_clockwise_rotate_90_camera_fill: SymbolExtension = SymbolExtension(rawValue: "arrow.trianglehead.2.clockwise.rotate.90.camera.fill")
    static let arrow_trianglehead_2_clockwise_rotate_90_circle: SymbolExtension = SymbolExtension(rawValue: "arrow.trianglehead.2.clockwise.rotate.90.circle")
    static let arrow_trianglehead_2_clockwise_rotate_90_circle_fill: SymbolExtension = SymbolExtension(rawValue: "arrow.trianglehead.2.clockwise.rotate.90.circle.fill")
    static let arrow_trianglehead_2_clockwise_rotate_90_icloud: SymbolExtension = SymbolExtension(rawValue: "arrow.trianglehead.2.clockwise.rotate.90.icloud")
    static let arrow_trianglehead_2_clockwise_rotate_90_icloud_fill: SymbolExtension = SymbolExtension(rawValue: "arrow.trianglehead.2.clockwise.rotate.90.icloud.fill")
    static let arrow_trianglehead_2_clockwise_rotate_90_page_on_clipboard: SymbolExtension = SymbolExtension(rawValue: "arrow.trianglehead.2.clockwise.rotate.90.page.on.clipboard")
    static let arrow_trianglehead_2_counterclockwise: SymbolExtension = SymbolExtension(rawValue: "arrow.trianglehead.2.counterclockwise")
    static let arrow_trianglehead_2_counterclockwise_rotate_90: SymbolExtension = SymbolExtension(rawValue: "arrow.trianglehead.2.counterclockwise.rotate.90")
    static let arrow_trianglehead_bottomleft_capsulepath_clockwise: SymbolExtension = SymbolExtension(rawValue: "arrow.trianglehead.bottomleft.capsulepath.clockwise")
    static let arrow_trianglehead_branch: SymbolExtension = SymbolExtension(rawValue: "arrow.trianglehead.branch")
    static let arrow_trianglehead_clockwise: SymbolExtension = SymbolExtension(rawValue: "arrow.trianglehead.clockwise")
    static let arrow_trianglehead_clockwise_heart: SymbolExtension = SymbolExtension(rawValue: "arrow.trianglehead.clockwise.heart")
    static let arrow_trianglehead_clockwise_heart_fill: SymbolExtension = SymbolExtension(rawValue: "arrow.trianglehead.clockwise.heart.fill")
    static let arrow_trianglehead_clockwise_icloud: SymbolExtension = SymbolExtension(rawValue: "arrow.trianglehead.clockwise.icloud")
    static let arrow_trianglehead_clockwise_icloud_fill: SymbolExtension = SymbolExtension(rawValue: "arrow.trianglehead.clockwise.icloud.fill")
    static let arrow_trianglehead_clockwise_rotate_90: SymbolExtension = SymbolExtension(rawValue: "arrow.trianglehead.clockwise.rotate.90")
    static let arrow_trianglehead_counterclockwise: SymbolExtension = SymbolExtension(rawValue: "arrow.trianglehead.counterclockwise")
    static let arrow_trianglehead_counterclockwise_icloud: SymbolExtension = SymbolExtension(rawValue: "arrow.trianglehead.counterclockwise.icloud")
    static let arrow_trianglehead_counterclockwise_icloud_fill: SymbolExtension = SymbolExtension(rawValue: "arrow.trianglehead.counterclockwise.icloud.fill")
    static let arrow_trianglehead_counterclockwise_rotate_90: SymbolExtension = SymbolExtension(rawValue: "arrow.trianglehead.counterclockwise.rotate.90")
    static let arrow_trianglehead_left_and_right_righttriangle_left_righttriangle_right: SymbolExtension = SymbolExtension(rawValue: "arrow.trianglehead.left.and.right.righttriangle.left.righttriangle.right")
    static let arrow_trianglehead_left_and_right_righttriangle_left_righttriangle_right_fill: SymbolExtension = SymbolExtension(rawValue: "arrow.trianglehead.left.and.right.righttriangle.left.righttriangle.right.fill")
    static let arrow_trianglehead_merge: SymbolExtension = SymbolExtension(rawValue: "arrow.trianglehead.merge")
    static let arrow_trianglehead_pull: SymbolExtension = SymbolExtension(rawValue: "arrow.trianglehead.pull")
    static let arrow_trianglehead_rectanglepath: SymbolExtension = SymbolExtension(rawValue: "arrow.trianglehead.rectanglepath")
    static let arrow_trianglehead_swap: SymbolExtension = SymbolExtension(rawValue: "arrow.trianglehead.swap")
    static let arrow_trianglehead_topright_capsulepath_clockwise: SymbolExtension = SymbolExtension(rawValue: "arrow.trianglehead.topright.capsulepath.clockwise")
    static let arrow_trianglehead_turn_up_right_circle: SymbolExtension = SymbolExtension(rawValue: "arrow.trianglehead.turn.up.right.circle")
    static let arrow_trianglehead_turn_up_right_circle_fill: SymbolExtension = SymbolExtension(rawValue: "arrow.trianglehead.turn.up.right.circle.fill")
    static let arrow_trianglehead_turn_up_right_diamond: SymbolExtension = SymbolExtension(rawValue: "arrow.trianglehead.turn.up.right.diamond")
    static let arrow_trianglehead_turn_up_right_diamond_fill: SymbolExtension = SymbolExtension(rawValue: "arrow.trianglehead.turn.up.right.diamond.fill")
    static let arrow_trianglehead_up_and_down_righttriangle_up_righttriangle_down: SymbolExtension = SymbolExtension(rawValue: "arrow.trianglehead.up.and.down.righttriangle.up.righttriangle.down")
    static let arrow_trianglehead_up_and_down_righttriangle_up_righttriangle_down_fill: SymbolExtension = SymbolExtension(rawValue: "arrow.trianglehead.up.and.down.righttriangle.up.righttriangle.down.fill")
    static let arrow_up_backward_and_arrow_down_forward_rectangle: SymbolExtension = SymbolExtension(rawValue: "arrow.up.backward.and.arrow.down.forward.rectangle")
    static let arrow_up_backward_and_arrow_down_forward_rectangle_fill: SymbolExtension = SymbolExtension(rawValue: "arrow.up.backward.and.arrow.down.forward.rectangle.fill")
    static let arrow_up_backward_circle_dotted: SymbolExtension = SymbolExtension(rawValue: "arrow.up.backward.circle.dotted")
    static let arrow_up_circle_dotted: SymbolExtension = SymbolExtension(rawValue: "arrow.up.circle.dotted")
    static let arrow_up_document: SymbolExtension = SymbolExtension(rawValue: "arrow.up.document")
    static let arrow_up_document_fill: SymbolExtension = SymbolExtension(rawValue: "arrow.up.document.fill")
    static let arrow_up_forward_and_arrow_down_backward_rectangle: SymbolExtension = SymbolExtension(rawValue: "arrow.up.forward.and.arrow.down.backward.rectangle")
    static let arrow_up_forward_and_arrow_down_backward_rectangle_fill: SymbolExtension = SymbolExtension(rawValue: "arrow.up.forward.and.arrow.down.backward.rectangle.fill")
    static let arrow_up_forward_circle_dotted: SymbolExtension = SymbolExtension(rawValue: "arrow.up.forward.circle.dotted")
    static let arrow_up_left_and_arrow_down_right_rectangle: SymbolExtension = SymbolExtension(rawValue: "arrow.up.left.and.arrow.down.right.rectangle")
    static let arrow_up_left_and_arrow_down_right_rectangle_fill: SymbolExtension = SymbolExtension(rawValue: "arrow.up.left.and.arrow.down.right.rectangle.fill")
    static let arrow_up_left_circle_dotted: SymbolExtension = SymbolExtension(rawValue: "arrow.up.left.circle.dotted")
    static let arrow_up_page_on_clipboard: SymbolExtension = SymbolExtension(rawValue: "arrow.up.page.on.clipboard")
    static let arrow_up_right_circle_dotted: SymbolExtension = SymbolExtension(rawValue: "arrow.up.right.circle.dotted")
    static let australian_football: SymbolExtension = SymbolExtension(rawValue: "australian.football")
    static let australian_football_circle: SymbolExtension = SymbolExtension(rawValue: "australian.football.circle")
    static let australian_football_circle_fill: SymbolExtension = SymbolExtension(rawValue: "australian.football.circle.fill")
    static let australian_football_fill: SymbolExtension = SymbolExtension(rawValue: "australian.football.fill")
    static let australiandollarsign_arrow_trianglehead_counterclockwise_rotate_90: SymbolExtension = SymbolExtension(rawValue: "australiandollarsign.arrow.trianglehead.counterclockwise.rotate.90")
    static let australiandollarsign_bank_building: SymbolExtension = SymbolExtension(rawValue: "australiandollarsign.bank.building")
    static let australiandollarsign_bank_building_fill: SymbolExtension = SymbolExtension(rawValue: "australiandollarsign.bank.building.fill")
    static let australiandollarsign_gauge_chart_lefthalf_righthalf: SymbolExtension = SymbolExtension(rawValue: "australiandollarsign.gauge.chart.lefthalf.righthalf")
    static let australiandollarsign_gauge_chart_leftthird_topthird_rightthird: SymbolExtension = SymbolExtension(rawValue: "australiandollarsign.gauge.chart.leftthird.topthird.rightthird")
    static let australiandollarsign_ring: SymbolExtension = SymbolExtension(rawValue: "australiandollarsign.ring")
    static let australiandollarsign_ring_dashed: SymbolExtension = SymbolExtension(rawValue: "australiandollarsign.ring.dashed")
    static let australsign_arrow_trianglehead_counterclockwise_rotate_90: SymbolExtension = SymbolExtension(rawValue: "australsign.arrow.trianglehead.counterclockwise.rotate.90")
    static let australsign_bank_building: SymbolExtension = SymbolExtension(rawValue: "australsign.bank.building")
    static let australsign_bank_building_fill: SymbolExtension = SymbolExtension(rawValue: "australsign.bank.building.fill")
    static let australsign_gauge_chart_lefthalf_righthalf: SymbolExtension = SymbolExtension(rawValue: "australsign.gauge.chart.lefthalf.righthalf")
    static let australsign_gauge_chart_leftthird_topthird_rightthird: SymbolExtension = SymbolExtension(rawValue: "australsign.gauge.chart.leftthird.topthird.rightthird")
    static let australsign_ring: SymbolExtension = SymbolExtension(rawValue: "australsign.ring")
    static let australsign_ring_dashed: SymbolExtension = SymbolExtension(rawValue: "australsign.ring.dashed")
    static let bahtsign_arrow_trianglehead_counterclockwise_rotate_90: SymbolExtension = SymbolExtension(rawValue: "bahtsign.arrow.trianglehead.counterclockwise.rotate.90")
    static let bahtsign_bank_building: SymbolExtension = SymbolExtension(rawValue: "bahtsign.bank.building")
    static let bahtsign_bank_building_fill: SymbolExtension = SymbolExtension(rawValue: "bahtsign.bank.building.fill")
    static let bahtsign_gauge_chart_lefthalf_righthalf: SymbolExtension = SymbolExtension(rawValue: "bahtsign.gauge.chart.lefthalf.righthalf")
    static let bahtsign_gauge_chart_leftthird_topthird_rightthird: SymbolExtension = SymbolExtension(rawValue: "bahtsign.gauge.chart.leftthird.topthird.rightthird")
    static let bahtsign_ring: SymbolExtension = SymbolExtension(rawValue: "bahtsign.ring")
    static let bahtsign_ring_dashed: SymbolExtension = SymbolExtension(rawValue: "bahtsign.ring.dashed")
    static let base_unit: SymbolExtension = SymbolExtension(rawValue: "base.unit")
    static let baseball_diamond_bases_outs_indicator: SymbolExtension = SymbolExtension(rawValue: "baseball.diamond.bases.outs.indicator")
    static let batteryblock_stack: SymbolExtension = SymbolExtension(rawValue: "batteryblock.stack")
    static let batteryblock_stack_badge_snowflake: SymbolExtension = SymbolExtension(rawValue: "batteryblock.stack.badge.snowflake")
    static let batteryblock_stack_badge_snowflake_fill: SymbolExtension = SymbolExtension(rawValue: "batteryblock.stack.badge.snowflake.fill")
    static let batteryblock_stack_fill: SymbolExtension = SymbolExtension(rawValue: "batteryblock.stack.fill")
    static let batteryblock_stack_trianglebadge_exclamationmark: SymbolExtension = SymbolExtension(rawValue: "batteryblock.stack.trianglebadge.exclamationmark")
    static let batteryblock_stack_trianglebadge_exclamationmark_fill: SymbolExtension = SymbolExtension(rawValue: "batteryblock.stack.trianglebadge.exclamationmark.fill")
    static let beats_powerbeats_pro: SymbolExtension = SymbolExtension(rawValue: "beats.powerbeats.pro")
    static let beats_powerbeats_pro_chargingcase: SymbolExtension = SymbolExtension(rawValue: "beats.powerbeats.pro.chargingcase")
    static let beats_powerbeats_pro_chargingcase_fill: SymbolExtension = SymbolExtension(rawValue: "beats.powerbeats.pro.chargingcase.fill")
    static let beats_powerbeats_pro_left: SymbolExtension = SymbolExtension(rawValue: "beats.powerbeats.pro.left")
    static let beats_powerbeats_pro_right: SymbolExtension = SymbolExtension(rawValue: "beats.powerbeats.pro.right")
    static let beats_studiobuds_left: SymbolExtension = SymbolExtension(rawValue: "beats.studiobuds.left")
    static let beats_studiobuds_plus: SymbolExtension = SymbolExtension(rawValue: "beats.studiobuds.plus")
    static let beats_studiobuds_plus_chargingcase: SymbolExtension = SymbolExtension(rawValue: "beats.studiobuds.plus.chargingcase")
    static let beats_studiobuds_plus_chargingcase_fill: SymbolExtension = SymbolExtension(rawValue: "beats.studiobuds.plus.chargingcase.fill")
    static let beats_studiobuds_plus_left: SymbolExtension = SymbolExtension(rawValue: "beats.studiobuds.plus.left")
    static let beats_studiobuds_plus_right: SymbolExtension = SymbolExtension(rawValue: "beats.studiobuds.plus.right")
    static let beats_studiobuds_right: SymbolExtension = SymbolExtension(rawValue: "beats.studiobuds.right")
    static let beziercurve: SymbolExtension = SymbolExtension(rawValue: "beziercurve")
    static let bitcoinsign_arrow_trianglehead_counterclockwise_rotate_90: SymbolExtension = SymbolExtension(rawValue: "bitcoinsign.arrow.trianglehead.counterclockwise.rotate.90")
    static let bitcoinsign_bank_building: SymbolExtension = SymbolExtension(rawValue: "bitcoinsign.bank.building")
    static let bitcoinsign_bank_building_fill: SymbolExtension = SymbolExtension(rawValue: "bitcoinsign.bank.building.fill")
    static let bitcoinsign_gauge_chart_lefthalf_righthalf: SymbolExtension = SymbolExtension(rawValue: "bitcoinsign.gauge.chart.lefthalf.righthalf")
    static let bitcoinsign_gauge_chart_leftthird_topthird_rightthird: SymbolExtension = SymbolExtension(rawValue: "bitcoinsign.gauge.chart.leftthird.topthird.rightthird")
    static let bitcoinsign_ring: SymbolExtension = SymbolExtension(rawValue: "bitcoinsign.ring")
    static let bitcoinsign_ring_dashed: SymbolExtension = SymbolExtension(rawValue: "bitcoinsign.ring.dashed")
    static let brazilianrealsign_arrow_trianglehead_counterclockwise_rotate_90: SymbolExtension = SymbolExtension(rawValue: "brazilianrealsign.arrow.trianglehead.counterclockwise.rotate.90")
    static let brazilianrealsign_bank_building: SymbolExtension = SymbolExtension(rawValue: "brazilianrealsign.bank.building")
    static let brazilianrealsign_bank_building_fill: SymbolExtension = SymbolExtension(rawValue: "brazilianrealsign.bank.building.fill")
    static let brazilianrealsign_gauge_chart_lefthalf_righthalf: SymbolExtension = SymbolExtension(rawValue: "brazilianrealsign.gauge.chart.lefthalf.righthalf")
    static let brazilianrealsign_gauge_chart_leftthird_topthird_rightthird: SymbolExtension = SymbolExtension(rawValue: "brazilianrealsign.gauge.chart.leftthird.topthird.rightthird")
    static let brazilianrealsign_ring: SymbolExtension = SymbolExtension(rawValue: "brazilianrealsign.ring")
    static let brazilianrealsign_ring_dashed: SymbolExtension = SymbolExtension(rawValue: "brazilianrealsign.ring.dashed")
    static let bubble_and_pencil: SymbolExtension = SymbolExtension(rawValue: "bubble.and.pencil")
    static let calendar_and_person: SymbolExtension = SymbolExtension(rawValue: "calendar.and.person")
    static let camera_macro_slash: SymbolExtension = SymbolExtension(rawValue: "camera.macro.slash")
    static let camera_macro_slash_circle: SymbolExtension = SymbolExtension(rawValue: "camera.macro.slash.circle")
    static let camera_macro_slash_circle_fill: SymbolExtension = SymbolExtension(rawValue: "camera.macro.slash.circle.fill")
    static let capsule_on_capsule: SymbolExtension = SymbolExtension(rawValue: "capsule.on.capsule")
    static let capsule_on_capsule_fill: SymbolExtension = SymbolExtension(rawValue: "capsule.on.capsule.fill")
    static let capsule_on_rectangle: SymbolExtension = SymbolExtension(rawValue: "capsule.on.rectangle")
    static let capsule_on_rectangle_fill: SymbolExtension = SymbolExtension(rawValue: "capsule.on.rectangle.fill")
    static let car_badge_gearshape: SymbolExtension = SymbolExtension(rawValue: "car.badge.gearshape")
    static let car_badge_gearshape_fill: SymbolExtension = SymbolExtension(rawValue: "car.badge.gearshape.fill")
    static let car_front_waves_left_and_right_and_up: SymbolExtension = SymbolExtension(rawValue: "car.front.waves.left.and.right.and.up")
    static let car_front_waves_left_and_right_and_up_fill: SymbolExtension = SymbolExtension(rawValue: "car.front.waves.left.and.right.and.up.fill")
    static let car_rear_and_tire_marks_off: SymbolExtension = SymbolExtension(rawValue: "car.rear.and.tire.marks.off")
    static let car_rear_hazardsign: SymbolExtension = SymbolExtension(rawValue: "car.rear.hazardsign")
    static let car_rear_hazardsign_fill: SymbolExtension = SymbolExtension(rawValue: "car.rear.hazardsign.fill")
    static let car_rear_road_lane_distance_1: SymbolExtension = SymbolExtension(rawValue: "car.rear.road.lane.distance.1")
    static let car_rear_road_lane_distance_1_and_gauge_open_with_lines_needle_67percent_and_arrowtriangle: SymbolExtension = SymbolExtension(rawValue: "car.rear.road.lane.distance.1.and.gauge.open.with.lines.needle.67percent.and.arrowtriangle")
    static let car_rear_road_lane_distance_2: SymbolExtension = SymbolExtension(rawValue: "car.rear.road.lane.distance.2")
    static let car_rear_road_lane_distance_2_and_gauge_open_with_lines_needle_67percent_and_arrowtriangle: SymbolExtension = SymbolExtension(rawValue: "car.rear.road.lane.distance.2.and.gauge.open.with.lines.needle.67percent.and.arrowtriangle")
    static let car_rear_road_lane_distance_3: SymbolExtension = SymbolExtension(rawValue: "car.rear.road.lane.distance.3")
    static let car_rear_road_lane_distance_3_and_gauge_open_with_lines_needle_67percent_and_arrowtriangle: SymbolExtension = SymbolExtension(rawValue: "car.rear.road.lane.distance.3.and.gauge.open.with.lines.needle.67percent.and.arrowtriangle")
    static let car_rear_road_lane_distance_4: SymbolExtension = SymbolExtension(rawValue: "car.rear.road.lane.distance.4")
    static let car_rear_road_lane_distance_4_and_gauge_open_with_lines_needle_67percent_and_arrowtriangle: SymbolExtension = SymbolExtension(rawValue: "car.rear.road.lane.distance.4.and.gauge.open.with.lines.needle.67percent.and.arrowtriangle")
    static let car_rear_road_lane_distance_5: SymbolExtension = SymbolExtension(rawValue: "car.rear.road.lane.distance.5")
    static let car_rear_road_lane_distance_5_and_gauge_open_with_lines_needle_67percent_and_arrowtriangle: SymbolExtension = SymbolExtension(rawValue: "car.rear.road.lane.distance.5.and.gauge.open.with.lines.needle.67percent.and.arrowtriangle")
    static let car_rear_road_lane_off: SymbolExtension = SymbolExtension(rawValue: "car.rear.road.lane.off")
    static let car_rear_road_lane_wave_up: SymbolExtension = SymbolExtension(rawValue: "car.rear.road.lane.wave.up")
    static let car_rear_tilt_road_lanes_curved_right: SymbolExtension = SymbolExtension(rawValue: "car.rear.tilt.road.lanes.curved.right")
    static let car_side_front_open_crop: SymbolExtension = SymbolExtension(rawValue: "car.side.front.open.crop")
    static let car_side_front_open_crop_fill: SymbolExtension = SymbolExtension(rawValue: "car.side.front.open.crop.fill")
    static let car_side_hill_descent_control: SymbolExtension = SymbolExtension(rawValue: "car.side.hill.descent.control")
    static let car_side_hill_descent_control_fill: SymbolExtension = SymbolExtension(rawValue: "car.side.hill.descent.control.fill")
    static let car_side_rear_and_exclamationmark_and_car_side_front_off: SymbolExtension = SymbolExtension(rawValue: "car.side.rear.and.exclamationmark.and.car.side.front.off")
    static let car_side_rear_crop_trunk_partition: SymbolExtension = SymbolExtension(rawValue: "car.side.rear.crop.trunk.partition")
    static let car_side_rear_crop_trunk_partition_fill: SymbolExtension = SymbolExtension(rawValue: "car.side.rear.crop.trunk.partition.fill")
    static let car_side_rear_open_crop: SymbolExtension = SymbolExtension(rawValue: "car.side.rear.open.crop")
    static let car_side_rear_open_crop_fill: SymbolExtension = SymbolExtension(rawValue: "car.side.rear.open.crop.fill")
    static let car_side_rear_tow_hitch: SymbolExtension = SymbolExtension(rawValue: "car.side.rear.tow.hitch")
    static let car_side_rear_tow_hitch_fill: SymbolExtension = SymbolExtension(rawValue: "car.side.rear.tow.hitch.fill")
    static let car_side_roof_cargo_carrier: SymbolExtension = SymbolExtension(rawValue: "car.side.roof.cargo.carrier")
    static let car_side_roof_cargo_carrier_fill: SymbolExtension = SymbolExtension(rawValue: "car.side.roof.cargo.carrier.fill")
    static let car_side_roof_cargo_carrier_slash: SymbolExtension = SymbolExtension(rawValue: "car.side.roof.cargo.carrier.slash")
    static let car_side_roof_cargo_carrier_slash_fill: SymbolExtension = SymbolExtension(rawValue: "car.side.roof.cargo.carrier.slash.fill")
    static let car_top_arrowtriangle_front_left: SymbolExtension = SymbolExtension(rawValue: "car.top.arrowtriangle.front.left")
    static let car_top_arrowtriangle_front_left_fill: SymbolExtension = SymbolExtension(rawValue: "car.top.arrowtriangle.front.left.fill")
    static let car_top_arrowtriangle_front_right: SymbolExtension = SymbolExtension(rawValue: "car.top.arrowtriangle.front.right")
    static let car_top_arrowtriangle_front_right_fill: SymbolExtension = SymbolExtension(rawValue: "car.top.arrowtriangle.front.right.fill")
    static let car_top_arrowtriangle_rear_left: SymbolExtension = SymbolExtension(rawValue: "car.top.arrowtriangle.rear.left")
    static let car_top_arrowtriangle_rear_left_fill: SymbolExtension = SymbolExtension(rawValue: "car.top.arrowtriangle.rear.left.fill")
    static let car_top_arrowtriangle_rear_right: SymbolExtension = SymbolExtension(rawValue: "car.top.arrowtriangle.rear.right")
    static let car_top_arrowtriangle_rear_right_fill: SymbolExtension = SymbolExtension(rawValue: "car.top.arrowtriangle.rear.right.fill")
    static let car_top_front_radiowaves_front_left_and_front_and_front_right: SymbolExtension = SymbolExtension(rawValue: "car.top.front.radiowaves.front.left.and.front.and.front.right")
    static let car_top_front_radiowaves_front_left_and_front_and_front_right_fill: SymbolExtension = SymbolExtension(rawValue: "car.top.front.radiowaves.front.left.and.front.and.front.right.fill")
    static let car_top_radiowaves_rear_left_car_top_front: SymbolExtension = SymbolExtension(rawValue: "car.top.radiowaves.rear.left.car.top.front")
    static let car_top_radiowaves_rear_left_car_top_front_fill: SymbolExtension = SymbolExtension(rawValue: "car.top.radiowaves.rear.left.car.top.front.fill")
    static let car_top_radiowaves_rear_right_car_top_front: SymbolExtension = SymbolExtension(rawValue: "car.top.radiowaves.rear.right.car.top.front")
    static let car_top_radiowaves_rear_right_car_top_front_fill: SymbolExtension = SymbolExtension(rawValue: "car.top.radiowaves.rear.right.car.top.front.fill")
    static let car_top_rear_radiowaves_rear_left_and_rear_and_rear_right: SymbolExtension = SymbolExtension(rawValue: "car.top.rear.radiowaves.rear.left.and.rear.and.rear.right")
    static let car_top_rear_radiowaves_rear_left_and_rear_and_rear_right_fill: SymbolExtension = SymbolExtension(rawValue: "car.top.rear.radiowaves.rear.left.and.rear.and.rear.right.fill")
    static let car_top_video_rear_left: SymbolExtension = SymbolExtension(rawValue: "car.top.video.rear.left")
    static let car_top_video_rear_left_fill: SymbolExtension = SymbolExtension(rawValue: "car.top.video.rear.left.fill")
    static let car_top_video_rear_right: SymbolExtension = SymbolExtension(rawValue: "car.top.video.rear.right")
    static let car_top_video_rear_right_fill: SymbolExtension = SymbolExtension(rawValue: "car.top.video.rear.right.fill")
    static let cart_badge_clock: SymbolExtension = SymbolExtension(rawValue: "cart.badge.clock")
    static let cart_badge_clock_fill: SymbolExtension = SymbolExtension(rawValue: "cart.badge.clock.fill")
    static let cedisign_arrow_trianglehead_counterclockwise_rotate_90: SymbolExtension = SymbolExtension(rawValue: "cedisign.arrow.trianglehead.counterclockwise.rotate.90")
    static let cedisign_bank_building: SymbolExtension = SymbolExtension(rawValue: "cedisign.bank.building")
    static let cedisign_bank_building_fill: SymbolExtension = SymbolExtension(rawValue: "cedisign.bank.building.fill")
    static let cedisign_gauge_chart_lefthalf_righthalf: SymbolExtension = SymbolExtension(rawValue: "cedisign.gauge.chart.lefthalf.righthalf")
    static let cedisign_gauge_chart_leftthird_topthird_rightthird: SymbolExtension = SymbolExtension(rawValue: "cedisign.gauge.chart.leftthird.topthird.rightthird")
    static let cedisign_ring: SymbolExtension = SymbolExtension(rawValue: "cedisign.ring")
    static let cedisign_ring_dashed: SymbolExtension = SymbolExtension(rawValue: "cedisign.ring.dashed")
    static let centsign_arrow_trianglehead_counterclockwise_rotate_90: SymbolExtension = SymbolExtension(rawValue: "centsign.arrow.trianglehead.counterclockwise.rotate.90")
    static let centsign_bank_building: SymbolExtension = SymbolExtension(rawValue: "centsign.bank.building")
    static let centsign_bank_building_fill: SymbolExtension = SymbolExtension(rawValue: "centsign.bank.building.fill")
    static let centsign_gauge_chart_lefthalf_righthalf: SymbolExtension = SymbolExtension(rawValue: "centsign.gauge.chart.lefthalf.righthalf")
    static let centsign_gauge_chart_leftthird_topthird_rightthird: SymbolExtension = SymbolExtension(rawValue: "centsign.gauge.chart.leftthird.topthird.rightthird")
    static let centsign_ring: SymbolExtension = SymbolExtension(rawValue: "centsign.ring")
    static let centsign_ring_dashed: SymbolExtension = SymbolExtension(rawValue: "centsign.ring.dashed")
    static let character_circle: SymbolExtension = SymbolExtension(rawValue: "character.circle")
    static let character_circle_fill: SymbolExtension = SymbolExtension(rawValue: "character.circle.fill")
    static let character_square: SymbolExtension = SymbolExtension(rawValue: "character.square")
    static let character_square_fill: SymbolExtension = SymbolExtension(rawValue: "character.square.fill")
    static let characters_lowercase: SymbolExtension = SymbolExtension(rawValue: "characters.lowercase")
    static let characters_uppercase: SymbolExtension = SymbolExtension(rawValue: "characters.uppercase")
    static let chart_bar_horizontal_page: SymbolExtension = SymbolExtension(rawValue: "chart.bar.horizontal.page")
    static let chart_bar_horizontal_page_fill: SymbolExtension = SymbolExtension(rawValue: "chart.bar.horizontal.page.fill")
    static let chart_bar_yaxis: SymbolExtension = SymbolExtension(rawValue: "chart.bar.yaxis")
    static let chart_line_text_clipboard: SymbolExtension = SymbolExtension(rawValue: "chart.line.text.clipboard")
    static let chart_line_text_clipboard_fill: SymbolExtension = SymbolExtension(rawValue: "chart.line.text.clipboard.fill")
    static let checkmark_arrow_trianglehead_counterclockwise: SymbolExtension = SymbolExtension(rawValue: "checkmark.arrow.trianglehead.counterclockwise")
    static let checkmark_seal_text_page: SymbolExtension = SymbolExtension(rawValue: "checkmark.seal.text.page")
    static let checkmark_seal_text_page_fill: SymbolExtension = SymbolExtension(rawValue: "checkmark.seal.text.page.fill")
    static let chevron_backward_chevron_backward_dotted: SymbolExtension = SymbolExtension(rawValue: "chevron.backward.chevron.backward.dotted")
    static let chevron_compact_left_chevron_compact_right: SymbolExtension = SymbolExtension(rawValue: "chevron.compact.left.chevron.compact.right")
    static let chevron_compact_up_chevron_compact_down: SymbolExtension = SymbolExtension(rawValue: "chevron.compact.up.chevron.compact.down")
    static let chevron_compact_up_chevron_compact_right_chevron_compact_down_chevron_compact_left: SymbolExtension = SymbolExtension(rawValue: "chevron.compact.up.chevron.compact.right.chevron.compact.down.chevron.compact.left")
    static let chevron_down_2: SymbolExtension = SymbolExtension(rawValue: "chevron.down.2")
    static let chevron_down_dotted_2: SymbolExtension = SymbolExtension(rawValue: "chevron.down.dotted.2")
    static let chevron_down_forward_2: SymbolExtension = SymbolExtension(rawValue: "chevron.down.forward.2")
    static let chevron_down_forward_dotted_2: SymbolExtension = SymbolExtension(rawValue: "chevron.down.forward.dotted.2")
    static let chevron_down_right_2: SymbolExtension = SymbolExtension(rawValue: "chevron.down.right.2")
    static let chevron_down_right_dotted_2: SymbolExtension = SymbolExtension(rawValue: "chevron.down.right.dotted.2")
    static let chevron_forward_dotted_chevron_forward: SymbolExtension = SymbolExtension(rawValue: "chevron.forward.dotted.chevron.forward")
    static let chevron_left_chevron_left_dotted: SymbolExtension = SymbolExtension(rawValue: "chevron.left.chevron.left.dotted")
    static let chevron_left_chevron_right: SymbolExtension = SymbolExtension(rawValue: "chevron.left.chevron.right")
    static let chevron_right_dotted_chevron_right: SymbolExtension = SymbolExtension(rawValue: "chevron.right.dotted.chevron.right")
    static let chevron_up_2: SymbolExtension = SymbolExtension(rawValue: "chevron.up.2")
    static let chevron_up_chevron_down_square: SymbolExtension = SymbolExtension(rawValue: "chevron.up.chevron.down.square")
    static let chevron_up_chevron_down_square_fill: SymbolExtension = SymbolExtension(rawValue: "chevron.up.chevron.down.square.fill")
    static let chevron_up_chevron_right_chevron_down_chevron_left: SymbolExtension = SymbolExtension(rawValue: "chevron.up.chevron.right.chevron.down.chevron.left")
    static let chevron_up_dotted_2: SymbolExtension = SymbolExtension(rawValue: "chevron.up.dotted.2")
    static let chevron_up_forward_2: SymbolExtension = SymbolExtension(rawValue: "chevron.up.forward.2")
    static let chevron_up_forward_dotted_2: SymbolExtension = SymbolExtension(rawValue: "chevron.up.forward.dotted.2")
    static let chevron_up_right_2: SymbolExtension = SymbolExtension(rawValue: "chevron.up.right.2")
    static let chevron_up_right_dotted_2: SymbolExtension = SymbolExtension(rawValue: "chevron.up.right.dotted.2")
    static let chineseyuanrenminbisign_arrow_trianglehead_counterclockwise_rotate_90: SymbolExtension = SymbolExtension(rawValue: "chineseyuanrenminbisign.arrow.trianglehead.counterclockwise.rotate.90")
    static let chineseyuanrenminbisign_bank_building: SymbolExtension = SymbolExtension(rawValue: "chineseyuanrenminbisign.bank.building")
    static let chineseyuanrenminbisign_bank_building_fill: SymbolExtension = SymbolExtension(rawValue: "chineseyuanrenminbisign.bank.building.fill")
    static let chineseyuanrenminbisign_gauge_chart_lefthalf_righthalf: SymbolExtension = SymbolExtension(rawValue: "chineseyuanrenminbisign.gauge.chart.lefthalf.righthalf")
    static let chineseyuanrenminbisign_gauge_chart_leftthird_topthird_rightthird: SymbolExtension = SymbolExtension(rawValue: "chineseyuanrenminbisign.gauge.chart.leftthird.topthird.rightthird")
    static let chineseyuanrenminbisign_ring: SymbolExtension = SymbolExtension(rawValue: "chineseyuanrenminbisign.ring")
    static let chineseyuanrenminbisign_ring_dashed: SymbolExtension = SymbolExtension(rawValue: "chineseyuanrenminbisign.ring.dashed")
    static let circle_bottomrighthalf_pattern_checkered: SymbolExtension = SymbolExtension(rawValue: "circle.bottomrighthalf.pattern.checkered")
    static let clock_arrow_trianglehead_2_counterclockwise_rotate_90: SymbolExtension = SymbolExtension(rawValue: "clock.arrow.trianglehead.2.counterclockwise.rotate.90")
    static let clock_arrow_trianglehead_counterclockwise_rotate_90: SymbolExtension = SymbolExtension(rawValue: "clock.arrow.trianglehead.counterclockwise.rotate.90")
    static let cloud_rainbow_crop: SymbolExtension = SymbolExtension(rawValue: "cloud.rainbow.crop")
    static let cloud_rainbow_crop_fill: SymbolExtension = SymbolExtension(rawValue: "cloud.rainbow.crop.fill")
    static let coat: SymbolExtension = SymbolExtension(rawValue: "coat")
    static let coat_fill: SymbolExtension = SymbolExtension(rawValue: "coat.fill")
    static let coloncurrencysign_arrow_trianglehead_counterclockwise_rotate_90: SymbolExtension = SymbolExtension(rawValue: "coloncurrencysign.arrow.trianglehead.counterclockwise.rotate.90")
    static let coloncurrencysign_bank_building: SymbolExtension = SymbolExtension(rawValue: "coloncurrencysign.bank.building")
    static let coloncurrencysign_bank_building_fill: SymbolExtension = SymbolExtension(rawValue: "coloncurrencysign.bank.building.fill")
    static let coloncurrencysign_gauge_chart_lefthalf_righthalf: SymbolExtension = SymbolExtension(rawValue: "coloncurrencysign.gauge.chart.lefthalf.righthalf")
    static let coloncurrencysign_gauge_chart_leftthird_topthird_rightthird: SymbolExtension = SymbolExtension(rawValue: "coloncurrencysign.gauge.chart.leftthird.topthird.rightthird")
    static let coloncurrencysign_ring: SymbolExtension = SymbolExtension(rawValue: "coloncurrencysign.ring")
    static let coloncurrencysign_ring_dashed: SymbolExtension = SymbolExtension(rawValue: "coloncurrencysign.ring.dashed")
    static let convertible_side: SymbolExtension = SymbolExtension(rawValue: "convertible.side")
    static let convertible_side_air_circulate: SymbolExtension = SymbolExtension(rawValue: "convertible.side.air.circulate")
    static let convertible_side_air_circulate_fill: SymbolExtension = SymbolExtension(rawValue: "convertible.side.air.circulate.fill")
    static let convertible_side_air_fresh: SymbolExtension = SymbolExtension(rawValue: "convertible.side.air.fresh")
    static let convertible_side_air_fresh_fill: SymbolExtension = SymbolExtension(rawValue: "convertible.side.air.fresh.fill")
    static let convertible_side_and_exclamationmark: SymbolExtension = SymbolExtension(rawValue: "convertible.side.and.exclamationmark")
    static let convertible_side_and_exclamationmark_fill: SymbolExtension = SymbolExtension(rawValue: "convertible.side.and.exclamationmark.fill")
    static let convertible_side_arrow_trianglehead_backward: SymbolExtension = SymbolExtension(rawValue: "convertible.side.arrow.trianglehead.backward")
    static let convertible_side_arrow_trianglehead_backward_fill: SymbolExtension = SymbolExtension(rawValue: "convertible.side.arrow.trianglehead.backward.fill")
    static let convertible_side_arrow_trianglehead_forward: SymbolExtension = SymbolExtension(rawValue: "convertible.side.arrow.trianglehead.forward")
    static let convertible_side_arrow_trianglehead_forward_and_backward: SymbolExtension = SymbolExtension(rawValue: "convertible.side.arrow.trianglehead.forward.and.backward")
    static let convertible_side_arrow_trianglehead_forward_and_backward_fill: SymbolExtension = SymbolExtension(rawValue: "convertible.side.arrow.trianglehead.forward.and.backward.fill")
    static let convertible_side_arrow_trianglehead_forward_fill: SymbolExtension = SymbolExtension(rawValue: "convertible.side.arrow.trianglehead.forward.fill")
    static let convertible_side_arrowtriangle_down: SymbolExtension = SymbolExtension(rawValue: "convertible.side.arrowtriangle.down")
    static let convertible_side_arrowtriangle_down_fill: SymbolExtension = SymbolExtension(rawValue: "convertible.side.arrowtriangle.down.fill")
    static let convertible_side_arrowtriangle_up: SymbolExtension = SymbolExtension(rawValue: "convertible.side.arrowtriangle.up")
    static let convertible_side_arrowtriangle_up_arrowtriangle_down: SymbolExtension = SymbolExtension(rawValue: "convertible.side.arrowtriangle.up.arrowtriangle.down")
    static let convertible_side_arrowtriangle_up_arrowtriangle_down_fill: SymbolExtension = SymbolExtension(rawValue: "convertible.side.arrowtriangle.up.arrowtriangle.down.fill")
    static let convertible_side_arrowtriangle_up_fill: SymbolExtension = SymbolExtension(rawValue: "convertible.side.arrowtriangle.up.fill")
    static let convertible_side_fill: SymbolExtension = SymbolExtension(rawValue: "convertible.side.fill")
    static let convertible_side_front_open: SymbolExtension = SymbolExtension(rawValue: "convertible.side.front.open")
    static let convertible_side_front_open_crop: SymbolExtension = SymbolExtension(rawValue: "convertible.side.front.open.crop")
    static let convertible_side_front_open_crop_fill: SymbolExtension = SymbolExtension(rawValue: "convertible.side.front.open.crop.fill")
    static let convertible_side_front_open_fill: SymbolExtension = SymbolExtension(rawValue: "convertible.side.front.open.fill")
    static let convertible_side_hill_descent_control: SymbolExtension = SymbolExtension(rawValue: "convertible.side.hill.descent.control")
    static let convertible_side_hill_descent_control_fill: SymbolExtension = SymbolExtension(rawValue: "convertible.side.hill.descent.control.fill")
    static let convertible_side_hill_down: SymbolExtension = SymbolExtension(rawValue: "convertible.side.hill.down")
    static let convertible_side_hill_down_fill: SymbolExtension = SymbolExtension(rawValue: "convertible.side.hill.down.fill")
    static let convertible_side_hill_up: SymbolExtension = SymbolExtension(rawValue: "convertible.side.hill.up")
    static let convertible_side_hill_up_fill: SymbolExtension = SymbolExtension(rawValue: "convertible.side.hill.up.fill")
    static let convertible_side_lock: SymbolExtension = SymbolExtension(rawValue: "convertible.side.lock")
    static let convertible_side_lock_fill: SymbolExtension = SymbolExtension(rawValue: "convertible.side.lock.fill")
    static let convertible_side_lock_open: SymbolExtension = SymbolExtension(rawValue: "convertible.side.lock.open")
    static let convertible_side_lock_open_fill: SymbolExtension = SymbolExtension(rawValue: "convertible.side.lock.open.fill")
    static let cruzeirosign_arrow_trianglehead_counterclockwise_rotate_90: SymbolExtension = SymbolExtension(rawValue: "cruzeirosign.arrow.trianglehead.counterclockwise.rotate.90")
    static let cruzeirosign_bank_building: SymbolExtension = SymbolExtension(rawValue: "cruzeirosign.bank.building")
    static let cruzeirosign_bank_building_fill: SymbolExtension = SymbolExtension(rawValue: "cruzeirosign.bank.building.fill")
    static let cruzeirosign_gauge_chart_lefthalf_righthalf: SymbolExtension = SymbolExtension(rawValue: "cruzeirosign.gauge.chart.lefthalf.righthalf")
    static let cruzeirosign_gauge_chart_leftthird_topthird_rightthird: SymbolExtension = SymbolExtension(rawValue: "cruzeirosign.gauge.chart.leftthird.topthird.rightthird")
    static let cruzeirosign_ring: SymbolExtension = SymbolExtension(rawValue: "cruzeirosign.ring")
    static let cruzeirosign_ring_dashed: SymbolExtension = SymbolExtension(rawValue: "cruzeirosign.ring.dashed")
    static let cup_and_heat_waves: SymbolExtension = SymbolExtension(rawValue: "cup.and.heat.waves")
    static let cup_and_heat_waves_fill: SymbolExtension = SymbolExtension(rawValue: "cup.and.heat.waves.fill")
    static let danishkronesign_arrow_trianglehead_counterclockwise_rotate_90: SymbolExtension = SymbolExtension(rawValue: "danishkronesign.arrow.trianglehead.counterclockwise.rotate.90")
    static let danishkronesign_bank_building: SymbolExtension = SymbolExtension(rawValue: "danishkronesign.bank.building")
    static let danishkronesign_bank_building_fill: SymbolExtension = SymbolExtension(rawValue: "danishkronesign.bank.building.fill")
    static let danishkronesign_gauge_chart_lefthalf_righthalf: SymbolExtension = SymbolExtension(rawValue: "danishkronesign.gauge.chart.lefthalf.righthalf")
    static let danishkronesign_gauge_chart_leftthird_topthird_rightthird: SymbolExtension = SymbolExtension(rawValue: "danishkronesign.gauge.chart.leftthird.topthird.rightthird")
    static let danishkronesign_ring: SymbolExtension = SymbolExtension(rawValue: "danishkronesign.ring")
    static let danishkronesign_ring_dashed: SymbolExtension = SymbolExtension(rawValue: "danishkronesign.ring.dashed")
    static let degreesign_celsius: SymbolExtension = SymbolExtension(rawValue: "degreesign.celsius")
    static let degreesign_fahrenheit: SymbolExtension = SymbolExtension(rawValue: "degreesign.fahrenheit")
    static let desktopcomputer_and_macbook: SymbolExtension = SymbolExtension(rawValue: "desktopcomputer.and.macbook")
    static let distribute_horizontal: SymbolExtension = SymbolExtension(rawValue: "distribute.horizontal")
    static let distribute_horizontal_fill: SymbolExtension = SymbolExtension(rawValue: "distribute.horizontal.fill")
    static let distribute_vertical: SymbolExtension = SymbolExtension(rawValue: "distribute.vertical")
    static let distribute_vertical_fill: SymbolExtension = SymbolExtension(rawValue: "distribute.vertical.fill")
    static let document: SymbolExtension = SymbolExtension(rawValue: "document")
    static let document_badge_arrow_up: SymbolExtension = SymbolExtension(rawValue: "document.badge.arrow.up")
    static let document_badge_arrow_up_fill: SymbolExtension = SymbolExtension(rawValue: "document.badge.arrow.up.fill")
    static let document_badge_clock: SymbolExtension = SymbolExtension(rawValue: "document.badge.clock")
    static let document_badge_clock_fill: SymbolExtension = SymbolExtension(rawValue: "document.badge.clock.fill")
    static let document_badge_ellipsis: SymbolExtension = SymbolExtension(rawValue: "document.badge.ellipsis")
    static let document_badge_ellipsis_fill: SymbolExtension = SymbolExtension(rawValue: "document.badge.ellipsis.fill")
    static let document_badge_gearshape: SymbolExtension = SymbolExtension(rawValue: "document.badge.gearshape")
    static let document_badge_gearshape_fill: SymbolExtension = SymbolExtension(rawValue: "document.badge.gearshape.fill")
    static let document_badge_plus: SymbolExtension = SymbolExtension(rawValue: "document.badge.plus")
    static let document_badge_plus_fill: SymbolExtension = SymbolExtension(rawValue: "document.badge.plus.fill")
    static let document_circle: SymbolExtension = SymbolExtension(rawValue: "document.circle")
    static let document_circle_fill: SymbolExtension = SymbolExtension(rawValue: "document.circle.fill")
    static let document_fill: SymbolExtension = SymbolExtension(rawValue: "document.fill")
    static let document_on_clipboard: SymbolExtension = SymbolExtension(rawValue: "document.on.clipboard")
    static let document_on_clipboard_fill: SymbolExtension = SymbolExtension(rawValue: "document.on.clipboard.fill")
    static let document_on_document: SymbolExtension = SymbolExtension(rawValue: "document.on.document")
    static let document_on_document_fill: SymbolExtension = SymbolExtension(rawValue: "document.on.document.fill")
    static let document_viewfinder: SymbolExtension = SymbolExtension(rawValue: "document.viewfinder")
    static let document_viewfinder_fill: SymbolExtension = SymbolExtension(rawValue: "document.viewfinder.fill")
    static let dollarsign_arrow_trianglehead_counterclockwise_rotate_90: SymbolExtension = SymbolExtension(rawValue: "dollarsign.arrow.trianglehead.counterclockwise.rotate.90")
    static let dollarsign_bank_building: SymbolExtension = SymbolExtension(rawValue: "dollarsign.bank.building")
    static let dollarsign_bank_building_fill: SymbolExtension = SymbolExtension(rawValue: "dollarsign.bank.building.fill")
    static let dollarsign_gauge_chart_lefthalf_righthalf: SymbolExtension = SymbolExtension(rawValue: "dollarsign.gauge.chart.lefthalf.righthalf")
    static let dollarsign_gauge_chart_leftthird_topthird_rightthird: SymbolExtension = SymbolExtension(rawValue: "dollarsign.gauge.chart.leftthird.topthird.rightthird")
    static let dollarsign_ring: SymbolExtension = SymbolExtension(rawValue: "dollarsign.ring")
    static let dollarsign_ring_dashed: SymbolExtension = SymbolExtension(rawValue: "dollarsign.ring.dashed")
    static let dongsign_arrow_trianglehead_counterclockwise_rotate_90: SymbolExtension = SymbolExtension(rawValue: "dongsign.arrow.trianglehead.counterclockwise.rotate.90")
    static let dongsign_bank_building: SymbolExtension = SymbolExtension(rawValue: "dongsign.bank.building")
    static let dongsign_bank_building_fill: SymbolExtension = SymbolExtension(rawValue: "dongsign.bank.building.fill")
    static let dongsign_gauge_chart_lefthalf_righthalf: SymbolExtension = SymbolExtension(rawValue: "dongsign.gauge.chart.lefthalf.righthalf")
    static let dongsign_gauge_chart_leftthird_topthird_rightthird: SymbolExtension = SymbolExtension(rawValue: "dongsign.gauge.chart.leftthird.topthird.rightthird")
    static let dongsign_ring: SymbolExtension = SymbolExtension(rawValue: "dongsign.ring")
    static let dongsign_ring_dashed: SymbolExtension = SymbolExtension(rawValue: "dongsign.ring.dashed")
    static let drone: SymbolExtension = SymbolExtension(rawValue: "drone")
    static let drone_fill: SymbolExtension = SymbolExtension(rawValue: "drone.fill")
    static let duffle_bag: SymbolExtension = SymbolExtension(rawValue: "duffle.bag")
    static let duffle_bag_fill: SymbolExtension = SymbolExtension(rawValue: "duffle.bag.fill")
    static let ecg_text_page: SymbolExtension = SymbolExtension(rawValue: "ecg.text.page")
    static let ecg_text_page_fill: SymbolExtension = SymbolExtension(rawValue: "ecg.text.page.fill")
    static let engine_emission_and_exclamationmark: SymbolExtension = SymbolExtension(rawValue: "engine.emission.and.exclamationmark")
    static let engine_emission_and_filter: SymbolExtension = SymbolExtension(rawValue: "engine.emission.and.filter")
    static let envelope_and_arrow_trianglehead_branch: SymbolExtension = SymbolExtension(rawValue: "envelope.and.arrow.trianglehead.branch")
    static let envelope_and_arrow_trianglehead_branch_fill: SymbolExtension = SymbolExtension(rawValue: "envelope.and.arrow.trianglehead.branch.fill")
    static let envelope_front: SymbolExtension = SymbolExtension(rawValue: "envelope.front")
    static let envelope_front_fill: SymbolExtension = SymbolExtension(rawValue: "envelope.front.fill")
    static let eurosign_arrow_trianglehead_counterclockwise_rotate_90: SymbolExtension = SymbolExtension(rawValue: "eurosign.arrow.trianglehead.counterclockwise.rotate.90")
    static let eurosign_bank_building: SymbolExtension = SymbolExtension(rawValue: "eurosign.bank.building")
    static let eurosign_bank_building_fill: SymbolExtension = SymbolExtension(rawValue: "eurosign.bank.building.fill")
    static let eurosign_gauge_chart_lefthalf_righthalf: SymbolExtension = SymbolExtension(rawValue: "eurosign.gauge.chart.lefthalf.righthalf")
    static let eurosign_gauge_chart_leftthird_topthird_rightthird: SymbolExtension = SymbolExtension(rawValue: "eurosign.gauge.chart.leftthird.topthird.rightthird")
    static let eurosign_ring: SymbolExtension = SymbolExtension(rawValue: "eurosign.ring")
    static let eurosign_ring_dashed: SymbolExtension = SymbolExtension(rawValue: "eurosign.ring.dashed")
    static let eurozonesign_arrow_trianglehead_counterclockwise_rotate_90: SymbolExtension = SymbolExtension(rawValue: "eurozonesign.arrow.trianglehead.counterclockwise.rotate.90")
    static let eurozonesign_bank_building: SymbolExtension = SymbolExtension(rawValue: "eurozonesign.bank.building")
    static let eurozonesign_bank_building_fill: SymbolExtension = SymbolExtension(rawValue: "eurozonesign.bank.building.fill")
    static let eurozonesign_gauge_chart_lefthalf_righthalf: SymbolExtension = SymbolExtension(rawValue: "eurozonesign.gauge.chart.lefthalf.righthalf")
    static let eurozonesign_gauge_chart_leftthird_topthird_rightthird: SymbolExtension = SymbolExtension(rawValue: "eurozonesign.gauge.chart.leftthird.topthird.rightthird")
    static let eurozonesign_ring: SymbolExtension = SymbolExtension(rawValue: "eurozonesign.ring")
    static let eurozonesign_ring_dashed: SymbolExtension = SymbolExtension(rawValue: "eurozonesign.ring.dashed")
    static let exclamationmark_arrow_trianglehead_2_clockwise_rotate_90: SymbolExtension = SymbolExtension(rawValue: "exclamationmark.arrow.trianglehead.2.clockwise.rotate.90")
    static let exclamationmark_arrow_trianglehead_counterclockwise_rotate_90: SymbolExtension = SymbolExtension(rawValue: "exclamationmark.arrow.trianglehead.counterclockwise.rotate.90")
    static let figure_2_left_holdinghands: SymbolExtension = SymbolExtension(rawValue: "figure.2.left.holdinghands")
    static let figure_2_right_holdinghands: SymbolExtension = SymbolExtension(rawValue: "figure.2.right.holdinghands")
    static let figure_american_football_circle: SymbolExtension = SymbolExtension(rawValue: "figure.american.football.circle")
    static let figure_american_football_circle_fill: SymbolExtension = SymbolExtension(rawValue: "figure.american.football.circle.fill")
    static let figure_archery_circle: SymbolExtension = SymbolExtension(rawValue: "figure.archery.circle")
    static let figure_archery_circle_fill: SymbolExtension = SymbolExtension(rawValue: "figure.archery.circle.fill")
    static let figure_australian_football_circle: SymbolExtension = SymbolExtension(rawValue: "figure.australian.football.circle")
    static let figure_australian_football_circle_fill: SymbolExtension = SymbolExtension(rawValue: "figure.australian.football.circle.fill")
    static let figure_badminton_circle: SymbolExtension = SymbolExtension(rawValue: "figure.badminton.circle")
    static let figure_badminton_circle_fill: SymbolExtension = SymbolExtension(rawValue: "figure.badminton.circle.fill")
    static let figure_barre_circle: SymbolExtension = SymbolExtension(rawValue: "figure.barre.circle")
    static let figure_barre_circle_fill: SymbolExtension = SymbolExtension(rawValue: "figure.barre.circle.fill")
    static let figure_baseball_circle: SymbolExtension = SymbolExtension(rawValue: "figure.baseball.circle")
    static let figure_baseball_circle_fill: SymbolExtension = SymbolExtension(rawValue: "figure.baseball.circle.fill")
    static let figure_basketball_circle: SymbolExtension = SymbolExtension(rawValue: "figure.basketball.circle")
    static let figure_basketball_circle_fill: SymbolExtension = SymbolExtension(rawValue: "figure.basketball.circle.fill")
    static let figure_bowling_circle: SymbolExtension = SymbolExtension(rawValue: "figure.bowling.circle")
    static let figure_bowling_circle_fill: SymbolExtension = SymbolExtension(rawValue: "figure.bowling.circle.fill")
    static let figure_boxing_circle: SymbolExtension = SymbolExtension(rawValue: "figure.boxing.circle")
    static let figure_boxing_circle_fill: SymbolExtension = SymbolExtension(rawValue: "figure.boxing.circle.fill")
    static let figure_climbing_circle: SymbolExtension = SymbolExtension(rawValue: "figure.climbing.circle")
    static let figure_climbing_circle_fill: SymbolExtension = SymbolExtension(rawValue: "figure.climbing.circle.fill")
    static let figure_cooldown_circle: SymbolExtension = SymbolExtension(rawValue: "figure.cooldown.circle")
    static let figure_cooldown_circle_fill: SymbolExtension = SymbolExtension(rawValue: "figure.cooldown.circle.fill")
    static let figure_core_training_circle: SymbolExtension = SymbolExtension(rawValue: "figure.core.training.circle")
    static let figure_core_training_circle_fill: SymbolExtension = SymbolExtension(rawValue: "figure.core.training.circle.fill")
    static let figure_cricket_circle: SymbolExtension = SymbolExtension(rawValue: "figure.cricket.circle")
    static let figure_cricket_circle_fill: SymbolExtension = SymbolExtension(rawValue: "figure.cricket.circle.fill")
    static let figure_cross_training_circle: SymbolExtension = SymbolExtension(rawValue: "figure.cross.training.circle")
    static let figure_cross_training_circle_fill: SymbolExtension = SymbolExtension(rawValue: "figure.cross.training.circle.fill")
    static let figure_curling_circle: SymbolExtension = SymbolExtension(rawValue: "figure.curling.circle")
    static let figure_curling_circle_fill: SymbolExtension = SymbolExtension(rawValue: "figure.curling.circle.fill")
    static let figure_dance_circle: SymbolExtension = SymbolExtension(rawValue: "figure.dance.circle")
    static let figure_dance_circle_fill: SymbolExtension = SymbolExtension(rawValue: "figure.dance.circle.fill")
    static let figure_disc_sports_circle: SymbolExtension = SymbolExtension(rawValue: "figure.disc.sports.circle")
    static let figure_disc_sports_circle_fill: SymbolExtension = SymbolExtension(rawValue: "figure.disc.sports.circle.fill")
    static let figure_elliptical_circle: SymbolExtension = SymbolExtension(rawValue: "figure.elliptical.circle")
    static let figure_elliptical_circle_fill: SymbolExtension = SymbolExtension(rawValue: "figure.elliptical.circle.fill")
    static let figure_equestrian_sports_circle: SymbolExtension = SymbolExtension(rawValue: "figure.equestrian.sports.circle")
    static let figure_equestrian_sports_circle_fill: SymbolExtension = SymbolExtension(rawValue: "figure.equestrian.sports.circle.fill")
    static let figure_fencing_circle: SymbolExtension = SymbolExtension(rawValue: "figure.fencing.circle")
    static let figure_fencing_circle_fill: SymbolExtension = SymbolExtension(rawValue: "figure.fencing.circle.fill")
    static let figure_field_hockey: SymbolExtension = SymbolExtension(rawValue: "figure.field.hockey")
    static let figure_field_hockey_circle: SymbolExtension = SymbolExtension(rawValue: "figure.field.hockey.circle")
    static let figure_field_hockey_circle_fill: SymbolExtension = SymbolExtension(rawValue: "figure.field.hockey.circle.fill")
    static let figure_fishing_circle: SymbolExtension = SymbolExtension(rawValue: "figure.fishing.circle")
    static let figure_fishing_circle_fill: SymbolExtension = SymbolExtension(rawValue: "figure.fishing.circle.fill")
    static let figure_flexibility_circle: SymbolExtension = SymbolExtension(rawValue: "figure.flexibility.circle")
    static let figure_flexibility_circle_fill: SymbolExtension = SymbolExtension(rawValue: "figure.flexibility.circle.fill")
    static let figure_golf_circle: SymbolExtension = SymbolExtension(rawValue: "figure.golf.circle")
    static let figure_golf_circle_fill: SymbolExtension = SymbolExtension(rawValue: "figure.golf.circle.fill")
    static let figure_gymnastics_circle: SymbolExtension = SymbolExtension(rawValue: "figure.gymnastics.circle")
    static let figure_gymnastics_circle_fill: SymbolExtension = SymbolExtension(rawValue: "figure.gymnastics.circle.fill")
    static let figure_hand_cycling_circle: SymbolExtension = SymbolExtension(rawValue: "figure.hand.cycling.circle")
    static let figure_hand_cycling_circle_fill: SymbolExtension = SymbolExtension(rawValue: "figure.hand.cycling.circle.fill")
    static let figure_handball_circle: SymbolExtension = SymbolExtension(rawValue: "figure.handball.circle")
    static let figure_handball_circle_fill: SymbolExtension = SymbolExtension(rawValue: "figure.handball.circle.fill")
    static let figure_highintensity_intervaltraining_circle: SymbolExtension = SymbolExtension(rawValue: "figure.highintensity.intervaltraining.circle")
    static let figure_highintensity_intervaltraining_circle_fill: SymbolExtension = SymbolExtension(rawValue: "figure.highintensity.intervaltraining.circle.fill")
    static let figure_hiking_circle: SymbolExtension = SymbolExtension(rawValue: "figure.hiking.circle")
    static let figure_hiking_circle_fill: SymbolExtension = SymbolExtension(rawValue: "figure.hiking.circle.fill")
    static let figure_hockey_circle: SymbolExtension = SymbolExtension(rawValue: "figure.hockey.circle")
    static let figure_hockey_circle_fill: SymbolExtension = SymbolExtension(rawValue: "figure.hockey.circle.fill")
    static let figure_hunting_circle: SymbolExtension = SymbolExtension(rawValue: "figure.hunting.circle")
    static let figure_hunting_circle_fill: SymbolExtension = SymbolExtension(rawValue: "figure.hunting.circle.fill")
    static let figure_ice_hockey: SymbolExtension = SymbolExtension(rawValue: "figure.ice.hockey")
    static let figure_ice_hockey_circle: SymbolExtension = SymbolExtension(rawValue: "figure.ice.hockey.circle")
    static let figure_ice_hockey_circle_fill: SymbolExtension = SymbolExtension(rawValue: "figure.ice.hockey.circle.fill")
    static let figure_ice_skating: SymbolExtension = SymbolExtension(rawValue: "figure.ice.skating")
    static let figure_ice_skating_circle: SymbolExtension = SymbolExtension(rawValue: "figure.ice.skating.circle")
    static let figure_ice_skating_circle_fill: SymbolExtension = SymbolExtension(rawValue: "figure.ice.skating.circle.fill")
    static let figure_indoor_cycle_circle: SymbolExtension = SymbolExtension(rawValue: "figure.indoor.cycle.circle")
    static let figure_indoor_cycle_circle_fill: SymbolExtension = SymbolExtension(rawValue: "figure.indoor.cycle.circle.fill")
    static let figure_indoor_rowing: SymbolExtension = SymbolExtension(rawValue: "figure.indoor.rowing")
    static let figure_indoor_rowing_circle: SymbolExtension = SymbolExtension(rawValue: "figure.indoor.rowing.circle")
    static let figure_indoor_rowing_circle_fill: SymbolExtension = SymbolExtension(rawValue: "figure.indoor.rowing.circle.fill")
    static let figure_indoor_soccer: SymbolExtension = SymbolExtension(rawValue: "figure.indoor.soccer")
    static let figure_indoor_soccer_circle: SymbolExtension = SymbolExtension(rawValue: "figure.indoor.soccer.circle")
    static let figure_indoor_soccer_circle_fill: SymbolExtension = SymbolExtension(rawValue: "figure.indoor.soccer.circle.fill")
    static let figure_jumprope_circle: SymbolExtension = SymbolExtension(rawValue: "figure.jumprope.circle")
    static let figure_jumprope_circle_fill: SymbolExtension = SymbolExtension(rawValue: "figure.jumprope.circle.fill")
    static let figure_kickboxing_circle: SymbolExtension = SymbolExtension(rawValue: "figure.kickboxing.circle")
    static let figure_kickboxing_circle_fill: SymbolExtension = SymbolExtension(rawValue: "figure.kickboxing.circle.fill")
    static let figure_lacrosse_circle: SymbolExtension = SymbolExtension(rawValue: "figure.lacrosse.circle")
    static let figure_lacrosse_circle_fill: SymbolExtension = SymbolExtension(rawValue: "figure.lacrosse.circle.fill")
    static let figure_martial_arts_circle: SymbolExtension = SymbolExtension(rawValue: "figure.martial.arts.circle")
    static let figure_martial_arts_circle_fill: SymbolExtension = SymbolExtension(rawValue: "figure.martial.arts.circle.fill")
    static let figure_mind_and_body_circle: SymbolExtension = SymbolExtension(rawValue: "figure.mind.and.body.circle")
    static let figure_mind_and_body_circle_fill: SymbolExtension = SymbolExtension(rawValue: "figure.mind.and.body.circle.fill")
    static let figure_mixed_cardio_circle: SymbolExtension = SymbolExtension(rawValue: "figure.mixed.cardio.circle")
    static let figure_mixed_cardio_circle_fill: SymbolExtension = SymbolExtension(rawValue: "figure.mixed.cardio.circle.fill")
    static let figure_open_water_swim_circle: SymbolExtension = SymbolExtension(rawValue: "figure.open.water.swim.circle")
    static let figure_open_water_swim_circle_fill: SymbolExtension = SymbolExtension(rawValue: "figure.open.water.swim.circle.fill")
    static let figure_outdoor_cycle_circle: SymbolExtension = SymbolExtension(rawValue: "figure.outdoor.cycle.circle")
    static let figure_outdoor_cycle_circle_fill: SymbolExtension = SymbolExtension(rawValue: "figure.outdoor.cycle.circle.fill")
    static let figure_outdoor_rowing: SymbolExtension = SymbolExtension(rawValue: "figure.outdoor.rowing")
    static let figure_outdoor_rowing_circle: SymbolExtension = SymbolExtension(rawValue: "figure.outdoor.rowing.circle")
    static let figure_outdoor_rowing_circle_fill: SymbolExtension = SymbolExtension(rawValue: "figure.outdoor.rowing.circle.fill")
    static let figure_outdoor_soccer: SymbolExtension = SymbolExtension(rawValue: "figure.outdoor.soccer")
    static let figure_outdoor_soccer_circle: SymbolExtension = SymbolExtension(rawValue: "figure.outdoor.soccer.circle")
    static let figure_outdoor_soccer_circle_fill: SymbolExtension = SymbolExtension(rawValue: "figure.outdoor.soccer.circle.fill")
    static let figure_pickleball_circle: SymbolExtension = SymbolExtension(rawValue: "figure.pickleball.circle")
    static let figure_pickleball_circle_fill: SymbolExtension = SymbolExtension(rawValue: "figure.pickleball.circle.fill")
    static let figure_pilates_circle: SymbolExtension = SymbolExtension(rawValue: "figure.pilates.circle")
    static let figure_pilates_circle_fill: SymbolExtension = SymbolExtension(rawValue: "figure.pilates.circle.fill")
    static let figure_play_circle: SymbolExtension = SymbolExtension(rawValue: "figure.play.circle")
    static let figure_play_circle_fill: SymbolExtension = SymbolExtension(rawValue: "figure.play.circle.fill")
    static let figure_pool_swim_circle: SymbolExtension = SymbolExtension(rawValue: "figure.pool.swim.circle")
    static let figure_pool_swim_circle_fill: SymbolExtension = SymbolExtension(rawValue: "figure.pool.swim.circle.fill")
    static let figure_racquetball_circle: SymbolExtension = SymbolExtension(rawValue: "figure.racquetball.circle")
    static let figure_racquetball_circle_fill: SymbolExtension = SymbolExtension(rawValue: "figure.racquetball.circle.fill")
    static let figure_roll_circle: SymbolExtension = SymbolExtension(rawValue: "figure.roll.circle")
    static let figure_roll_circle_fill: SymbolExtension = SymbolExtension(rawValue: "figure.roll.circle.fill")
    static let figure_roll_runningpace_circle: SymbolExtension = SymbolExtension(rawValue: "figure.roll.runningpace.circle")
    static let figure_roll_runningpace_circle_fill: SymbolExtension = SymbolExtension(rawValue: "figure.roll.runningpace.circle.fill")
    static let figure_rolling_circle: SymbolExtension = SymbolExtension(rawValue: "figure.rolling.circle")
    static let figure_rolling_circle_fill: SymbolExtension = SymbolExtension(rawValue: "figure.rolling.circle.fill")
    static let figure_rugby_circle: SymbolExtension = SymbolExtension(rawValue: "figure.rugby.circle")
    static let figure_rugby_circle_fill: SymbolExtension = SymbolExtension(rawValue: "figure.rugby.circle.fill")
    static let figure_run_treadmill: SymbolExtension = SymbolExtension(rawValue: "figure.run.treadmill")
    static let figure_run_treadmill_circle: SymbolExtension = SymbolExtension(rawValue: "figure.run.treadmill.circle")
    static let figure_run_treadmill_circle_fill: SymbolExtension = SymbolExtension(rawValue: "figure.run.treadmill.circle.fill")
    static let figure_sailing_circle: SymbolExtension = SymbolExtension(rawValue: "figure.sailing.circle")
    static let figure_sailing_circle_fill: SymbolExtension = SymbolExtension(rawValue: "figure.sailing.circle.fill")
    static let figure_seated_seatbelt_left_drive_seats_1: SymbolExtension = SymbolExtension(rawValue: "figure.seated.seatbelt.left.drive.seats.1")
    static let figure_seated_seatbelt_left_drive_seats_1_1: SymbolExtension = SymbolExtension(rawValue: "figure.seated.seatbelt.left.drive.seats.1.1")
    static let figure_seated_seatbelt_left_drive_seats_1_1_fill: SymbolExtension = SymbolExtension(rawValue: "figure.seated.seatbelt.left.drive.seats.1.1.fill")
    static let figure_seated_seatbelt_left_drive_seats_1_2: SymbolExtension = SymbolExtension(rawValue: "figure.seated.seatbelt.left.drive.seats.1.2")
    static let figure_seated_seatbelt_left_drive_seats_1_2_fill: SymbolExtension = SymbolExtension(rawValue: "figure.seated.seatbelt.left.drive.seats.1.2.fill")
    static let figure_seated_seatbelt_left_drive_seats_1_fill: SymbolExtension = SymbolExtension(rawValue: "figure.seated.seatbelt.left.drive.seats.1.fill")
    static let figure_seated_seatbelt_left_drive_seats_2: SymbolExtension = SymbolExtension(rawValue: "figure.seated.seatbelt.left.drive.seats.2")
    static let figure_seated_seatbelt_left_drive_seats_2_2: SymbolExtension = SymbolExtension(rawValue: "figure.seated.seatbelt.left.drive.seats.2.2")
    static let figure_seated_seatbelt_left_drive_seats_2_2_2: SymbolExtension = SymbolExtension(rawValue: "figure.seated.seatbelt.left.drive.seats.2.2.2")
    static let figure_seated_seatbelt_left_drive_seats_2_2_2_fill: SymbolExtension = SymbolExtension(rawValue: "figure.seated.seatbelt.left.drive.seats.2.2.2.fill")
    static let figure_seated_seatbelt_left_drive_seats_2_2_3: SymbolExtension = SymbolExtension(rawValue: "figure.seated.seatbelt.left.drive.seats.2.2.3")
    static let figure_seated_seatbelt_left_drive_seats_2_2_3_fill: SymbolExtension = SymbolExtension(rawValue: "figure.seated.seatbelt.left.drive.seats.2.2.3.fill")
    static let figure_seated_seatbelt_left_drive_seats_2_2_fill: SymbolExtension = SymbolExtension(rawValue: "figure.seated.seatbelt.left.drive.seats.2.2.fill")
    static let figure_seated_seatbelt_left_drive_seats_2_3: SymbolExtension = SymbolExtension(rawValue: "figure.seated.seatbelt.left.drive.seats.2.3")
    static let figure_seated_seatbelt_left_drive_seats_2_3_2: SymbolExtension = SymbolExtension(rawValue: "figure.seated.seatbelt.left.drive.seats.2.3.2")
    static let figure_seated_seatbelt_left_drive_seats_2_3_2_fill: SymbolExtension = SymbolExtension(rawValue: "figure.seated.seatbelt.left.drive.seats.2.3.2.fill")
    static let figure_seated_seatbelt_left_drive_seats_2_3_3: SymbolExtension = SymbolExtension(rawValue: "figure.seated.seatbelt.left.drive.seats.2.3.3")
    static let figure_seated_seatbelt_left_drive_seats_2_3_3_fill: SymbolExtension = SymbolExtension(rawValue: "figure.seated.seatbelt.left.drive.seats.2.3.3.fill")
    static let figure_seated_seatbelt_left_drive_seats_2_3_fill: SymbolExtension = SymbolExtension(rawValue: "figure.seated.seatbelt.left.drive.seats.2.3.fill")
    static let figure_seated_seatbelt_left_drive_seats_2_fill: SymbolExtension = SymbolExtension(rawValue: "figure.seated.seatbelt.left.drive.seats.2.fill")
    static let figure_seated_seatbelt_left_drive_seats_3: SymbolExtension = SymbolExtension(rawValue: "figure.seated.seatbelt.left.drive.seats.3")
    static let figure_seated_seatbelt_left_drive_seats_3_3: SymbolExtension = SymbolExtension(rawValue: "figure.seated.seatbelt.left.drive.seats.3.3")
    static let figure_seated_seatbelt_left_drive_seats_3_3_3: SymbolExtension = SymbolExtension(rawValue: "figure.seated.seatbelt.left.drive.seats.3.3.3")
    static let figure_seated_seatbelt_left_drive_seats_3_3_3_fill: SymbolExtension = SymbolExtension(rawValue: "figure.seated.seatbelt.left.drive.seats.3.3.3.fill")
    static let figure_seated_seatbelt_left_drive_seats_3_3_fill: SymbolExtension = SymbolExtension(rawValue: "figure.seated.seatbelt.left.drive.seats.3.3.fill")
    static let figure_seated_seatbelt_left_drive_seats_3_fill: SymbolExtension = SymbolExtension(rawValue: "figure.seated.seatbelt.left.drive.seats.3.fill")
    static let figure_seated_side_left: SymbolExtension = SymbolExtension(rawValue: "figure.seated.side.left")
    static let figure_seated_side_left_air_distribution_lower: SymbolExtension = SymbolExtension(rawValue: "figure.seated.side.left.air.distribution.lower")
    static let figure_seated_side_left_air_distribution_middle: SymbolExtension = SymbolExtension(rawValue: "figure.seated.side.left.air.distribution.middle")
    static let figure_seated_side_left_air_distribution_middle_and_lower: SymbolExtension = SymbolExtension(rawValue: "figure.seated.side.left.air.distribution.middle.and.lower")
    static let figure_seated_side_left_air_distribution_middle_and_lower_angled: SymbolExtension = SymbolExtension(rawValue: "figure.seated.side.left.air.distribution.middle.and.lower.angled")
    static let figure_seated_side_left_air_distribution_upper: SymbolExtension = SymbolExtension(rawValue: "figure.seated.side.left.air.distribution.upper")
    static let figure_seated_side_left_air_distribution_upper_angled_and_lower_angled: SymbolExtension = SymbolExtension(rawValue: "figure.seated.side.left.air.distribution.upper.angled.and.lower.angled")
    static let figure_seated_side_left_air_distribution_upper_angled_and_middle: SymbolExtension = SymbolExtension(rawValue: "figure.seated.side.left.air.distribution.upper.angled.and.middle")
    static let figure_seated_side_left_air_distribution_upper_angled_and_middle_and_lower_angled: SymbolExtension = SymbolExtension(rawValue: "figure.seated.side.left.air.distribution.upper.angled.and.middle.and.lower.angled")
    static let figure_seated_side_left_airbag_off: SymbolExtension = SymbolExtension(rawValue: "figure.seated.side.left.airbag.off")
    static let figure_seated_side_left_airbag_off_2: SymbolExtension = SymbolExtension(rawValue: "figure.seated.side.left.airbag.off.2")
    static let figure_seated_side_left_airbag_on: SymbolExtension = SymbolExtension(rawValue: "figure.seated.side.left.airbag.on")
    static let figure_seated_side_left_airbag_on_2: SymbolExtension = SymbolExtension(rawValue: "figure.seated.side.left.airbag.on.2")
    static let figure_seated_side_left_automatic: SymbolExtension = SymbolExtension(rawValue: "figure.seated.side.left.automatic")
    static let figure_seated_side_left_fan: SymbolExtension = SymbolExtension(rawValue: "figure.seated.side.left.fan")
    static let figure_seated_side_left_steeringwheel: SymbolExtension = SymbolExtension(rawValue: "figure.seated.side.left.steeringwheel")
    static let figure_seated_side_left_windshield_front_and_heat_waves: SymbolExtension = SymbolExtension(rawValue: "figure.seated.side.left.windshield.front.and.heat.waves")
    static let figure_seated_side_left_windshield_front_and_heat_waves_air_distribution_lower: SymbolExtension = SymbolExtension(rawValue: "figure.seated.side.left.windshield.front.and.heat.waves.air.distribution.lower")
    static let figure_seated_side_left_windshield_front_and_heat_waves_air_distribution_middle: SymbolExtension = SymbolExtension(rawValue: "figure.seated.side.left.windshield.front.and.heat.waves.air.distribution.middle")
    static let figure_seated_side_left_windshield_front_and_heat_waves_air_distribution_middle_and_lower: SymbolExtension = SymbolExtension(rawValue: "figure.seated.side.left.windshield.front.and.heat.waves.air.distribution.middle.and.lower")
    static let figure_seated_side_left_windshield_front_and_heat_waves_air_distribution_upper: SymbolExtension = SymbolExtension(rawValue: "figure.seated.side.left.windshield.front.and.heat.waves.air.distribution.upper")
    static let figure_seated_side_left_windshield_front_and_heat_waves_air_distribution_upper_and_lower: SymbolExtension = SymbolExtension(rawValue: "figure.seated.side.left.windshield.front.and.heat.waves.air.distribution.upper.and.lower")
    static let figure_seated_side_left_windshield_front_and_heat_waves_air_distribution_upper_and_middle: SymbolExtension = SymbolExtension(rawValue: "figure.seated.side.left.windshield.front.and.heat.waves.air.distribution.upper.and.middle")
    static let figure_seated_side_left_windshield_front_and_heat_waves_air_distribution_upper_and_middle_and_lower: SymbolExtension = SymbolExtension(rawValue: "figure.seated.side.left.windshield.front.and.heat.waves.air.distribution.upper.and.middle.and.lower")
    static let figure_seated_side_right: SymbolExtension = SymbolExtension(rawValue: "figure.seated.side.right")
    static let figure_seated_side_right_air_distribution_lower: SymbolExtension = SymbolExtension(rawValue: "figure.seated.side.right.air.distribution.lower")
    static let figure_seated_side_right_air_distribution_middle: SymbolExtension = SymbolExtension(rawValue: "figure.seated.side.right.air.distribution.middle")
    static let figure_seated_side_right_air_distribution_middle_and_lower: SymbolExtension = SymbolExtension(rawValue: "figure.seated.side.right.air.distribution.middle.and.lower")
    static let figure_seated_side_right_air_distribution_middle_and_lower_angled: SymbolExtension = SymbolExtension(rawValue: "figure.seated.side.right.air.distribution.middle.and.lower.angled")
    static let figure_seated_side_right_air_distribution_upper: SymbolExtension = SymbolExtension(rawValue: "figure.seated.side.right.air.distribution.upper")
    static let figure_seated_side_right_air_distribution_upper_angled_and_lower_angled: SymbolExtension = SymbolExtension(rawValue: "figure.seated.side.right.air.distribution.upper.angled.and.lower.angled")
    static let figure_seated_side_right_air_distribution_upper_angled_and_middle: SymbolExtension = SymbolExtension(rawValue: "figure.seated.side.right.air.distribution.upper.angled.and.middle")
    static let figure_seated_side_right_air_distribution_upper_angled_and_middle_and_lower_angled: SymbolExtension = SymbolExtension(rawValue: "figure.seated.side.right.air.distribution.upper.angled.and.middle.and.lower.angled")
    static let figure_seated_side_right_airbag_off: SymbolExtension = SymbolExtension(rawValue: "figure.seated.side.right.airbag.off")
    static let figure_seated_side_right_airbag_off_2: SymbolExtension = SymbolExtension(rawValue: "figure.seated.side.right.airbag.off.2")
    static let figure_seated_side_right_airbag_on: SymbolExtension = SymbolExtension(rawValue: "figure.seated.side.right.airbag.on")
    static let figure_seated_side_right_airbag_on_2: SymbolExtension = SymbolExtension(rawValue: "figure.seated.side.right.airbag.on.2")
    static let figure_seated_side_right_automatic: SymbolExtension = SymbolExtension(rawValue: "figure.seated.side.right.automatic")
    static let figure_seated_side_right_fan: SymbolExtension = SymbolExtension(rawValue: "figure.seated.side.right.fan")
    static let figure_seated_side_right_steeringwheel: SymbolExtension = SymbolExtension(rawValue: "figure.seated.side.right.steeringwheel")
    static let figure_seated_side_right_windshield_front_and_heat_waves: SymbolExtension = SymbolExtension(rawValue: "figure.seated.side.right.windshield.front.and.heat.waves")
    static let figure_seated_side_right_windshield_front_and_heat_waves_air_distribution_lower: SymbolExtension = SymbolExtension(rawValue: "figure.seated.side.right.windshield.front.and.heat.waves.air.distribution.lower")
    static let figure_seated_side_right_windshield_front_and_heat_waves_air_distribution_middle: SymbolExtension = SymbolExtension(rawValue: "figure.seated.side.right.windshield.front.and.heat.waves.air.distribution.middle")
    static let figure_seated_side_right_windshield_front_and_heat_waves_air_distribution_middle_and_lower: SymbolExtension = SymbolExtension(rawValue: "figure.seated.side.right.windshield.front.and.heat.waves.air.distribution.middle.and.lower")
    static let figure_seated_side_right_windshield_front_and_heat_waves_air_distribution_upper: SymbolExtension = SymbolExtension(rawValue: "figure.seated.side.right.windshield.front.and.heat.waves.air.distribution.upper")
    static let figure_seated_side_right_windshield_front_and_heat_waves_air_distribution_upper_and_lower: SymbolExtension = SymbolExtension(rawValue: "figure.seated.side.right.windshield.front.and.heat.waves.air.distribution.upper.and.lower")
    static let figure_seated_side_right_windshield_front_and_heat_waves_air_distribution_upper_and_middle: SymbolExtension = SymbolExtension(rawValue: "figure.seated.side.right.windshield.front.and.heat.waves.air.distribution.upper.and.middle")
    static let figure_seated_side_right_windshield_front_and_heat_waves_air_distribution_upper_and_middle_and_lower: SymbolExtension = SymbolExtension(rawValue: "figure.seated.side.right.windshield.front.and.heat.waves.air.distribution.upper.and.middle.and.lower")
    static let figure_skateboarding: SymbolExtension = SymbolExtension(rawValue: "figure.skateboarding")
    static let figure_skateboarding_circle: SymbolExtension = SymbolExtension(rawValue: "figure.skateboarding.circle")
    static let figure_skateboarding_circle_fill: SymbolExtension = SymbolExtension(rawValue: "figure.skateboarding.circle.fill")
    static let figure_skiing_crosscountry_circle: SymbolExtension = SymbolExtension(rawValue: "figure.skiing.crosscountry.circle")
    static let figure_skiing_crosscountry_circle_fill: SymbolExtension = SymbolExtension(rawValue: "figure.skiing.crosscountry.circle.fill")
    static let figure_skiing_downhill_circle: SymbolExtension = SymbolExtension(rawValue: "figure.skiing.downhill.circle")
    static let figure_skiing_downhill_circle_fill: SymbolExtension = SymbolExtension(rawValue: "figure.skiing.downhill.circle.fill")
    static let figure_snowboarding_circle: SymbolExtension = SymbolExtension(rawValue: "figure.snowboarding.circle")
    static let figure_snowboarding_circle_fill: SymbolExtension = SymbolExtension(rawValue: "figure.snowboarding.circle.fill")
    static let figure_socialdance_circle: SymbolExtension = SymbolExtension(rawValue: "figure.socialdance.circle")
    static let figure_socialdance_circle_fill: SymbolExtension = SymbolExtension(rawValue: "figure.socialdance.circle.fill")
    static let figure_softball_circle: SymbolExtension = SymbolExtension(rawValue: "figure.softball.circle")
    static let figure_softball_circle_fill: SymbolExtension = SymbolExtension(rawValue: "figure.softball.circle.fill")
    static let figure_squash_circle: SymbolExtension = SymbolExtension(rawValue: "figure.squash.circle")
    static let figure_squash_circle_fill: SymbolExtension = SymbolExtension(rawValue: "figure.squash.circle.fill")
    static let figure_stair_stepper_circle: SymbolExtension = SymbolExtension(rawValue: "figure.stair.stepper.circle")
    static let figure_stair_stepper_circle_fill: SymbolExtension = SymbolExtension(rawValue: "figure.stair.stepper.circle.fill")
    static let figure_stairs_circle: SymbolExtension = SymbolExtension(rawValue: "figure.stairs.circle")
    static let figure_stairs_circle_fill: SymbolExtension = SymbolExtension(rawValue: "figure.stairs.circle.fill")
    static let figure_stand_dress: SymbolExtension = SymbolExtension(rawValue: "figure.stand.dress")
    static let figure_stand_dress_line_vertical_figure: SymbolExtension = SymbolExtension(rawValue: "figure.stand.dress.line.vertical.figure")
    static let figure_step_training_circle: SymbolExtension = SymbolExtension(rawValue: "figure.step.training.circle")
    static let figure_step_training_circle_fill: SymbolExtension = SymbolExtension(rawValue: "figure.step.training.circle.fill")
    static let figure_strengthtraining_functional_circle: SymbolExtension = SymbolExtension(rawValue: "figure.strengthtraining.functional.circle")
    static let figure_strengthtraining_functional_circle_fill: SymbolExtension = SymbolExtension(rawValue: "figure.strengthtraining.functional.circle.fill")
    static let figure_strengthtraining_traditional_circle: SymbolExtension = SymbolExtension(rawValue: "figure.strengthtraining.traditional.circle")
    static let figure_strengthtraining_traditional_circle_fill: SymbolExtension = SymbolExtension(rawValue: "figure.strengthtraining.traditional.circle.fill")
    static let figure_surfing_circle: SymbolExtension = SymbolExtension(rawValue: "figure.surfing.circle")
    static let figure_surfing_circle_fill: SymbolExtension = SymbolExtension(rawValue: "figure.surfing.circle.fill")
    static let figure_table_tennis_circle: SymbolExtension = SymbolExtension(rawValue: "figure.table.tennis.circle")
    static let figure_table_tennis_circle_fill: SymbolExtension = SymbolExtension(rawValue: "figure.table.tennis.circle.fill")
    static let figure_taichi_circle: SymbolExtension = SymbolExtension(rawValue: "figure.taichi.circle")
    static let figure_taichi_circle_fill: SymbolExtension = SymbolExtension(rawValue: "figure.taichi.circle.fill")
    static let figure_tennis_circle: SymbolExtension = SymbolExtension(rawValue: "figure.tennis.circle")
    static let figure_tennis_circle_fill: SymbolExtension = SymbolExtension(rawValue: "figure.tennis.circle.fill")
    static let figure_track_and_field_circle: SymbolExtension = SymbolExtension(rawValue: "figure.track.and.field.circle")
    static let figure_track_and_field_circle_fill: SymbolExtension = SymbolExtension(rawValue: "figure.track.and.field.circle.fill")
    static let figure_volleyball_circle: SymbolExtension = SymbolExtension(rawValue: "figure.volleyball.circle")
    static let figure_volleyball_circle_fill: SymbolExtension = SymbolExtension(rawValue: "figure.volleyball.circle.fill")
    static let figure_walk_treadmill: SymbolExtension = SymbolExtension(rawValue: "figure.walk.treadmill")
    static let figure_walk_treadmill_circle: SymbolExtension = SymbolExtension(rawValue: "figure.walk.treadmill.circle")
    static let figure_walk_treadmill_circle_fill: SymbolExtension = SymbolExtension(rawValue: "figure.walk.treadmill.circle.fill")
    static let figure_walk_triangle: SymbolExtension = SymbolExtension(rawValue: "figure.walk.triangle")
    static let figure_walk_triangle_fill: SymbolExtension = SymbolExtension(rawValue: "figure.walk.triangle.fill")
    static let figure_water_fitness_circle: SymbolExtension = SymbolExtension(rawValue: "figure.water.fitness.circle")
    static let figure_water_fitness_circle_fill: SymbolExtension = SymbolExtension(rawValue: "figure.water.fitness.circle.fill")
    static let figure_waterpolo_circle: SymbolExtension = SymbolExtension(rawValue: "figure.waterpolo.circle")
    static let figure_waterpolo_circle_fill: SymbolExtension = SymbolExtension(rawValue: "figure.waterpolo.circle.fill")
    static let figure_wrestling_circle: SymbolExtension = SymbolExtension(rawValue: "figure.wrestling.circle")
    static let figure_wrestling_circle_fill: SymbolExtension = SymbolExtension(rawValue: "figure.wrestling.circle.fill")
    static let figure_yoga_circle: SymbolExtension = SymbolExtension(rawValue: "figure.yoga.circle")
    static let figure_yoga_circle_fill: SymbolExtension = SymbolExtension(rawValue: "figure.yoga.circle.fill")
    static let fire_extinguisher: SymbolExtension = SymbolExtension(rawValue: "fire.extinguisher")
    static let fire_extinguisher_fill: SymbolExtension = SymbolExtension(rawValue: "fire.extinguisher.fill")
    static let flag_pattern_checkered: SymbolExtension = SymbolExtension(rawValue: "flag.pattern.checkered")
    static let flag_pattern_checkered_2_crossed: SymbolExtension = SymbolExtension(rawValue: "flag.pattern.checkered.2.crossed")
    static let flag_pattern_checkered_circle: SymbolExtension = SymbolExtension(rawValue: "flag.pattern.checkered.circle")
    static let flag_pattern_checkered_circle_fill: SymbolExtension = SymbolExtension(rawValue: "flag.pattern.checkered.circle.fill")
    static let florinsign_arrow_trianglehead_counterclockwise_rotate_90: SymbolExtension = SymbolExtension(rawValue: "florinsign.arrow.trianglehead.counterclockwise.rotate.90")
    static let florinsign_bank_building: SymbolExtension = SymbolExtension(rawValue: "florinsign.bank.building")
    static let florinsign_bank_building_fill: SymbolExtension = SymbolExtension(rawValue: "florinsign.bank.building.fill")
    static let florinsign_gauge_chart_lefthalf_righthalf: SymbolExtension = SymbolExtension(rawValue: "florinsign.gauge.chart.lefthalf.righthalf")
    static let florinsign_gauge_chart_leftthird_topthird_rightthird: SymbolExtension = SymbolExtension(rawValue: "florinsign.gauge.chart.leftthird.topthird.rightthird")
    static let florinsign_ring: SymbolExtension = SymbolExtension(rawValue: "florinsign.ring")
    static let florinsign_ring_dashed: SymbolExtension = SymbolExtension(rawValue: "florinsign.ring.dashed")
    static let fluid_batteryblock: SymbolExtension = SymbolExtension(rawValue: "fluid.batteryblock")
    static let fluid_coolant: SymbolExtension = SymbolExtension(rawValue: "fluid.coolant")
    static let formfitting_gamecontroller: SymbolExtension = SymbolExtension(rawValue: "formfitting.gamecontroller")
    static let formfitting_gamecontroller_fill: SymbolExtension = SymbolExtension(rawValue: "formfitting.gamecontroller.fill")
    static let francsign_arrow_trianglehead_counterclockwise_rotate_90: SymbolExtension = SymbolExtension(rawValue: "francsign.arrow.trianglehead.counterclockwise.rotate.90")
    static let francsign_bank_building: SymbolExtension = SymbolExtension(rawValue: "francsign.bank.building")
    static let francsign_bank_building_fill: SymbolExtension = SymbolExtension(rawValue: "francsign.bank.building.fill")
    static let francsign_gauge_chart_lefthalf_righthalf: SymbolExtension = SymbolExtension(rawValue: "francsign.gauge.chart.lefthalf.righthalf")
    static let francsign_gauge_chart_leftthird_topthird_rightthird: SymbolExtension = SymbolExtension(rawValue: "francsign.gauge.chart.leftthird.topthird.rightthird")
    static let francsign_ring: SymbolExtension = SymbolExtension(rawValue: "francsign.ring")
    static let francsign_ring_dashed: SymbolExtension = SymbolExtension(rawValue: "francsign.ring.dashed")
    static let fuelpump_and_filter: SymbolExtension = SymbolExtension(rawValue: "fuelpump.and.filter")
    static let gamecontroller_circle: SymbolExtension = SymbolExtension(rawValue: "gamecontroller.circle")
    static let gamecontroller_circle_fill: SymbolExtension = SymbolExtension(rawValue: "gamecontroller.circle.fill")
    static let gauge_open_with_lines_needle_33percent_and_arrow_trianglehead_from_0percent_to_50percent: SymbolExtension = SymbolExtension(rawValue: "gauge.open.with.lines.needle.33percent.and.arrow.trianglehead.from.0percent.to.50percent")
    static let gearshape_arrow_trianglehead_2_clockwise_rotate_90: SymbolExtension = SymbolExtension(rawValue: "gearshape.arrow.trianglehead.2.clockwise.rotate.90")
    static let greaterthanorequalto: SymbolExtension = SymbolExtension(rawValue: "greaterthanorequalto")
    static let greaterthanorequalto_circle: SymbolExtension = SymbolExtension(rawValue: "greaterthanorequalto.circle")
    static let greaterthanorequalto_circle_fill: SymbolExtension = SymbolExtension(rawValue: "greaterthanorequalto.circle.fill")
    static let greaterthanorequalto_square: SymbolExtension = SymbolExtension(rawValue: "greaterthanorequalto.square")
    static let greaterthanorequalto_square_fill: SymbolExtension = SymbolExtension(rawValue: "greaterthanorequalto.square.fill")
    static let guaranisign_arrow_trianglehead_counterclockwise_rotate_90: SymbolExtension = SymbolExtension(rawValue: "guaranisign.arrow.trianglehead.counterclockwise.rotate.90")
    static let guaranisign_bank_building: SymbolExtension = SymbolExtension(rawValue: "guaranisign.bank.building")
    static let guaranisign_bank_building_fill: SymbolExtension = SymbolExtension(rawValue: "guaranisign.bank.building.fill")
    static let guaranisign_gauge_chart_lefthalf_righthalf: SymbolExtension = SymbolExtension(rawValue: "guaranisign.gauge.chart.lefthalf.righthalf")
    static let guaranisign_gauge_chart_leftthird_topthird_rightthird: SymbolExtension = SymbolExtension(rawValue: "guaranisign.gauge.chart.leftthird.topthird.rightthird")
    static let guaranisign_ring: SymbolExtension = SymbolExtension(rawValue: "guaranisign.ring")
    static let guaranisign_ring_dashed: SymbolExtension = SymbolExtension(rawValue: "guaranisign.ring.dashed")
    static let hand_draw_badge_ellipsis: SymbolExtension = SymbolExtension(rawValue: "hand.draw.badge.ellipsis")
    static let hand_draw_badge_ellipsis_fill: SymbolExtension = SymbolExtension(rawValue: "hand.draw.badge.ellipsis.fill")
    static let hand_palm_facing: SymbolExtension = SymbolExtension(rawValue: "hand.palm.facing")
    static let hand_palm_facing_fill: SymbolExtension = SymbolExtension(rawValue: "hand.palm.facing.fill")
    static let hand_pinch: SymbolExtension = SymbolExtension(rawValue: "hand.pinch")
    static let hand_pinch_fill: SymbolExtension = SymbolExtension(rawValue: "hand.pinch.fill")
    static let hand_point_up_braille_badge_ellipsis: SymbolExtension = SymbolExtension(rawValue: "hand.point.up.braille.badge.ellipsis")
    static let hand_point_up_braille_badge_ellipsis_fill: SymbolExtension = SymbolExtension(rawValue: "hand.point.up.braille.badge.ellipsis.fill")
    static let hand_raised_palm_facing: SymbolExtension = SymbolExtension(rawValue: "hand.raised.palm.facing")
    static let hand_raised_palm_facing_fill: SymbolExtension = SymbolExtension(rawValue: "hand.raised.palm.facing.fill")
    static let hand_rays: SymbolExtension = SymbolExtension(rawValue: "hand.rays")
    static let hand_rays_fill: SymbolExtension = SymbolExtension(rawValue: "hand.rays.fill")
    static let hat_cap: SymbolExtension = SymbolExtension(rawValue: "hat.cap")
    static let hat_cap_fill: SymbolExtension = SymbolExtension(rawValue: "hat.cap.fill")
    static let hat_widebrim: SymbolExtension = SymbolExtension(rawValue: "hat.widebrim")
    static let hat_widebrim_fill: SymbolExtension = SymbolExtension(rawValue: "hat.widebrim.fill")
    static let head_profile_arrow_forward_and_vision_pro: SymbolExtension = SymbolExtension(rawValue: "head.profile.arrow.forward.and.vision.pro")
    static let headphones_slash: SymbolExtension = SymbolExtension(rawValue: "headphones.slash")
    static let headset: SymbolExtension = SymbolExtension(rawValue: "headset")
    static let headset_circle: SymbolExtension = SymbolExtension(rawValue: "headset.circle")
    static let headset_circle_fill: SymbolExtension = SymbolExtension(rawValue: "headset.circle.fill")
    static let heart_text_clipboard: SymbolExtension = SymbolExtension(rawValue: "heart.text.clipboard")
    static let heart_text_clipboard_fill: SymbolExtension = SymbolExtension(rawValue: "heart.text.clipboard.fill")
    static let heat_waves_and_fan: SymbolExtension = SymbolExtension(rawValue: "heat.waves.and.fan")
    static let helmet: SymbolExtension = SymbolExtension(rawValue: "helmet")
    static let helmet_fill: SymbolExtension = SymbolExtension(rawValue: "helmet.fill")
    static let hifispeaker_2_badge_minus: SymbolExtension = SymbolExtension(rawValue: "hifispeaker.2.badge.minus")
    static let hifispeaker_2_badge_minus_fill: SymbolExtension = SymbolExtension(rawValue: "hifispeaker.2.badge.minus.fill")
    static let hifispeaker_2_badge_plus: SymbolExtension = SymbolExtension(rawValue: "hifispeaker.2.badge.plus")
    static let hifispeaker_2_badge_plus_fill: SymbolExtension = SymbolExtension(rawValue: "hifispeaker.2.badge.plus.fill")
    static let hifispeaker_and_homepod_badge_minus: SymbolExtension = SymbolExtension(rawValue: "hifispeaker.and.homepod.badge.minus")
    static let hifispeaker_and_homepod_badge_minus_fill: SymbolExtension = SymbolExtension(rawValue: "hifispeaker.and.homepod.badge.minus.fill")
    static let hifispeaker_and_homepod_badge_plus: SymbolExtension = SymbolExtension(rawValue: "hifispeaker.and.homepod.badge.plus")
    static let hifispeaker_and_homepod_badge_plus_fill: SymbolExtension = SymbolExtension(rawValue: "hifispeaker.and.homepod.badge.plus.fill")
    static let hifispeaker_and_homepod_mini: SymbolExtension = SymbolExtension(rawValue: "hifispeaker.and.homepod.mini")
    static let hifispeaker_and_homepod_mini_badge_minus: SymbolExtension = SymbolExtension(rawValue: "hifispeaker.and.homepod.mini.badge.minus")
    static let hifispeaker_and_homepod_mini_badge_minus_fill: SymbolExtension = SymbolExtension(rawValue: "hifispeaker.and.homepod.mini.badge.minus.fill")
    static let hifispeaker_and_homepod_mini_badge_plus: SymbolExtension = SymbolExtension(rawValue: "hifispeaker.and.homepod.mini.badge.plus")
    static let hifispeaker_and_homepod_mini_badge_plus_fill: SymbolExtension = SymbolExtension(rawValue: "hifispeaker.and.homepod.mini.badge.plus.fill")
    static let hifispeaker_and_homepod_mini_fill: SymbolExtension = SymbolExtension(rawValue: "hifispeaker.and.homepod.mini.fill")
    static let hifispeaker_arrow_forward: SymbolExtension = SymbolExtension(rawValue: "hifispeaker.arrow.forward")
    static let hifispeaker_arrow_forward_fill: SymbolExtension = SymbolExtension(rawValue: "hifispeaker.arrow.forward.fill")
    static let hifispeaker_badge_minus: SymbolExtension = SymbolExtension(rawValue: "hifispeaker.badge.minus")
    static let hifispeaker_badge_minus_fill: SymbolExtension = SymbolExtension(rawValue: "hifispeaker.badge.minus.fill")
    static let hifispeaker_badge_plus: SymbolExtension = SymbolExtension(rawValue: "hifispeaker.badge.plus")
    static let hifispeaker_badge_plus_fill: SymbolExtension = SymbolExtension(rawValue: "hifispeaker.badge.plus.fill")
    static let homepod_2_badge_minus: SymbolExtension = SymbolExtension(rawValue: "homepod.2.badge.minus")
    static let homepod_2_badge_minus_fill: SymbolExtension = SymbolExtension(rawValue: "homepod.2.badge.minus.fill")
    static let homepod_2_badge_plus: SymbolExtension = SymbolExtension(rawValue: "homepod.2.badge.plus")
    static let homepod_2_badge_plus_fill: SymbolExtension = SymbolExtension(rawValue: "homepod.2.badge.plus.fill")
    static let homepod_and_homepod_mini: SymbolExtension = SymbolExtension(rawValue: "homepod.and.homepod.mini")
    static let homepod_and_homepod_mini_badge_minus: SymbolExtension = SymbolExtension(rawValue: "homepod.and.homepod.mini.badge.minus")
    static let homepod_and_homepod_mini_badge_minus_fill: SymbolExtension = SymbolExtension(rawValue: "homepod.and.homepod.mini.badge.minus.fill")
    static let homepod_and_homepod_mini_badge_plus: SymbolExtension = SymbolExtension(rawValue: "homepod.and.homepod.mini.badge.plus")
    static let homepod_and_homepod_mini_badge_plus_fill: SymbolExtension = SymbolExtension(rawValue: "homepod.and.homepod.mini.badge.plus.fill")
    static let homepod_and_homepod_mini_fill: SymbolExtension = SymbolExtension(rawValue: "homepod.and.homepod.mini.fill")
    static let homepod_arrow_forward: SymbolExtension = SymbolExtension(rawValue: "homepod.arrow.forward")
    static let homepod_arrow_forward_fill: SymbolExtension = SymbolExtension(rawValue: "homepod.arrow.forward.fill")
    static let homepod_badge_minus: SymbolExtension = SymbolExtension(rawValue: "homepod.badge.minus")
    static let homepod_badge_minus_fill: SymbolExtension = SymbolExtension(rawValue: "homepod.badge.minus.fill")
    static let homepod_badge_plus: SymbolExtension = SymbolExtension(rawValue: "homepod.badge.plus")
    static let homepod_badge_plus_fill: SymbolExtension = SymbolExtension(rawValue: "homepod.badge.plus.fill")
    static let homepod_mini: SymbolExtension = SymbolExtension(rawValue: "homepod.mini")
    static let homepod_mini_2: SymbolExtension = SymbolExtension(rawValue: "homepod.mini.2")
    static let homepod_mini_2_badge_minus: SymbolExtension = SymbolExtension(rawValue: "homepod.mini.2.badge.minus")
    static let homepod_mini_2_badge_minus_fill: SymbolExtension = SymbolExtension(rawValue: "homepod.mini.2.badge.minus.fill")
    static let homepod_mini_2_badge_plus: SymbolExtension = SymbolExtension(rawValue: "homepod.mini.2.badge.plus")
    static let homepod_mini_2_badge_plus_fill: SymbolExtension = SymbolExtension(rawValue: "homepod.mini.2.badge.plus.fill")
    static let homepod_mini_2_fill: SymbolExtension = SymbolExtension(rawValue: "homepod.mini.2.fill")
    static let homepod_mini_arrow_forward: SymbolExtension = SymbolExtension(rawValue: "homepod.mini.arrow.forward")
    static let homepod_mini_arrow_forward_fill: SymbolExtension = SymbolExtension(rawValue: "homepod.mini.arrow.forward.fill")
    static let homepod_mini_badge_minus: SymbolExtension = SymbolExtension(rawValue: "homepod.mini.badge.minus")
    static let homepod_mini_badge_minus_fill: SymbolExtension = SymbolExtension(rawValue: "homepod.mini.badge.minus.fill")
    static let homepod_mini_badge_plus: SymbolExtension = SymbolExtension(rawValue: "homepod.mini.badge.plus")
    static let homepod_mini_badge_plus_fill: SymbolExtension = SymbolExtension(rawValue: "homepod.mini.badge.plus.fill")
    static let homepod_mini_fill: SymbolExtension = SymbolExtension(rawValue: "homepod.mini.fill")
    static let hourglass_badge_eye: SymbolExtension = SymbolExtension(rawValue: "hourglass.badge.eye")
    static let house_badge_exclamationmark: SymbolExtension = SymbolExtension(rawValue: "house.badge.exclamationmark")
    static let house_badge_exclamationmark_fill: SymbolExtension = SymbolExtension(rawValue: "house.badge.exclamationmark.fill")
    static let house_badge_wifi: SymbolExtension = SymbolExtension(rawValue: "house.badge.wifi")
    static let house_badge_wifi_fill: SymbolExtension = SymbolExtension(rawValue: "house.badge.wifi.fill")
    static let house_slash: SymbolExtension = SymbolExtension(rawValue: "house.slash")
    static let house_slash_fill: SymbolExtension = SymbolExtension(rawValue: "house.slash.fill")
    static let hryvniasign_arrow_trianglehead_counterclockwise_rotate_90: SymbolExtension = SymbolExtension(rawValue: "hryvniasign.arrow.trianglehead.counterclockwise.rotate.90")
    static let hryvniasign_bank_building: SymbolExtension = SymbolExtension(rawValue: "hryvniasign.bank.building")
    static let hryvniasign_bank_building_fill: SymbolExtension = SymbolExtension(rawValue: "hryvniasign.bank.building.fill")
    static let hryvniasign_gauge_chart_lefthalf_righthalf: SymbolExtension = SymbolExtension(rawValue: "hryvniasign.gauge.chart.lefthalf.righthalf")
    static let hryvniasign_gauge_chart_leftthird_topthird_rightthird: SymbolExtension = SymbolExtension(rawValue: "hryvniasign.gauge.chart.leftthird.topthird.rightthird")
    static let hryvniasign_ring: SymbolExtension = SymbolExtension(rawValue: "hryvniasign.ring")
    static let hryvniasign_ring_dashed: SymbolExtension = SymbolExtension(rawValue: "hryvniasign.ring.dashed")
    static let indianrupeesign_arrow_trianglehead_counterclockwise_rotate_90: SymbolExtension = SymbolExtension(rawValue: "indianrupeesign.arrow.trianglehead.counterclockwise.rotate.90")
    static let indianrupeesign_bank_building: SymbolExtension = SymbolExtension(rawValue: "indianrupeesign.bank.building")
    static let indianrupeesign_bank_building_fill: SymbolExtension = SymbolExtension(rawValue: "indianrupeesign.bank.building.fill")
    static let indianrupeesign_gauge_chart_lefthalf_righthalf: SymbolExtension = SymbolExtension(rawValue: "indianrupeesign.gauge.chart.lefthalf.righthalf")
    static let indianrupeesign_gauge_chart_leftthird_topthird_rightthird: SymbolExtension = SymbolExtension(rawValue: "indianrupeesign.gauge.chart.leftthird.topthird.rightthird")
    static let indianrupeesign_ring: SymbolExtension = SymbolExtension(rawValue: "indianrupeesign.ring")
    static let indianrupeesign_ring_dashed: SymbolExtension = SymbolExtension(rawValue: "indianrupeesign.ring.dashed")
    static let inhaler: SymbolExtension = SymbolExtension(rawValue: "inhaler")
    static let inhaler_fill: SymbolExtension = SymbolExtension(rawValue: "inhaler.fill")
    static let inset_filled_applewatch_case: SymbolExtension = SymbolExtension(rawValue: "inset.filled.applewatch.case")
    static let inset_filled_bottomhalf_rectangle: SymbolExtension = SymbolExtension(rawValue: "inset.filled.bottomhalf.rectangle")
    static let inset_filled_bottomhalf_rectangle_portrait: SymbolExtension = SymbolExtension(rawValue: "inset.filled.bottomhalf.rectangle.portrait")
    static let inset_filled_bottomhalf_tophalf_rectangle: SymbolExtension = SymbolExtension(rawValue: "inset.filled.bottomhalf.tophalf.rectangle")
    static let inset_filled_bottomleading_rectangle: SymbolExtension = SymbolExtension(rawValue: "inset.filled.bottomleading.rectangle")
    static let inset_filled_bottomleading_rectangle_portrait: SymbolExtension = SymbolExtension(rawValue: "inset.filled.bottomleading.rectangle.portrait")
    static let inset_filled_bottomleft_rectangle: SymbolExtension = SymbolExtension(rawValue: "inset.filled.bottomleft.rectangle")
    static let inset_filled_bottomleft_rectangle_portrait: SymbolExtension = SymbolExtension(rawValue: "inset.filled.bottomleft.rectangle.portrait")
    static let inset_filled_bottomright_rectangle: SymbolExtension = SymbolExtension(rawValue: "inset.filled.bottomright.rectangle")
    static let inset_filled_bottomright_rectangle_portrait: SymbolExtension = SymbolExtension(rawValue: "inset.filled.bottomright.rectangle.portrait")
    static let inset_filled_bottomthird_rectangle: SymbolExtension = SymbolExtension(rawValue: "inset.filled.bottomthird.rectangle")
    static let inset_filled_bottomthird_rectangle_portrait: SymbolExtension = SymbolExtension(rawValue: "inset.filled.bottomthird.rectangle.portrait")
    static let inset_filled_bottomthird_square: SymbolExtension = SymbolExtension(rawValue: "inset.filled.bottomthird.square")
    static let inset_filled_bottomtrailing_rectangle: SymbolExtension = SymbolExtension(rawValue: "inset.filled.bottomtrailing.rectangle")
    static let inset_filled_bottomtrailing_rectangle_portrait: SymbolExtension = SymbolExtension(rawValue: "inset.filled.bottomtrailing.rectangle.portrait")
    static let inset_filled_capsule: SymbolExtension = SymbolExtension(rawValue: "inset.filled.capsule")
    static let inset_filled_capsule_portrait: SymbolExtension = SymbolExtension(rawValue: "inset.filled.capsule.portrait")
    static let inset_filled_center_rectangle: SymbolExtension = SymbolExtension(rawValue: "inset.filled.center.rectangle")
    static let inset_filled_center_rectangle_badge_plus: SymbolExtension = SymbolExtension(rawValue: "inset.filled.center.rectangle.badge.plus")
    static let inset_filled_center_rectangle_portrait: SymbolExtension = SymbolExtension(rawValue: "inset.filled.center.rectangle.portrait")
    static let inset_filled_circle: SymbolExtension = SymbolExtension(rawValue: "inset.filled.circle")
    static let inset_filled_circle_dashed: SymbolExtension = SymbolExtension(rawValue: "inset.filled.circle.dashed")
    static let inset_filled_diamond: SymbolExtension = SymbolExtension(rawValue: "inset.filled.diamond")
    static let inset_filled_leadinghalf_arrow_leading_rectangle: SymbolExtension = SymbolExtension(rawValue: "inset.filled.leadinghalf.arrow.leading.rectangle")
    static let inset_filled_leadinghalf_rectangle: SymbolExtension = SymbolExtension(rawValue: "inset.filled.leadinghalf.rectangle")
    static let inset_filled_leadinghalf_rectangle_portrait: SymbolExtension = SymbolExtension(rawValue: "inset.filled.leadinghalf.rectangle.portrait")
    static let inset_filled_leadinghalf_toptrailing_bottomtrailing_rectangle: SymbolExtension = SymbolExtension(rawValue: "inset.filled.leadinghalf.toptrailing.bottomtrailing.rectangle")
    static let inset_filled_leadinghalf_trailinghalf_rectangle: SymbolExtension = SymbolExtension(rawValue: "inset.filled.leadinghalf.trailinghalf.rectangle")
    static let inset_filled_leadingthird_rectangle: SymbolExtension = SymbolExtension(rawValue: "inset.filled.leadingthird.rectangle")
    static let inset_filled_leadingthird_rectangle_portrait: SymbolExtension = SymbolExtension(rawValue: "inset.filled.leadingthird.rectangle.portrait")
    static let inset_filled_leadingthird_square: SymbolExtension = SymbolExtension(rawValue: "inset.filled.leadingthird.square")
    static let inset_filled_lefthalf_arrow_left_rectangle: SymbolExtension = SymbolExtension(rawValue: "inset.filled.lefthalf.arrow.left.rectangle")
    static let inset_filled_lefthalf_rectangle: SymbolExtension = SymbolExtension(rawValue: "inset.filled.lefthalf.rectangle")
    static let inset_filled_lefthalf_rectangle_portrait: SymbolExtension = SymbolExtension(rawValue: "inset.filled.lefthalf.rectangle.portrait")
    static let inset_filled_lefthalf_righthalf_rectangle: SymbolExtension = SymbolExtension(rawValue: "inset.filled.lefthalf.righthalf.rectangle")
    static let inset_filled_lefthalf_topright_bottomright_rectangle: SymbolExtension = SymbolExtension(rawValue: "inset.filled.lefthalf.topright.bottomright.rectangle")
    static let inset_filled_leftthird_rectangle: SymbolExtension = SymbolExtension(rawValue: "inset.filled.leftthird.rectangle")
    static let inset_filled_leftthird_rectangle_portrait: SymbolExtension = SymbolExtension(rawValue: "inset.filled.leftthird.rectangle.portrait")
    static let inset_filled_leftthird_square: SymbolExtension = SymbolExtension(rawValue: "inset.filled.leftthird.square")
    static let inset_filled_oval: SymbolExtension = SymbolExtension(rawValue: "inset.filled.oval")
    static let inset_filled_oval_portrait: SymbolExtension = SymbolExtension(rawValue: "inset.filled.oval.portrait")
    static let inset_filled_rectangle: SymbolExtension = SymbolExtension(rawValue: "inset.filled.rectangle")
    static let inset_filled_rectangle_and_cursorarrow: SymbolExtension = SymbolExtension(rawValue: "inset.filled.rectangle.and.cursorarrow")
    static let inset_filled_rectangle_and_person_filled: SymbolExtension = SymbolExtension(rawValue: "inset.filled.rectangle.and.person.filled")
    static let inset_filled_rectangle_badge_record: SymbolExtension = SymbolExtension(rawValue: "inset.filled.rectangle.badge.record")
    static let inset_filled_rectangle_on_rectangle: SymbolExtension = SymbolExtension(rawValue: "inset.filled.rectangle.on.rectangle")
    static let inset_filled_rectangle_portrait: SymbolExtension = SymbolExtension(rawValue: "inset.filled.rectangle.portrait")
    static let inset_filled_righthalf_arrow_right_rectangle: SymbolExtension = SymbolExtension(rawValue: "inset.filled.righthalf.arrow.right.rectangle")
    static let inset_filled_righthalf_lefthalf_rectangle: SymbolExtension = SymbolExtension(rawValue: "inset.filled.righthalf.lefthalf.rectangle")
    static let inset_filled_righthalf_rectangle: SymbolExtension = SymbolExtension(rawValue: "inset.filled.righthalf.rectangle")
    static let inset_filled_righthalf_rectangle_portrait: SymbolExtension = SymbolExtension(rawValue: "inset.filled.righthalf.rectangle.portrait")
    static let inset_filled_rightthird_rectangle: SymbolExtension = SymbolExtension(rawValue: "inset.filled.rightthird.rectangle")
    static let inset_filled_rightthird_rectangle_portrait: SymbolExtension = SymbolExtension(rawValue: "inset.filled.rightthird.rectangle.portrait")
    static let inset_filled_rightthird_square: SymbolExtension = SymbolExtension(rawValue: "inset.filled.rightthird.square")
    static let inset_filled_square: SymbolExtension = SymbolExtension(rawValue: "inset.filled.square")
    static let inset_filled_square_dashed: SymbolExtension = SymbolExtension(rawValue: "inset.filled.square.dashed")
    static let inset_filled_tophalf_bottomhalf_rectangle: SymbolExtension = SymbolExtension(rawValue: "inset.filled.tophalf.bottomhalf.rectangle")
    static let inset_filled_tophalf_bottomleft_bottomright_rectangle: SymbolExtension = SymbolExtension(rawValue: "inset.filled.tophalf.bottomleft.bottomright.rectangle")
    static let inset_filled_tophalf_rectangle: SymbolExtension = SymbolExtension(rawValue: "inset.filled.tophalf.rectangle")
    static let inset_filled_tophalf_rectangle_portrait: SymbolExtension = SymbolExtension(rawValue: "inset.filled.tophalf.rectangle.portrait")
    static let inset_filled_topleading_bottomleading_trailinghalf_rectangle: SymbolExtension = SymbolExtension(rawValue: "inset.filled.topleading.bottomleading.trailinghalf.rectangle")
    static let inset_filled_topleading_rectangle: SymbolExtension = SymbolExtension(rawValue: "inset.filled.topleading.rectangle")
    static let inset_filled_topleading_rectangle_portrait: SymbolExtension = SymbolExtension(rawValue: "inset.filled.topleading.rectangle.portrait")
    static let inset_filled_topleft_bottomleft_righthalf_rectangle: SymbolExtension = SymbolExtension(rawValue: "inset.filled.topleft.bottomleft.righthalf.rectangle")
    static let inset_filled_topleft_rectangle: SymbolExtension = SymbolExtension(rawValue: "inset.filled.topleft.rectangle")
    static let inset_filled_topleft_rectangle_portrait: SymbolExtension = SymbolExtension(rawValue: "inset.filled.topleft.rectangle.portrait")
    static let inset_filled_topleft_topright_bottomhalf_rectangle: SymbolExtension = SymbolExtension(rawValue: "inset.filled.topleft.topright.bottomhalf.rectangle")
    static let inset_filled_topleft_topright_bottomleft_bottomright_rectangle: SymbolExtension = SymbolExtension(rawValue: "inset.filled.topleft.topright.bottomleft.bottomright.rectangle")
    static let inset_filled_topright_rectangle: SymbolExtension = SymbolExtension(rawValue: "inset.filled.topright.rectangle")
    static let inset_filled_topright_rectangle_portrait: SymbolExtension = SymbolExtension(rawValue: "inset.filled.topright.rectangle.portrait")
    static let inset_filled_topthird_rectangle: SymbolExtension = SymbolExtension(rawValue: "inset.filled.topthird.rectangle")
    static let inset_filled_topthird_rectangle_portrait: SymbolExtension = SymbolExtension(rawValue: "inset.filled.topthird.rectangle.portrait")
    static let inset_filled_topthird_square: SymbolExtension = SymbolExtension(rawValue: "inset.filled.topthird.square")
    static let inset_filled_toptrailing_rectangle: SymbolExtension = SymbolExtension(rawValue: "inset.filled.toptrailing.rectangle")
    static let inset_filled_toptrailing_rectangle_portrait: SymbolExtension = SymbolExtension(rawValue: "inset.filled.toptrailing.rectangle.portrait")
    static let inset_filled_trailinghalf_arrow_trailing_rectangle: SymbolExtension = SymbolExtension(rawValue: "inset.filled.trailinghalf.arrow.trailing.rectangle")
    static let inset_filled_trailinghalf_leadinghalf_rectangle: SymbolExtension = SymbolExtension(rawValue: "inset.filled.trailinghalf.leadinghalf.rectangle")
    static let inset_filled_trailinghalf_rectangle: SymbolExtension = SymbolExtension(rawValue: "inset.filled.trailinghalf.rectangle")
    static let inset_filled_trailinghalf_rectangle_portrait: SymbolExtension = SymbolExtension(rawValue: "inset.filled.trailinghalf.rectangle.portrait")
    static let inset_filled_trailingthird_rectangle: SymbolExtension = SymbolExtension(rawValue: "inset.filled.trailingthird.rectangle")
    static let inset_filled_trailingthird_rectangle_portrait: SymbolExtension = SymbolExtension(rawValue: "inset.filled.trailingthird.rectangle.portrait")
    static let inset_filled_trailingthird_square: SymbolExtension = SymbolExtension(rawValue: "inset.filled.trailingthird.square")
    static let inset_filled_triangle: SymbolExtension = SymbolExtension(rawValue: "inset.filled.triangle")
    static let inset_filled_tv: SymbolExtension = SymbolExtension(rawValue: "inset.filled.tv")
    static let ipad_badge_location: SymbolExtension = SymbolExtension(rawValue: "ipad.badge.location")
    static let ipad_gen1_badge_location: SymbolExtension = SymbolExtension(rawValue: "ipad.gen1.badge.location")
    static let ipad_gen1_landscape_badge_location: SymbolExtension = SymbolExtension(rawValue: "ipad.gen1.landscape.badge.location")
    static let ipad_gen1_landscape_slash: SymbolExtension = SymbolExtension(rawValue: "ipad.gen1.landscape.slash")
    static let ipad_gen1_slash: SymbolExtension = SymbolExtension(rawValue: "ipad.gen1.slash")
    static let ipad_gen2_badge_location: SymbolExtension = SymbolExtension(rawValue: "ipad.gen2.badge.location")
    static let ipad_gen2_landscape_badge_location: SymbolExtension = SymbolExtension(rawValue: "ipad.gen2.landscape.badge.location")
    static let ipad_gen2_landscape_slash: SymbolExtension = SymbolExtension(rawValue: "ipad.gen2.landscape.slash")
    static let ipad_gen2_slash: SymbolExtension = SymbolExtension(rawValue: "ipad.gen2.slash")
    static let ipad_landscape_and_iphone: SymbolExtension = SymbolExtension(rawValue: "ipad.landscape.and.iphone")
    static let ipad_landscape_and_iphone_slash: SymbolExtension = SymbolExtension(rawValue: "ipad.landscape.and.iphone.slash")
    static let ipad_landscape_badge_location: SymbolExtension = SymbolExtension(rawValue: "ipad.landscape.badge.location")
    static let iphone_and_arrow_forward_inward: SymbolExtension = SymbolExtension(rawValue: "iphone.and.arrow.forward.inward")
    static let iphone_and_arrow_forward_outward: SymbolExtension = SymbolExtension(rawValue: "iphone.and.arrow.forward.outward")
    static let iphone_and_arrow_left_and_arrow_right_inward: SymbolExtension = SymbolExtension(rawValue: "iphone.and.arrow.left.and.arrow.right.inward")
    static let iphone_and_arrow_right_inward: SymbolExtension = SymbolExtension(rawValue: "iphone.and.arrow.right.inward")
    static let iphone_and_arrow_right_outward: SymbolExtension = SymbolExtension(rawValue: "iphone.and.arrow.right.outward")
    static let iphone_app_switcher: SymbolExtension = SymbolExtension(rawValue: "iphone.app.switcher")
    static let iphone_badge_location: SymbolExtension = SymbolExtension(rawValue: "iphone.badge.location")
    static let iphone_crop_circle: SymbolExtension = SymbolExtension(rawValue: "iphone.crop.circle")
    static let iphone_dock_motorized_viewfinder: SymbolExtension = SymbolExtension(rawValue: "iphone.dock.motorized.viewfinder")
    static let iphone_gen1_and_arrow_left: SymbolExtension = SymbolExtension(rawValue: "iphone.gen1.and.arrow.left")
    static let iphone_gen1_badge_location: SymbolExtension = SymbolExtension(rawValue: "iphone.gen1.badge.location")
    static let iphone_gen1_crop_circle: SymbolExtension = SymbolExtension(rawValue: "iphone.gen1.crop.circle")
    static let iphone_gen1_landscape_slash: SymbolExtension = SymbolExtension(rawValue: "iphone.gen1.landscape.slash")
    static let iphone_gen1_motion: SymbolExtension = SymbolExtension(rawValue: "iphone.gen1.motion")
    static let iphone_gen2_and_arrow_left_and_arrow_right_inward: SymbolExtension = SymbolExtension(rawValue: "iphone.gen2.and.arrow.left.and.arrow.right.inward")
    static let iphone_gen2_badge_location: SymbolExtension = SymbolExtension(rawValue: "iphone.gen2.badge.location")
    static let iphone_gen2_crop_circle: SymbolExtension = SymbolExtension(rawValue: "iphone.gen2.crop.circle")
    static let iphone_gen2_landscape_slash: SymbolExtension = SymbolExtension(rawValue: "iphone.gen2.landscape.slash")
    static let iphone_gen2_motion: SymbolExtension = SymbolExtension(rawValue: "iphone.gen2.motion")
    static let iphone_gen3_and_arrow_left_and_arrow_right_inward: SymbolExtension = SymbolExtension(rawValue: "iphone.gen3.and.arrow.left.and.arrow.right.inward")
    static let iphone_gen3_badge_location: SymbolExtension = SymbolExtension(rawValue: "iphone.gen3.badge.location")
    static let iphone_gen3_crop_circle: SymbolExtension = SymbolExtension(rawValue: "iphone.gen3.crop.circle")
    static let iphone_gen3_landscape_slash: SymbolExtension = SymbolExtension(rawValue: "iphone.gen3.landscape.slash")
    static let iphone_gen3_motion: SymbolExtension = SymbolExtension(rawValue: "iphone.gen3.motion")
    static let iphone_motion: SymbolExtension = SymbolExtension(rawValue: "iphone.motion")
    static let ipod_shuffle_gen1: SymbolExtension = SymbolExtension(rawValue: "ipod.shuffle.gen1")
    static let ipod_shuffle_gen2: SymbolExtension = SymbolExtension(rawValue: "ipod.shuffle.gen2")
    static let ipod_shuffle_gen3: SymbolExtension = SymbolExtension(rawValue: "ipod.shuffle.gen3")
    static let ipod_shuffle_gen4: SymbolExtension = SymbolExtension(rawValue: "ipod.shuffle.gen4")
    static let ipod_touch: SymbolExtension = SymbolExtension(rawValue: "ipod.touch")
    static let ipod_touch_landscape: SymbolExtension = SymbolExtension(rawValue: "ipod.touch.landscape")
    static let ipod_touch_slash: SymbolExtension = SymbolExtension(rawValue: "ipod.touch.slash")
    static let jacket: SymbolExtension = SymbolExtension(rawValue: "jacket")
    static let jacket_fill: SymbolExtension = SymbolExtension(rawValue: "jacket.fill")
    static let key_2_on_ring: SymbolExtension = SymbolExtension(rawValue: "key.2.on.ring")
    static let key_2_on_ring_fill: SymbolExtension = SymbolExtension(rawValue: "key.2.on.ring.fill")
    static let key_car_radiowaves_forward: SymbolExtension = SymbolExtension(rawValue: "key.car.radiowaves.forward")
    static let key_car_radiowaves_forward_fill: SymbolExtension = SymbolExtension(rawValue: "key.car.radiowaves.forward.fill")
    static let key_card: SymbolExtension = SymbolExtension(rawValue: "key.card")
    static let key_card_fill: SymbolExtension = SymbolExtension(rawValue: "key.card.fill")
    static let kipsign_arrow_trianglehead_counterclockwise_rotate_90: SymbolExtension = SymbolExtension(rawValue: "kipsign.arrow.trianglehead.counterclockwise.rotate.90")
    static let kipsign_bank_building: SymbolExtension = SymbolExtension(rawValue: "kipsign.bank.building")
    static let kipsign_bank_building_fill: SymbolExtension = SymbolExtension(rawValue: "kipsign.bank.building.fill")
    static let kipsign_gauge_chart_lefthalf_righthalf: SymbolExtension = SymbolExtension(rawValue: "kipsign.gauge.chart.lefthalf.righthalf")
    static let kipsign_gauge_chart_leftthird_topthird_rightthird: SymbolExtension = SymbolExtension(rawValue: "kipsign.gauge.chart.leftthird.topthird.rightthird")
    static let kipsign_ring: SymbolExtension = SymbolExtension(rawValue: "kipsign.ring")
    static let kipsign_ring_dashed: SymbolExtension = SymbolExtension(rawValue: "kipsign.ring.dashed")
    static let ladybug_slash: SymbolExtension = SymbolExtension(rawValue: "ladybug.slash")
    static let ladybug_slash_circle: SymbolExtension = SymbolExtension(rawValue: "ladybug.slash.circle")
    static let ladybug_slash_circle_fill: SymbolExtension = SymbolExtension(rawValue: "ladybug.slash.circle.fill")
    static let ladybug_slash_fill: SymbolExtension = SymbolExtension(rawValue: "ladybug.slash.fill")
    static let larisign_arrow_trianglehead_counterclockwise_rotate_90: SymbolExtension = SymbolExtension(rawValue: "larisign.arrow.trianglehead.counterclockwise.rotate.90")
    static let larisign_bank_building: SymbolExtension = SymbolExtension(rawValue: "larisign.bank.building")
    static let larisign_bank_building_fill: SymbolExtension = SymbolExtension(rawValue: "larisign.bank.building.fill")
    static let larisign_gauge_chart_lefthalf_righthalf: SymbolExtension = SymbolExtension(rawValue: "larisign.gauge.chart.lefthalf.righthalf")
    static let larisign_gauge_chart_leftthird_topthird_rightthird: SymbolExtension = SymbolExtension(rawValue: "larisign.gauge.chart.leftthird.topthird.rightthird")
    static let larisign_ring: SymbolExtension = SymbolExtension(rawValue: "larisign.ring")
    static let larisign_ring_dashed: SymbolExtension = SymbolExtension(rawValue: "larisign.ring.dashed")
    static let leaf_arrow_trianglehead_clockwise: SymbolExtension = SymbolExtension(rawValue: "leaf.arrow.trianglehead.clockwise")
    static let lessthanorequalto: SymbolExtension = SymbolExtension(rawValue: "lessthanorequalto")
    static let lessthanorequalto_circle: SymbolExtension = SymbolExtension(rawValue: "lessthanorequalto.circle")
    static let lessthanorequalto_circle_fill: SymbolExtension = SymbolExtension(rawValue: "lessthanorequalto.circle.fill")
    static let lessthanorequalto_square: SymbolExtension = SymbolExtension(rawValue: "lessthanorequalto.square")
    static let lessthanorequalto_square_fill: SymbolExtension = SymbolExtension(rawValue: "lessthanorequalto.square.fill")
    static let lirasign_arrow_trianglehead_counterclockwise_rotate_90: SymbolExtension = SymbolExtension(rawValue: "lirasign.arrow.trianglehead.counterclockwise.rotate.90")
    static let lirasign_bank_building: SymbolExtension = SymbolExtension(rawValue: "lirasign.bank.building")
    static let lirasign_bank_building_fill: SymbolExtension = SymbolExtension(rawValue: "lirasign.bank.building.fill")
    static let lirasign_gauge_chart_lefthalf_righthalf: SymbolExtension = SymbolExtension(rawValue: "lirasign.gauge.chart.lefthalf.righthalf")
    static let lirasign_gauge_chart_leftthird_topthird_rightthird: SymbolExtension = SymbolExtension(rawValue: "lirasign.gauge.chart.leftthird.topthird.rightthird")
    static let lirasign_ring: SymbolExtension = SymbolExtension(rawValue: "lirasign.ring")
    static let lirasign_ring_dashed: SymbolExtension = SymbolExtension(rawValue: "lirasign.ring.dashed")
    static let location_app: SymbolExtension = SymbolExtension(rawValue: "location.app")
    static let location_app_fill: SymbolExtension = SymbolExtension(rawValue: "location.app.fill")
    static let lock_document: SymbolExtension = SymbolExtension(rawValue: "lock.document")
    static let lock_document_fill: SymbolExtension = SymbolExtension(rawValue: "lock.document.fill")
    static let lock_rectangle_on_rectangle_dashed: SymbolExtension = SymbolExtension(rawValue: "lock.rectangle.on.rectangle.dashed")
    static let macbook_and_applewatch: SymbolExtension = SymbolExtension(rawValue: "macbook.and.applewatch")
    static let macbook_and_vision_pro: SymbolExtension = SymbolExtension(rawValue: "macbook.and.vision.pro")
    static let macbook_slash: SymbolExtension = SymbolExtension(rawValue: "macbook.slash")
    static let malaysianringgitsign: SymbolExtension = SymbolExtension(rawValue: "malaysianringgitsign")
    static let malaysianringgitsign_arrow_trianglehead_counterclockwise_rotate_90: SymbolExtension = SymbolExtension(rawValue: "malaysianringgitsign.arrow.trianglehead.counterclockwise.rotate.90")
    static let malaysianringgitsign_bank_building: SymbolExtension = SymbolExtension(rawValue: "malaysianringgitsign.bank.building")
    static let malaysianringgitsign_bank_building_fill: SymbolExtension = SymbolExtension(rawValue: "malaysianringgitsign.bank.building.fill")
    static let malaysianringgitsign_circle: SymbolExtension = SymbolExtension(rawValue: "malaysianringgitsign.circle")
    static let malaysianringgitsign_circle_fill: SymbolExtension = SymbolExtension(rawValue: "malaysianringgitsign.circle.fill")
    static let malaysianringgitsign_gauge_chart_lefthalf_righthalf: SymbolExtension = SymbolExtension(rawValue: "malaysianringgitsign.gauge.chart.lefthalf.righthalf")
    static let malaysianringgitsign_gauge_chart_leftthird_topthird_rightthird: SymbolExtension = SymbolExtension(rawValue: "malaysianringgitsign.gauge.chart.leftthird.topthird.rightthird")
    static let malaysianringgitsign_ring: SymbolExtension = SymbolExtension(rawValue: "malaysianringgitsign.ring")
    static let malaysianringgitsign_ring_dashed: SymbolExtension = SymbolExtension(rawValue: "malaysianringgitsign.ring.dashed")
    static let malaysianringgitsign_square: SymbolExtension = SymbolExtension(rawValue: "malaysianringgitsign.square")
    static let malaysianringgitsign_square_fill: SymbolExtension = SymbolExtension(rawValue: "malaysianringgitsign.square.fill")
    static let manatsign_arrow_trianglehead_counterclockwise_rotate_90: SymbolExtension = SymbolExtension(rawValue: "manatsign.arrow.trianglehead.counterclockwise.rotate.90")
    static let manatsign_bank_building: SymbolExtension = SymbolExtension(rawValue: "manatsign.bank.building")
    static let manatsign_bank_building_fill: SymbolExtension = SymbolExtension(rawValue: "manatsign.bank.building.fill")
    static let manatsign_gauge_chart_lefthalf_righthalf: SymbolExtension = SymbolExtension(rawValue: "manatsign.gauge.chart.lefthalf.righthalf")
    static let manatsign_gauge_chart_leftthird_topthird_rightthird: SymbolExtension = SymbolExtension(rawValue: "manatsign.gauge.chart.leftthird.topthird.rightthird")
    static let manatsign_ring: SymbolExtension = SymbolExtension(rawValue: "manatsign.ring")
    static let manatsign_ring_dashed: SymbolExtension = SymbolExtension(rawValue: "manatsign.ring.dashed")
    static let matter_logo: SymbolExtension = SymbolExtension(rawValue: "matter.logo")
    static let mecca: SymbolExtension = SymbolExtension(rawValue: "mecca")
    static let microphone: SymbolExtension = SymbolExtension(rawValue: "microphone")
    static let microphone_and_signal_meter: SymbolExtension = SymbolExtension(rawValue: "microphone.and.signal.meter")
    static let microphone_and_signal_meter_fill: SymbolExtension = SymbolExtension(rawValue: "microphone.and.signal.meter.fill")
    static let microphone_badge_ellipsis: SymbolExtension = SymbolExtension(rawValue: "microphone.badge.ellipsis")
    static let microphone_badge_ellipsis_fill: SymbolExtension = SymbolExtension(rawValue: "microphone.badge.ellipsis.fill")
    static let microphone_badge_plus: SymbolExtension = SymbolExtension(rawValue: "microphone.badge.plus")
    static let microphone_badge_plus_fill: SymbolExtension = SymbolExtension(rawValue: "microphone.badge.plus.fill")
    static let microphone_badge_xmark: SymbolExtension = SymbolExtension(rawValue: "microphone.badge.xmark")
    static let microphone_badge_xmark_fill: SymbolExtension = SymbolExtension(rawValue: "microphone.badge.xmark.fill")
    static let microphone_circle: SymbolExtension = SymbolExtension(rawValue: "microphone.circle")
    static let microphone_circle_fill: SymbolExtension = SymbolExtension(rawValue: "microphone.circle.fill")
    static let microphone_fill: SymbolExtension = SymbolExtension(rawValue: "microphone.fill")
    static let microphone_slash: SymbolExtension = SymbolExtension(rawValue: "microphone.slash")
    static let microphone_slash_circle: SymbolExtension = SymbolExtension(rawValue: "microphone.slash.circle")
    static let microphone_slash_circle_fill: SymbolExtension = SymbolExtension(rawValue: "microphone.slash.circle.fill")
    static let microphone_slash_fill: SymbolExtension = SymbolExtension(rawValue: "microphone.slash.fill")
    static let microphone_square: SymbolExtension = SymbolExtension(rawValue: "microphone.square")
    static let microphone_square_fill: SymbolExtension = SymbolExtension(rawValue: "microphone.square.fill")
    static let millsign_arrow_trianglehead_counterclockwise_rotate_90: SymbolExtension = SymbolExtension(rawValue: "millsign.arrow.trianglehead.counterclockwise.rotate.90")
    static let millsign_bank_building: SymbolExtension = SymbolExtension(rawValue: "millsign.bank.building")
    static let millsign_bank_building_fill: SymbolExtension = SymbolExtension(rawValue: "millsign.bank.building.fill")
    static let millsign_gauge_chart_lefthalf_righthalf: SymbolExtension = SymbolExtension(rawValue: "millsign.gauge.chart.lefthalf.righthalf")
    static let millsign_gauge_chart_leftthird_topthird_rightthird: SymbolExtension = SymbolExtension(rawValue: "millsign.gauge.chart.leftthird.topthird.rightthird")
    static let millsign_ring: SymbolExtension = SymbolExtension(rawValue: "millsign.ring")
    static let millsign_ring_dashed: SymbolExtension = SymbolExtension(rawValue: "millsign.ring.dashed")
    static let minus_arrow_trianglehead_counterclockwise: SymbolExtension = SymbolExtension(rawValue: "minus.arrow.trianglehead.counterclockwise")
    static let moon_road_lanes: SymbolExtension = SymbolExtension(rawValue: "moon.road.lanes")
    static let moped: SymbolExtension = SymbolExtension(rawValue: "moped")
    static let moped_fill: SymbolExtension = SymbolExtension(rawValue: "moped.fill")
    static let motorcycle: SymbolExtension = SymbolExtension(rawValue: "motorcycle")
    static let motorcycle_fill: SymbolExtension = SymbolExtension(rawValue: "motorcycle.fill")
    static let music_microphone: SymbolExtension = SymbolExtension(rawValue: "music.microphone")
    static let music_microphone_circle: SymbolExtension = SymbolExtension(rawValue: "music.microphone.circle")
    static let music_microphone_circle_fill: SymbolExtension = SymbolExtension(rawValue: "music.microphone.circle.fill")
    static let nairasign_arrow_trianglehead_counterclockwise_rotate_90: SymbolExtension = SymbolExtension(rawValue: "nairasign.arrow.trianglehead.counterclockwise.rotate.90")
    static let nairasign_bank_building: SymbolExtension = SymbolExtension(rawValue: "nairasign.bank.building")
    static let nairasign_bank_building_fill: SymbolExtension = SymbolExtension(rawValue: "nairasign.bank.building.fill")
    static let nairasign_gauge_chart_lefthalf_righthalf: SymbolExtension = SymbolExtension(rawValue: "nairasign.gauge.chart.lefthalf.righthalf")
    static let nairasign_gauge_chart_leftthird_topthird_rightthird: SymbolExtension = SymbolExtension(rawValue: "nairasign.gauge.chart.leftthird.topthird.rightthird")
    static let nairasign_ring: SymbolExtension = SymbolExtension(rawValue: "nairasign.ring")
    static let nairasign_ring_dashed: SymbolExtension = SymbolExtension(rawValue: "nairasign.ring.dashed")
    static let norwegiankronesign_arrow_trianglehead_counterclockwise_rotate_90: SymbolExtension = SymbolExtension(rawValue: "norwegiankronesign.arrow.trianglehead.counterclockwise.rotate.90")
    static let norwegiankronesign_bank_building: SymbolExtension = SymbolExtension(rawValue: "norwegiankronesign.bank.building")
    static let norwegiankronesign_bank_building_fill: SymbolExtension = SymbolExtension(rawValue: "norwegiankronesign.bank.building.fill")
    static let norwegiankronesign_gauge_chart_lefthalf_righthalf: SymbolExtension = SymbolExtension(rawValue: "norwegiankronesign.gauge.chart.lefthalf.righthalf")
    static let norwegiankronesign_gauge_chart_leftthird_topthird_rightthird: SymbolExtension = SymbolExtension(rawValue: "norwegiankronesign.gauge.chart.leftthird.topthird.rightthird")
    static let norwegiankronesign_ring: SymbolExtension = SymbolExtension(rawValue: "norwegiankronesign.ring")
    static let norwegiankronesign_ring_dashed: SymbolExtension = SymbolExtension(rawValue: "norwegiankronesign.ring.dashed")
    static let notequal: SymbolExtension = SymbolExtension(rawValue: "notequal")
    static let notequal_circle: SymbolExtension = SymbolExtension(rawValue: "notequal.circle")
    static let notequal_circle_fill: SymbolExtension = SymbolExtension(rawValue: "notequal.circle.fill")
    static let notequal_square: SymbolExtension = SymbolExtension(rawValue: "notequal.square")
    static let notequal_square_fill: SymbolExtension = SymbolExtension(rawValue: "notequal.square.fill")
    static let numbers: SymbolExtension = SymbolExtension(rawValue: "numbers")
    static let numbers_rectangle: SymbolExtension = SymbolExtension(rawValue: "numbers.rectangle")
    static let numbers_rectangle_fill: SymbolExtension = SymbolExtension(rawValue: "numbers.rectangle.fill")
    static let oar_2_crossed_circle: SymbolExtension = SymbolExtension(rawValue: "oar.2.crossed.circle")
    static let oar_2_crossed_circle_fill: SymbolExtension = SymbolExtension(rawValue: "oar.2.crossed.circle.fill")
    static let oilcan_and_thermometer: SymbolExtension = SymbolExtension(rawValue: "oilcan.and.thermometer")
    static let oilcan_and_thermometer_fill: SymbolExtension = SymbolExtension(rawValue: "oilcan.and.thermometer.fill")
    static let parkingsign_radiowaves_down_right_off: SymbolExtension = SymbolExtension(rawValue: "parkingsign.radiowaves.down.right.off")
    static let parkingsign_radiowaves_left_and_right_slash: SymbolExtension = SymbolExtension(rawValue: "parkingsign.radiowaves.left.and.right.slash")
    static let parkingsign_square: SymbolExtension = SymbolExtension(rawValue: "parkingsign.square")
    static let parkingsign_square_fill: SymbolExtension = SymbolExtension(rawValue: "parkingsign.square.fill")
    static let person_2_arrow_trianglehead_counterclockwise: SymbolExtension = SymbolExtension(rawValue: "person.2.arrow.trianglehead.counterclockwise")
    static let person_2_badge_minus: SymbolExtension = SymbolExtension(rawValue: "person.2.badge.minus")
    static let person_2_badge_minus_fill: SymbolExtension = SymbolExtension(rawValue: "person.2.badge.minus.fill")
    static let person_2_badge_plus: SymbolExtension = SymbolExtension(rawValue: "person.2.badge.plus")
    static let person_2_badge_plus_fill: SymbolExtension = SymbolExtension(rawValue: "person.2.badge.plus.fill")
    static let person_and_arrow_left_and_arrow_right_outward: SymbolExtension = SymbolExtension(rawValue: "person.and.arrow.left.and.arrow.right.outward")
    static let person_badge_shield_exclamationmark: SymbolExtension = SymbolExtension(rawValue: "person.badge.shield.exclamationmark")
    static let person_badge_shield_exclamationmark_fill: SymbolExtension = SymbolExtension(rawValue: "person.badge.shield.exclamationmark.fill")
    static let person_crop_badge_magnifyingglass: SymbolExtension = SymbolExtension(rawValue: "person.crop.badge.magnifyingglass")
    static let person_crop_badge_magnifyingglass_fill: SymbolExtension = SymbolExtension(rawValue: "person.crop.badge.magnifyingglass.fill")
    static let person_crop_square_on_square_angled: SymbolExtension = SymbolExtension(rawValue: "person.crop.square.on.square.angled")
    static let person_crop_square_on_square_angled_fill: SymbolExtension = SymbolExtension(rawValue: "person.crop.square.on.square.angled.fill")
    static let person_fill_and_arrow_left_and_arrow_right_outward: SymbolExtension = SymbolExtension(rawValue: "person.fill.and.arrow.left.and.arrow.right.outward")
    static let personalhotspot_slash: SymbolExtension = SymbolExtension(rawValue: "personalhotspot.slash")
    static let peruviansolessign: SymbolExtension = SymbolExtension(rawValue: "peruviansolessign")
    static let peruviansolessign_arrow_trianglehead_counterclockwise_rotate_90: SymbolExtension = SymbolExtension(rawValue: "peruviansolessign.arrow.trianglehead.counterclockwise.rotate.90")
    static let peruviansolessign_bank_building: SymbolExtension = SymbolExtension(rawValue: "peruviansolessign.bank.building")
    static let peruviansolessign_bank_building_fill: SymbolExtension = SymbolExtension(rawValue: "peruviansolessign.bank.building.fill")
    static let peruviansolessign_circle: SymbolExtension = SymbolExtension(rawValue: "peruviansolessign.circle")
    static let peruviansolessign_circle_fill: SymbolExtension = SymbolExtension(rawValue: "peruviansolessign.circle.fill")
    static let peruviansolessign_gauge_chart_lefthalf_righthalf: SymbolExtension = SymbolExtension(rawValue: "peruviansolessign.gauge.chart.lefthalf.righthalf")
    static let peruviansolessign_gauge_chart_leftthird_topthird_rightthird: SymbolExtension = SymbolExtension(rawValue: "peruviansolessign.gauge.chart.leftthird.topthird.rightthird")
    static let peruviansolessign_ring: SymbolExtension = SymbolExtension(rawValue: "peruviansolessign.ring")
    static let peruviansolessign_ring_dashed: SymbolExtension = SymbolExtension(rawValue: "peruviansolessign.ring.dashed")
    static let peruviansolessign_square: SymbolExtension = SymbolExtension(rawValue: "peruviansolessign.square")
    static let peruviansolessign_square_fill: SymbolExtension = SymbolExtension(rawValue: "peruviansolessign.square.fill")
    static let pesetasign_arrow_trianglehead_counterclockwise_rotate_90: SymbolExtension = SymbolExtension(rawValue: "pesetasign.arrow.trianglehead.counterclockwise.rotate.90")
    static let pesetasign_bank_building: SymbolExtension = SymbolExtension(rawValue: "pesetasign.bank.building")
    static let pesetasign_bank_building_fill: SymbolExtension = SymbolExtension(rawValue: "pesetasign.bank.building.fill")
    static let pesetasign_gauge_chart_lefthalf_righthalf: SymbolExtension = SymbolExtension(rawValue: "pesetasign.gauge.chart.lefthalf.righthalf")
    static let pesetasign_gauge_chart_leftthird_topthird_rightthird: SymbolExtension = SymbolExtension(rawValue: "pesetasign.gauge.chart.leftthird.topthird.rightthird")
    static let pesetasign_ring: SymbolExtension = SymbolExtension(rawValue: "pesetasign.ring")
    static let pesetasign_ring_dashed: SymbolExtension = SymbolExtension(rawValue: "pesetasign.ring.dashed")
    static let pesosign_arrow_trianglehead_counterclockwise_rotate_90: SymbolExtension = SymbolExtension(rawValue: "pesosign.arrow.trianglehead.counterclockwise.rotate.90")
    static let pesosign_bank_building: SymbolExtension = SymbolExtension(rawValue: "pesosign.bank.building")
    static let pesosign_bank_building_fill: SymbolExtension = SymbolExtension(rawValue: "pesosign.bank.building.fill")
    static let pesosign_gauge_chart_lefthalf_righthalf: SymbolExtension = SymbolExtension(rawValue: "pesosign.gauge.chart.lefthalf.righthalf")
    static let pesosign_gauge_chart_leftthird_topthird_rightthird: SymbolExtension = SymbolExtension(rawValue: "pesosign.gauge.chart.leftthird.topthird.rightthird")
    static let pesosign_ring: SymbolExtension = SymbolExtension(rawValue: "pesosign.ring")
    static let pesosign_ring_dashed: SymbolExtension = SymbolExtension(rawValue: "pesosign.ring.dashed")
    static let phone_badge_clock: SymbolExtension = SymbolExtension(rawValue: "phone.badge.clock")
    static let phone_badge_clock_fill: SymbolExtension = SymbolExtension(rawValue: "phone.badge.clock.fill")
    static let photo_badge_exclamationmark: SymbolExtension = SymbolExtension(rawValue: "photo.badge.exclamationmark")
    static let photo_badge_exclamationmark_fill: SymbolExtension = SymbolExtension(rawValue: "photo.badge.exclamationmark.fill")
    static let photo_on_rectangle_angled_fill: SymbolExtension = SymbolExtension(rawValue: "photo.on.rectangle.angled.fill")
    static let plus_arrow_trianglehead_clockwise: SymbolExtension = SymbolExtension(rawValue: "plus.arrow.trianglehead.clockwise")
    static let point_bottomleft_forward_to_arrow_triangle_scurvepath: SymbolExtension = SymbolExtension(rawValue: "point.bottomleft.forward.to.arrow.triangle.scurvepath")
    static let point_bottomleft_forward_to_arrow_triangle_scurvepath_fill: SymbolExtension = SymbolExtension(rawValue: "point.bottomleft.forward.to.arrow.triangle.scurvepath.fill")
    static let point_bottomleft_forward_to_arrow_triangle_uturn_scurvepath: SymbolExtension = SymbolExtension(rawValue: "point.bottomleft.forward.to.arrow.triangle.uturn.scurvepath")
    static let point_bottomleft_forward_to_arrow_triangle_uturn_scurvepath_fill: SymbolExtension = SymbolExtension(rawValue: "point.bottomleft.forward.to.arrow.triangle.uturn.scurvepath.fill")
    static let point_topright_arrow_triangle_backward_to_point_bottomleft_filled_scurvepath: SymbolExtension = SymbolExtension(rawValue: "point.topright.arrow.triangle.backward.to.point.bottomleft.filled.scurvepath")
    static let point_topright_arrow_triangle_backward_to_point_bottomleft_scurvepath: SymbolExtension = SymbolExtension(rawValue: "point.topright.arrow.triangle.backward.to.point.bottomleft.scurvepath")
    static let point_topright_arrow_triangle_backward_to_point_bottomleft_scurvepath_fill: SymbolExtension = SymbolExtension(rawValue: "point.topright.arrow.triangle.backward.to.point.bottomleft.scurvepath.fill")
    static let point_topright_filled_arrow_triangle_backward_to_point_bottomleft_scurvepath: SymbolExtension = SymbolExtension(rawValue: "point.topright.filled.arrow.triangle.backward.to.point.bottomleft.scurvepath")
    static let polishzlotysign_arrow_trianglehead_counterclockwise_rotate_90: SymbolExtension = SymbolExtension(rawValue: "polishzlotysign.arrow.trianglehead.counterclockwise.rotate.90")
    static let polishzlotysign_bank_building: SymbolExtension = SymbolExtension(rawValue: "polishzlotysign.bank.building")
    static let polishzlotysign_bank_building_fill: SymbolExtension = SymbolExtension(rawValue: "polishzlotysign.bank.building.fill")
    static let polishzlotysign_gauge_chart_lefthalf_righthalf: SymbolExtension = SymbolExtension(rawValue: "polishzlotysign.gauge.chart.lefthalf.righthalf")
    static let polishzlotysign_gauge_chart_leftthird_topthird_rightthird: SymbolExtension = SymbolExtension(rawValue: "polishzlotysign.gauge.chart.leftthird.topthird.rightthird")
    static let polishzlotysign_ring: SymbolExtension = SymbolExtension(rawValue: "polishzlotysign.ring")
    static let polishzlotysign_ring_dashed: SymbolExtension = SymbolExtension(rawValue: "polishzlotysign.ring.dashed")
    static let powermeter: SymbolExtension = SymbolExtension(rawValue: "powermeter")
    static let powerplug_portrait: SymbolExtension = SymbolExtension(rawValue: "powerplug.portrait")
    static let powerplug_portrait_fill: SymbolExtension = SymbolExtension(rawValue: "powerplug.portrait.fill")
    static let printer_dotmatrix_filled_and_paper_inverse: SymbolExtension = SymbolExtension(rawValue: "printer.dotmatrix.filled.and.paper.inverse")
    static let printer_dotmatrix_inverse: SymbolExtension = SymbolExtension(rawValue: "printer.dotmatrix.inverse")
    static let printer_filled_and_paper_inverse: SymbolExtension = SymbolExtension(rawValue: "printer.filled.and.paper.inverse")
    static let printer_inverse: SymbolExtension = SymbolExtension(rawValue: "printer.inverse")
    static let progress_indicator: SymbolExtension = SymbolExtension(rawValue: "progress.indicator")
    static let questionmark_circle_dashed: SymbolExtension = SymbolExtension(rawValue: "questionmark.circle.dashed")
    static let questionmark_text_page: SymbolExtension = SymbolExtension(rawValue: "questionmark.text.page")
    static let questionmark_text_page_fill: SymbolExtension = SymbolExtension(rawValue: "questionmark.text.page.fill")
    static let rectangle_expand_diagonal: SymbolExtension = SymbolExtension(rawValue: "rectangle.expand.diagonal")
    static let rectangle_grid_3x3: SymbolExtension = SymbolExtension(rawValue: "rectangle.grid.3x3")
    static let rectangle_grid_3x3_fill: SymbolExtension = SymbolExtension(rawValue: "rectangle.grid.3x3.fill")
    static let rectangle_on_rectangle_dashed: SymbolExtension = SymbolExtension(rawValue: "rectangle.on.rectangle.dashed")
    static let rectangle_pattern_checkered: SymbolExtension = SymbolExtension(rawValue: "rectangle.pattern.checkered")
    static let richtext_page: SymbolExtension = SymbolExtension(rawValue: "richtext.page")
    static let richtext_page_fill: SymbolExtension = SymbolExtension(rawValue: "richtext.page.fill")
    static let robotic_vacuum: SymbolExtension = SymbolExtension(rawValue: "robotic.vacuum")
    static let robotic_vacuum_fill: SymbolExtension = SymbolExtension(rawValue: "robotic.vacuum.fill")
    static let rublesign_arrow_trianglehead_counterclockwise_rotate_90: SymbolExtension = SymbolExtension(rawValue: "rublesign.arrow.trianglehead.counterclockwise.rotate.90")
    static let rublesign_bank_building: SymbolExtension = SymbolExtension(rawValue: "rublesign.bank.building")
    static let rublesign_bank_building_fill: SymbolExtension = SymbolExtension(rawValue: "rublesign.bank.building.fill")
    static let rublesign_gauge_chart_lefthalf_righthalf: SymbolExtension = SymbolExtension(rawValue: "rublesign.gauge.chart.lefthalf.righthalf")
    static let rublesign_gauge_chart_leftthird_topthird_rightthird: SymbolExtension = SymbolExtension(rawValue: "rublesign.gauge.chart.leftthird.topthird.rightthird")
    static let rublesign_ring: SymbolExtension = SymbolExtension(rawValue: "rublesign.ring")
    static let rublesign_ring_dashed: SymbolExtension = SymbolExtension(rawValue: "rublesign.ring.dashed")
    static let rugbyball: SymbolExtension = SymbolExtension(rawValue: "rugbyball")
    static let rugbyball_circle: SymbolExtension = SymbolExtension(rawValue: "rugbyball.circle")
    static let rugbyball_circle_fill: SymbolExtension = SymbolExtension(rawValue: "rugbyball.circle.fill")
    static let rugbyball_fill: SymbolExtension = SymbolExtension(rawValue: "rugbyball.fill")
    static let rupeesign_arrow_trianglehead_counterclockwise_rotate_90: SymbolExtension = SymbolExtension(rawValue: "rupeesign.arrow.trianglehead.counterclockwise.rotate.90")
    static let rupeesign_bank_building: SymbolExtension = SymbolExtension(rawValue: "rupeesign.bank.building")
    static let rupeesign_bank_building_fill: SymbolExtension = SymbolExtension(rawValue: "rupeesign.bank.building.fill")
    static let rupeesign_gauge_chart_lefthalf_righthalf: SymbolExtension = SymbolExtension(rawValue: "rupeesign.gauge.chart.lefthalf.righthalf")
    static let rupeesign_gauge_chart_leftthird_topthird_rightthird: SymbolExtension = SymbolExtension(rawValue: "rupeesign.gauge.chart.leftthird.topthird.rightthird")
    static let rupeesign_ring: SymbolExtension = SymbolExtension(rawValue: "rupeesign.ring")
    static let rupeesign_ring_dashed: SymbolExtension = SymbolExtension(rawValue: "rupeesign.ring.dashed")
    static let sharedwithyou: SymbolExtension = SymbolExtension(rawValue: "sharedwithyou")
    static let sharedwithyou_circle: SymbolExtension = SymbolExtension(rawValue: "sharedwithyou.circle")
    static let sharedwithyou_circle_fill: SymbolExtension = SymbolExtension(rawValue: "sharedwithyou.circle.fill")
    static let sharedwithyou_slash: SymbolExtension = SymbolExtension(rawValue: "sharedwithyou.slash")
    static let shekelsign_arrow_trianglehead_counterclockwise_rotate_90: SymbolExtension = SymbolExtension(rawValue: "shekelsign.arrow.trianglehead.counterclockwise.rotate.90")
    static let shekelsign_bank_building: SymbolExtension = SymbolExtension(rawValue: "shekelsign.bank.building")
    static let shekelsign_bank_building_fill: SymbolExtension = SymbolExtension(rawValue: "shekelsign.bank.building.fill")
    static let shekelsign_gauge_chart_lefthalf_righthalf: SymbolExtension = SymbolExtension(rawValue: "shekelsign.gauge.chart.lefthalf.righthalf")
    static let shekelsign_gauge_chart_leftthird_topthird_rightthird: SymbolExtension = SymbolExtension(rawValue: "shekelsign.gauge.chart.leftthird.topthird.rightthird")
    static let shekelsign_ring: SymbolExtension = SymbolExtension(rawValue: "shekelsign.ring")
    static let shekelsign_ring_dashed: SymbolExtension = SymbolExtension(rawValue: "shekelsign.ring.dashed")
    static let shield_pattern_checkered: SymbolExtension = SymbolExtension(rawValue: "shield.pattern.checkered")
    static let singaporedollarsign: SymbolExtension = SymbolExtension(rawValue: "singaporedollarsign")
    static let singaporedollarsign_arrow_trianglehead_counterclockwise_rotate_90: SymbolExtension = SymbolExtension(rawValue: "singaporedollarsign.arrow.trianglehead.counterclockwise.rotate.90")
    static let singaporedollarsign_bank_building: SymbolExtension = SymbolExtension(rawValue: "singaporedollarsign.bank.building")
    static let singaporedollarsign_bank_building_fill: SymbolExtension = SymbolExtension(rawValue: "singaporedollarsign.bank.building.fill")
    static let singaporedollarsign_circle: SymbolExtension = SymbolExtension(rawValue: "singaporedollarsign.circle")
    static let singaporedollarsign_circle_fill: SymbolExtension = SymbolExtension(rawValue: "singaporedollarsign.circle.fill")
    static let singaporedollarsign_gauge_chart_lefthalf_righthalf: SymbolExtension = SymbolExtension(rawValue: "singaporedollarsign.gauge.chart.lefthalf.righthalf")
    static let singaporedollarsign_gauge_chart_leftthird_topthird_rightthird: SymbolExtension = SymbolExtension(rawValue: "singaporedollarsign.gauge.chart.leftthird.topthird.rightthird")
    static let singaporedollarsign_ring: SymbolExtension = SymbolExtension(rawValue: "singaporedollarsign.ring")
    static let singaporedollarsign_ring_dashed: SymbolExtension = SymbolExtension(rawValue: "singaporedollarsign.ring.dashed")
    static let singaporedollarsign_square: SymbolExtension = SymbolExtension(rawValue: "singaporedollarsign.square")
    static let singaporedollarsign_square_fill: SymbolExtension = SymbolExtension(rawValue: "singaporedollarsign.square.fill")
    static let slider_horizontal_2_arrow_trianglehead_counterclockwise: SymbolExtension = SymbolExtension(rawValue: "slider.horizontal.2.arrow.trianglehead.counterclockwise")
    static let slider_horizontal_2_rectangle_and_arrow_trianglehead_2_clockwise_rotate_90: SymbolExtension = SymbolExtension(rawValue: "slider.horizontal.2.rectangle.and.arrow.trianglehead.2.clockwise.rotate.90")
    static let speaker_wave_1_arrowtriangles_up_right_down_left: SymbolExtension = SymbolExtension(rawValue: "speaker.wave.1.arrowtriangles.up.right.down.left")
    static let square_and_arrow_down_badge_clock: SymbolExtension = SymbolExtension(rawValue: "square.and.arrow.down.badge.clock")
    static let square_and_arrow_down_badge_clock_fill: SymbolExtension = SymbolExtension(rawValue: "square.and.arrow.down.badge.clock.fill")
    static let square_and_arrow_up_trianglebadge_exclamationmark_fill: SymbolExtension = SymbolExtension(rawValue: "square.and.arrow.up.trianglebadge.exclamationmark.fill")
    static let square_grid_3x3_square_badge_ellipsis: SymbolExtension = SymbolExtension(rawValue: "square.grid.3x3.square.badge.ellipsis")
    static let squareroot: SymbolExtension = SymbolExtension(rawValue: "squareroot")
    static let steeringwheel_and_hands: SymbolExtension = SymbolExtension(rawValue: "steeringwheel.and.hands")
    static let steeringwheel_arrow_trianglehead_counterclockwise_and_clockwise: SymbolExtension = SymbolExtension(rawValue: "steeringwheel.arrow.trianglehead.counterclockwise.and.clockwise")
    static let sterlingsign_arrow_trianglehead_counterclockwise_rotate_90: SymbolExtension = SymbolExtension(rawValue: "sterlingsign.arrow.trianglehead.counterclockwise.rotate.90")
    static let sterlingsign_bank_building: SymbolExtension = SymbolExtension(rawValue: "sterlingsign.bank.building")
    static let sterlingsign_bank_building_fill: SymbolExtension = SymbolExtension(rawValue: "sterlingsign.bank.building.fill")
    static let sterlingsign_gauge_chart_lefthalf_righthalf: SymbolExtension = SymbolExtension(rawValue: "sterlingsign.gauge.chart.lefthalf.righthalf")
    static let sterlingsign_gauge_chart_leftthird_topthird_rightthird: SymbolExtension = SymbolExtension(rawValue: "sterlingsign.gauge.chart.leftthird.topthird.rightthird")
    static let sterlingsign_ring: SymbolExtension = SymbolExtension(rawValue: "sterlingsign.ring")
    static let sterlingsign_ring_dashed: SymbolExtension = SymbolExtension(rawValue: "sterlingsign.ring.dashed")
    static let sun_lefthalf_filled: SymbolExtension = SymbolExtension(rawValue: "sun.lefthalf.filled")
    static let sun_righthalf_filled: SymbolExtension = SymbolExtension(rawValue: "sun.righthalf.filled")
    static let suspension_shock: SymbolExtension = SymbolExtension(rawValue: "suspension.shock")
    static let suv_side_front_open_crop: SymbolExtension = SymbolExtension(rawValue: "suv.side.front.open.crop")
    static let suv_side_front_open_crop_fill: SymbolExtension = SymbolExtension(rawValue: "suv.side.front.open.crop.fill")
    static let suv_side_hill_descent_control: SymbolExtension = SymbolExtension(rawValue: "suv.side.hill.descent.control")
    static let suv_side_hill_descent_control_fill: SymbolExtension = SymbolExtension(rawValue: "suv.side.hill.descent.control.fill")
    static let suv_side_rear_open_crop: SymbolExtension = SymbolExtension(rawValue: "suv.side.rear.open.crop")
    static let suv_side_rear_open_crop_fill: SymbolExtension = SymbolExtension(rawValue: "suv.side.rear.open.crop.fill")
    static let suv_side_roof_cargo_carrier: SymbolExtension = SymbolExtension(rawValue: "suv.side.roof.cargo.carrier")
    static let suv_side_roof_cargo_carrier_fill: SymbolExtension = SymbolExtension(rawValue: "suv.side.roof.cargo.carrier.fill")
    static let suv_side_roof_cargo_carrier_slash: SymbolExtension = SymbolExtension(rawValue: "suv.side.roof.cargo.carrier.slash")
    static let suv_side_roof_cargo_carrier_slash_fill: SymbolExtension = SymbolExtension(rawValue: "suv.side.roof.cargo.carrier.slash.fill")
    static let swedishkronasign_arrow_trianglehead_counterclockwise_rotate_90: SymbolExtension = SymbolExtension(rawValue: "swedishkronasign.arrow.trianglehead.counterclockwise.rotate.90")
    static let swedishkronasign_bank_building: SymbolExtension = SymbolExtension(rawValue: "swedishkronasign.bank.building")
    static let swedishkronasign_bank_building_fill: SymbolExtension = SymbolExtension(rawValue: "swedishkronasign.bank.building.fill")
    static let swedishkronasign_gauge_chart_lefthalf_righthalf: SymbolExtension = SymbolExtension(rawValue: "swedishkronasign.gauge.chart.lefthalf.righthalf")
    static let swedishkronasign_gauge_chart_leftthird_topthird_rightthird: SymbolExtension = SymbolExtension(rawValue: "swedishkronasign.gauge.chart.leftthird.topthird.rightthird")
    static let swedishkronasign_ring: SymbolExtension = SymbolExtension(rawValue: "swedishkronasign.ring")
    static let swedishkronasign_ring_dashed: SymbolExtension = SymbolExtension(rawValue: "swedishkronasign.ring.dashed")
    static let tachometer: SymbolExtension = SymbolExtension(rawValue: "tachometer")
    static let tengesign_arrow_trianglehead_counterclockwise_rotate_90: SymbolExtension = SymbolExtension(rawValue: "tengesign.arrow.trianglehead.counterclockwise.rotate.90")
    static let tengesign_bank_building: SymbolExtension = SymbolExtension(rawValue: "tengesign.bank.building")
    static let tengesign_bank_building_fill: SymbolExtension = SymbolExtension(rawValue: "tengesign.bank.building.fill")
    static let tengesign_gauge_chart_lefthalf_righthalf: SymbolExtension = SymbolExtension(rawValue: "tengesign.gauge.chart.lefthalf.righthalf")
    static let tengesign_gauge_chart_leftthird_topthird_rightthird: SymbolExtension = SymbolExtension(rawValue: "tengesign.gauge.chart.leftthird.topthird.rightthird")
    static let tengesign_ring: SymbolExtension = SymbolExtension(rawValue: "tengesign.ring")
    static let tengesign_ring_dashed: SymbolExtension = SymbolExtension(rawValue: "tengesign.ring.dashed")
    static let text_bubble_badge_clock: SymbolExtension = SymbolExtension(rawValue: "text.bubble.badge.clock")
    static let text_bubble_badge_clock_fill: SymbolExtension = SymbolExtension(rawValue: "text.bubble.badge.clock.fill")
    static let text_document: SymbolExtension = SymbolExtension(rawValue: "text.document")
    static let text_document_fill: SymbolExtension = SymbolExtension(rawValue: "text.document.fill")
    static let text_line_magnify: SymbolExtension = SymbolExtension(rawValue: "text.line.magnify")
    static let text_page: SymbolExtension = SymbolExtension(rawValue: "text.page")
    static let text_page_badge_magnifyingglass: SymbolExtension = SymbolExtension(rawValue: "text.page.badge.magnifyingglass")
    static let text_page_fill: SymbolExtension = SymbolExtension(rawValue: "text.page.fill")
    static let text_page_slash: SymbolExtension = SymbolExtension(rawValue: "text.page.slash")
    static let text_page_slash_fill: SymbolExtension = SymbolExtension(rawValue: "text.page.slash.fill")
    static let text_rectangle_page: SymbolExtension = SymbolExtension(rawValue: "text.rectangle.page")
    static let text_rectangle_page_fill: SymbolExtension = SymbolExtension(rawValue: "text.rectangle.page.fill")
    static let textformat_characters: SymbolExtension = SymbolExtension(rawValue: "textformat.characters")
    static let textformat_characters_arrow_left_and_right: SymbolExtension = SymbolExtension(rawValue: "textformat.characters.arrow.left.and.right")
    static let textformat_characters_dottedunderline: SymbolExtension = SymbolExtension(rawValue: "textformat.characters.dottedunderline")
    static let textformat_numbers: SymbolExtension = SymbolExtension(rawValue: "textformat.numbers")
    static let thermometer_and_liquid_waves_snowflake: SymbolExtension = SymbolExtension(rawValue: "thermometer.and.liquid.waves.snowflake")
    static let thermometer_and_liquid_waves_trianglebadge_exclamationmark: SymbolExtension = SymbolExtension(rawValue: "thermometer.and.liquid.waves.trianglebadge.exclamationmark")
    static let thermometer_variable: SymbolExtension = SymbolExtension(rawValue: "thermometer.variable")
    static let tire: SymbolExtension = SymbolExtension(rawValue: "tire")
    static let tire_badge_snowflake: SymbolExtension = SymbolExtension(rawValue: "tire.badge.snowflake")
    static let tow_hitch: SymbolExtension = SymbolExtension(rawValue: "tow.hitch")
    static let tow_hitch_exclamationmark: SymbolExtension = SymbolExtension(rawValue: "tow.hitch.exclamationmark")
    static let tow_hitch_exclamationmark_fill: SymbolExtension = SymbolExtension(rawValue: "tow.hitch.exclamationmark.fill")
    static let tow_hitch_fill: SymbolExtension = SymbolExtension(rawValue: "tow.hitch.fill")
    static let truck_pickup_side_front_open_crop: SymbolExtension = SymbolExtension(rawValue: "truck.pickup.side.front.open.crop")
    static let truck_pickup_side_front_open_crop_fill: SymbolExtension = SymbolExtension(rawValue: "truck.pickup.side.front.open.crop.fill")
    static let truck_side_hill_descent_control: SymbolExtension = SymbolExtension(rawValue: "truck.side.hill.descent.control")
    static let truck_side_hill_descent_control_fill: SymbolExtension = SymbolExtension(rawValue: "truck.side.hill.descent.control.fill")
    static let truck_side_roof_cargo_carrier: SymbolExtension = SymbolExtension(rawValue: "truck.side.roof.cargo.carrier")
    static let truck_side_roof_cargo_carrier_fill: SymbolExtension = SymbolExtension(rawValue: "truck.side.roof.cargo.carrier.fill")
    static let truck_side_roof_cargo_carrier_slash: SymbolExtension = SymbolExtension(rawValue: "truck.side.roof.cargo.carrier.slash")
    static let truck_side_roof_cargo_carrier_slash_fill: SymbolExtension = SymbolExtension(rawValue: "truck.side.roof.cargo.carrier.slash.fill")
    static let tsa: SymbolExtension = SymbolExtension(rawValue: "tsa")
    static let tsa_circle: SymbolExtension = SymbolExtension(rawValue: "tsa.circle")
    static let tsa_circle_fill: SymbolExtension = SymbolExtension(rawValue: "tsa.circle.fill")
    static let tsa_slash: SymbolExtension = SymbolExtension(rawValue: "tsa.slash")
    static let tugriksign_arrow_trianglehead_counterclockwise_rotate_90: SymbolExtension = SymbolExtension(rawValue: "tugriksign.arrow.trianglehead.counterclockwise.rotate.90")
    static let tugriksign_bank_building: SymbolExtension = SymbolExtension(rawValue: "tugriksign.bank.building")
    static let tugriksign_bank_building_fill: SymbolExtension = SymbolExtension(rawValue: "tugriksign.bank.building.fill")
    static let tugriksign_gauge_chart_lefthalf_righthalf: SymbolExtension = SymbolExtension(rawValue: "tugriksign.gauge.chart.lefthalf.righthalf")
    static let tugriksign_gauge_chart_leftthird_topthird_rightthird: SymbolExtension = SymbolExtension(rawValue: "tugriksign.gauge.chart.leftthird.topthird.rightthird")
    static let tugriksign_ring: SymbolExtension = SymbolExtension(rawValue: "tugriksign.ring")
    static let tugriksign_ring_dashed: SymbolExtension = SymbolExtension(rawValue: "tugriksign.ring.dashed")
    static let turkishlirasign_arrow_trianglehead_counterclockwise_rotate_90: SymbolExtension = SymbolExtension(rawValue: "turkishlirasign.arrow.trianglehead.counterclockwise.rotate.90")
    static let turkishlirasign_bank_building: SymbolExtension = SymbolExtension(rawValue: "turkishlirasign.bank.building")
    static let turkishlirasign_bank_building_fill: SymbolExtension = SymbolExtension(rawValue: "turkishlirasign.bank.building.fill")
    static let turkishlirasign_gauge_chart_lefthalf_righthalf: SymbolExtension = SymbolExtension(rawValue: "turkishlirasign.gauge.chart.lefthalf.righthalf")
    static let turkishlirasign_gauge_chart_leftthird_topthird_rightthird: SymbolExtension = SymbolExtension(rawValue: "turkishlirasign.gauge.chart.leftthird.topthird.rightthird")
    static let turkishlirasign_ring: SymbolExtension = SymbolExtension(rawValue: "turkishlirasign.ring")
    static let turkishlirasign_ring_dashed: SymbolExtension = SymbolExtension(rawValue: "turkishlirasign.ring.dashed")
    static let vision_pro: SymbolExtension = SymbolExtension(rawValue: "vision.pro")
    static let vision_pro_and_arrow_forward: SymbolExtension = SymbolExtension(rawValue: "vision.pro.and.arrow.forward")
    static let vision_pro_and_arrow_forward_fill: SymbolExtension = SymbolExtension(rawValue: "vision.pro.and.arrow.forward.fill")
    static let vision_pro_badge_exclamationmark: SymbolExtension = SymbolExtension(rawValue: "vision.pro.badge.exclamationmark")
    static let vision_pro_badge_exclamationmark_fill: SymbolExtension = SymbolExtension(rawValue: "vision.pro.badge.exclamationmark.fill")
    static let vision_pro_badge_play: SymbolExtension = SymbolExtension(rawValue: "vision.pro.badge.play")
    static let vision_pro_badge_play_fill: SymbolExtension = SymbolExtension(rawValue: "vision.pro.badge.play.fill")
    static let vision_pro_circle: SymbolExtension = SymbolExtension(rawValue: "vision.pro.circle")
    static let vision_pro_circle_fill: SymbolExtension = SymbolExtension(rawValue: "vision.pro.circle.fill")
    static let vision_pro_fill: SymbolExtension = SymbolExtension(rawValue: "vision.pro.fill")
    static let vision_pro_slash: SymbolExtension = SymbolExtension(rawValue: "vision.pro.slash")
    static let vision_pro_slash_circle: SymbolExtension = SymbolExtension(rawValue: "vision.pro.slash.circle")
    static let vision_pro_slash_circle_fill: SymbolExtension = SymbolExtension(rawValue: "vision.pro.slash.circle.fill")
    static let vision_pro_slash_fill: SymbolExtension = SymbolExtension(rawValue: "vision.pro.slash.fill")
    static let vision_pro_trianglebadge_exclamationmark: SymbolExtension = SymbolExtension(rawValue: "vision.pro.trianglebadge.exclamationmark")
    static let vision_pro_trianglebadge_exclamationmark_fill: SymbolExtension = SymbolExtension(rawValue: "vision.pro.trianglebadge.exclamationmark.fill")
    static let wallet_bifold: SymbolExtension = SymbolExtension(rawValue: "wallet.bifold")
    static let wallet_bifold_fill: SymbolExtension = SymbolExtension(rawValue: "wallet.bifold.fill")
    static let wand_and_sparkles: SymbolExtension = SymbolExtension(rawValue: "wand.and.sparkles")
    static let wand_and_sparkles_inverse: SymbolExtension = SymbolExtension(rawValue: "wand.and.sparkles.inverse")
    static let water_waves_and_arrow_trianglehead_down: SymbolExtension = SymbolExtension(rawValue: "water.waves.and.arrow.trianglehead.down")
    static let water_waves_and_arrow_trianglehead_down_trianglebadge_exclamationmark: SymbolExtension = SymbolExtension(rawValue: "water.waves.and.arrow.trianglehead.down.trianglebadge.exclamationmark")
    static let water_waves_and_arrow_trianglehead_up: SymbolExtension = SymbolExtension(rawValue: "water.waves.and.arrow.trianglehead.up")
    static let wave_3_down: SymbolExtension = SymbolExtension(rawValue: "wave.3.down")
    static let wave_3_down_car_side: SymbolExtension = SymbolExtension(rawValue: "wave.3.down.car.side")
    static let wave_3_down_car_side_fill: SymbolExtension = SymbolExtension(rawValue: "wave.3.down.car.side.fill")
    static let wave_3_down_circle: SymbolExtension = SymbolExtension(rawValue: "wave.3.down.circle")
    static let wave_3_down_circle_fill: SymbolExtension = SymbolExtension(rawValue: "wave.3.down.circle.fill")
    static let wave_3_down_convertible_side: SymbolExtension = SymbolExtension(rawValue: "wave.3.down.convertible.side")
    static let wave_3_down_convertible_side_fill: SymbolExtension = SymbolExtension(rawValue: "wave.3.down.convertible.side.fill")
    static let wave_3_down_pickup_side: SymbolExtension = SymbolExtension(rawValue: "wave.3.down.pickup.side")
    static let wave_3_down_pickup_side_fill: SymbolExtension = SymbolExtension(rawValue: "wave.3.down.pickup.side.fill")
    static let wave_3_down_suv_side: SymbolExtension = SymbolExtension(rawValue: "wave.3.down.suv.side")
    static let wave_3_down_suv_side_fill: SymbolExtension = SymbolExtension(rawValue: "wave.3.down.suv.side.fill")
    static let wave_3_up: SymbolExtension = SymbolExtension(rawValue: "wave.3.up")
    static let wave_3_up_circle: SymbolExtension = SymbolExtension(rawValue: "wave.3.up.circle")
    static let wave_3_up_circle_fill: SymbolExtension = SymbolExtension(rawValue: "wave.3.up.circle.fill")
    static let waveform_badge_microphone: SymbolExtension = SymbolExtension(rawValue: "waveform.badge.microphone")
    static let wheelchair: SymbolExtension = SymbolExtension(rawValue: "wheelchair")
    static let widget_extralarge: SymbolExtension = SymbolExtension(rawValue: "widget.extralarge")
    static let widget_extralarge_badge_plus: SymbolExtension = SymbolExtension(rawValue: "widget.extralarge.badge.plus")
    static let widget_large: SymbolExtension = SymbolExtension(rawValue: "widget.large")
    static let widget_large_badge_plus: SymbolExtension = SymbolExtension(rawValue: "widget.large.badge.plus")
    static let widget_medium: SymbolExtension = SymbolExtension(rawValue: "widget.medium")
    static let widget_medium_badge_plus: SymbolExtension = SymbolExtension(rawValue: "widget.medium.badge.plus")
    static let widget_small: SymbolExtension = SymbolExtension(rawValue: "widget.small")
    static let widget_small_badge_plus: SymbolExtension = SymbolExtension(rawValue: "widget.small.badge.plus")
    static let wonsign_arrow_trianglehead_counterclockwise_rotate_90: SymbolExtension = SymbolExtension(rawValue: "wonsign.arrow.trianglehead.counterclockwise.rotate.90")
    static let wonsign_bank_building: SymbolExtension = SymbolExtension(rawValue: "wonsign.bank.building")
    static let wonsign_bank_building_fill: SymbolExtension = SymbolExtension(rawValue: "wonsign.bank.building.fill")
    static let wonsign_gauge_chart_lefthalf_righthalf: SymbolExtension = SymbolExtension(rawValue: "wonsign.gauge.chart.lefthalf.righthalf")
    static let wonsign_gauge_chart_leftthird_topthird_rightthird: SymbolExtension = SymbolExtension(rawValue: "wonsign.gauge.chart.leftthird.topthird.rightthird")
    static let wonsign_ring: SymbolExtension = SymbolExtension(rawValue: "wonsign.ring")
    static let wonsign_ring_dashed: SymbolExtension = SymbolExtension(rawValue: "wonsign.ring.dashed")
    static let xmark_triangle_circle_square: SymbolExtension = SymbolExtension(rawValue: "xmark.triangle.circle.square")
    static let xmark_triangle_circle_square_fill: SymbolExtension = SymbolExtension(rawValue: "xmark.triangle.circle.square.fill")
    static let yensign_arrow_trianglehead_counterclockwise_rotate_90: SymbolExtension = SymbolExtension(rawValue: "yensign.arrow.trianglehead.counterclockwise.rotate.90")
    static let yensign_bank_building: SymbolExtension = SymbolExtension(rawValue: "yensign.bank.building")
    static let yensign_bank_building_fill: SymbolExtension = SymbolExtension(rawValue: "yensign.bank.building.fill")
    static let yensign_gauge_chart_lefthalf_righthalf: SymbolExtension = SymbolExtension(rawValue: "yensign.gauge.chart.lefthalf.righthalf")
    static let yensign_gauge_chart_leftthird_topthird_rightthird: SymbolExtension = SymbolExtension(rawValue: "yensign.gauge.chart.leftthird.topthird.rightthird")
    static let yensign_ring: SymbolExtension = SymbolExtension(rawValue: "yensign.ring")
    static let yensign_ring_dashed: SymbolExtension = SymbolExtension(rawValue: "yensign.ring.dashed")
    static let zipper_page: SymbolExtension = SymbolExtension(rawValue: "zipper.page")
}
